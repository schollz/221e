<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="438" onload="init(evt)" viewBox="0 0 1200 438" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<!-- Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples. -->
<!-- NOTES:  -->
<defs>
	<linearGradient id="background" y1="0" y2="1" x1="0" x2="0" >
		<stop stop-color="#eeeeee" offset="5%" />
		<stop stop-color="#eeeeb0" offset="95%" />
	</linearGradient>
</defs>
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search, #ignorecase { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show, #ignorecase:hover, #ignorecase.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching, currentSearchTerm, ignorecase, ignorecaseBtn;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		ignorecaseBtn = document.getElementById("ignorecase");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
		currentSearchTerm = null;

		// use GET parameters to restore a flamegraphs state.
		var params = get_params();
		if (params.x && params.y)
			zoom(find_group(document.querySelector('[x="' + params.x + '"][y="' + params.y + '"]')));
                if (params.s) search(params.s);
	}

	// event listeners
	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom(true);
			zoom(target);
			if (!document.querySelector('.parent')) {
				// we have basically done a clearzoom so clear the url
				var params = get_params();
				if (params.x) delete params.x;
				if (params.y) delete params.y;
				history.replaceState(null, null, parse_params(params));
				unzoombtn.classList.add("hide");
				return;
			}

			// set parameters for zoom state
			var el = target.querySelector("rect");
			if (el && el.attributes && el.attributes.y && el.attributes._orig_x) {
				var params = get_params()
				params.x = el.attributes._orig_x.value;
				params.y = el.attributes.y.value;
				history.replaceState(null, null, parse_params(params));
			}
		}
		else if (e.target.id == "unzoom") clearzoom();
		else if (e.target.id == "search") search_prompt();
		else if (e.target.id == "ignorecase") toggle_ignorecase();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	// ctrl-I to toggle case-sensitive search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
		else if (e.ctrlKey && e.keyCode === 73) {
			e.preventDefault();
			toggle_ignorecase();
		}
	}, false)

	// functions
	function get_params() {
		var params = {};
		var paramsarr = window.location.search.substr(1).split('&');
		for (var i = 0; i < paramsarr.length; ++i) {
			var tmp = paramsarr[i].split("=");
			if (!tmp[0] || !tmp[1]) continue;
			params[tmp[0]]  = decodeURIComponent(tmp[1]);
		}
		return params;
	}
	function parse_params(params) {
		var uri = "?";
		for (var key in params) {
			uri += key + '=' + encodeURIComponent(params[key]) + '&';
		}
		if (uri.slice(-1) == "&")
			uri = uri.substring(0, uri.length - 1);
		if (uri == '?')
			uri = window.location.href.split('?')[0];
		return uri;
	}
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		var sl = t.getSubStringLength(0, txt.length);
		// check if only whitespace or if we can fit the entire string into width w
		if (/^ *$/.test(txt) || sl < w)
			return;

		// this isn't perfect, but gives a good starting point
		// and avoids calling getSubStringLength too often
		var start = Math.floor((w/sl) * txt.length);
		for (var x = start; x > 0; x = x-2) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
		search();
	}
	function unzoom(dont_update_text) {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			if(!dont_update_text) update_text(el[i]);
		}
		search();
	}
	function clearzoom() {
		unzoom();

		// remove zoom state
		var params = get_params();
		if (params.x) delete params.x;
		if (params.y) delete params.y;
		history.replaceState(null, null, parse_params(params));
	}

	// search
	function toggle_ignorecase() {
		ignorecase = !ignorecase;
		if (ignorecase) {
			ignorecaseBtn.classList.add("show");
		} else {
			ignorecaseBtn.classList.remove("show");
		}
		reset_search();
		search();
	}
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
		var params = get_params();
		delete params.s;
		history.replaceState(null, null, parse_params(params));
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)"
			    + (ignorecase ? ", ignoring case" : "")
			    + "\nPress Ctrl-i to toggle case sensitivity", "");
			if (term != null) search(term);
		} else {
			reset_search();
			searching = 0;
			currentSearchTerm = null;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		if (term) currentSearchTerm = term;
		if (currentSearchTerm === null) return;

		var re = new RegExp(currentSearchTerm, ignorecase ? 'i' : '');
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;
		var params = get_params();
		params.s = currentSearchTerm;
		history.replaceState(null, null, parse_params(params));

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0.0" y="0" width="1200.0" height="438.0" fill="url(#background)"  />
<text id="title" x="600.00" y="24" >Flame Graph</text>
<text id="details" x="10.00" y="421" > </text>
<text id="unzoom" x="10.00" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090.00" y="24" >Search</text>
<text id="ignorecase" x="1174.00" y="24" >ic</text>
<text id="matched" x="1090.00" y="421" > </text>
<g id="frames">
<g >
<title>fmt.Sprintf (1 samples, 0.68%)</title><rect x="772.6" y="229" width="8.0" height="15.0" fill="rgb(210,26,6)" rx="2" ry="2" />
<text  x="775.59" y="239.5" ></text>
</g>
<g >
<title>github.com/charmbracelet/x/ansi/parser.TransitionTable.Transition (2 samples, 1.36%)</title><rect x="588.0" y="213" width="16.0" height="15.0" fill="rgb(237,149,35)" rx="2" ry="2" />
<text  x="590.96" y="223.5" ></text>
</g>
<g >
<title>strconv.ParseUint (2 samples, 1.36%)</title><rect x="973.3" y="101" width="16.0" height="15.0" fill="rgb(245,187,44)" rx="2" ry="2" />
<text  x="976.27" y="111.5" ></text>
</g>
<g >
<title>github.com/schollz/2n/internal/input.DebugLogRowEmission (3 samples, 2.04%)</title><rect x="210.7" y="277" width="24.1" height="15.0" fill="rgb(217,59,14)" rx="2" ry="2" />
<text  x="213.68" y="287.5" >g..</text>
</g>
<g >
<title>runtime.mallocgc (1 samples, 0.68%)</title><rect x="98.3" y="293" width="8.0" height="15.0" fill="rgb(241,169,40)" rx="2" ry="2" />
<text  x="101.30" y="303.5" ></text>
</g>
<g >
<title>runtime.(*mspan).base (1 samples, 0.68%)</title><rect x="90.3" y="261" width="8.0" height="15.0" fill="rgb(224,91,21)" rx="2" ry="2" />
<text  x="93.27" y="271.5" ></text>
</g>
<g >
<title>runtime.duffcopy (4 samples, 2.72%)</title><rect x="507.7" y="229" width="32.1" height="15.0" fill="rgb(248,197,47)" rx="2" ry="2" />
<text  x="510.69" y="239.5" >ru..</text>
</g>
<g >
<title>github.com/charmbracelet/lipgloss.Style.Render (53 samples, 36.05%)</title><rect x="331.1" y="261" width="425.4" height="15.0" fill="rgb(224,88,21)" rx="2" ry="2" />
<text  x="334.09" y="271.5" >github.com/charmbracelet/lipgloss.Style.Render</text>
</g>
<g >
<title>runtime.duffcopy (2 samples, 1.36%)</title><rect x="355.2" y="213" width="16.0" height="15.0" fill="rgb(248,197,47)" rx="2" ry="2" />
<text  x="358.17" y="223.5" ></text>
</g>
<g >
<title>os.openFileNolog.func1 (1 samples, 0.68%)</title><rect x="299.0" y="213" width="8.0" height="15.0" fill="rgb(242,173,41)" rx="2" ry="2" />
<text  x="301.98" y="223.5" ></text>
</g>
<g >
<title>runtime.duffcopy (3 samples, 2.04%)</title><rect x="387.3" y="229" width="24.1" height="15.0" fill="rgb(248,197,47)" rx="2" ry="2" />
<text  x="390.28" y="239.5" >r..</text>
</g>
<g >
<title>fmt.(*pp).printArg (1 samples, 0.68%)</title><rect x="323.1" y="229" width="8.0" height="15.0" fill="rgb(245,185,44)" rx="2" ry="2" />
<text  x="326.06" y="239.5" ></text>
</g>
<g >
<title>github.com/schollz/2n/internal/views.RenderSamplerPhraseView (66 samples, 44.90%)</title><rect x="315.0" y="277" width="529.8" height="15.0" fill="rgb(228,109,26)" rx="2" ry="2" />
<text  x="318.03" y="287.5" >github.com/schollz/2n/internal/views.RenderSamplerPhraseView</text>
</g>
<g >
<title>net.(*conf).lookupOrder (1 samples, 0.68%)</title><rect x="74.2" y="293" width="8.0" height="15.0" fill="rgb(252,217,52)" rx="2" ry="2" />
<text  x="77.22" y="303.5" ></text>
</g>
<g >
<title>fmt.(*pp).printArg (1 samples, 0.68%)</title><rect x="644.1" y="197" width="8.1" height="15.0" fill="rgb(245,185,44)" rx="2" ry="2" />
<text  x="647.15" y="207.5" ></text>
</g>
<g >
<title>encoding/json.(*decodeState).value (20 samples, 13.61%)</title><rect x="868.9" y="181" width="160.6" height="15.0" fill="rgb(233,132,31)" rx="2" ry="2" />
<text  x="871.91" y="191.5" >encoding/json.(*deco..</text>
</g>
<g >
<title>runtime.makeslice (4 samples, 2.72%)</title><rect x="130.4" y="309" width="32.1" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="133.41" y="319.5" >ru..</text>
</g>
<g >
<title>syscall.RawSyscall6 (2 samples, 1.36%)</title><rect x="114.4" y="181" width="16.0" height="15.0" fill="rgb(241,167,40)" rx="2" ry="2" />
<text  x="117.35" y="191.5" ></text>
</g>
<g >
<title>runtime.memmove (1 samples, 0.68%)</title><rect x="828.8" y="245" width="8.0" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="831.78" y="255.5" ></text>
</g>
<g >
<title>github.com/charmbracelet/x/ansi.StringWidth (1 samples, 0.68%)</title><rect x="34.1" y="357" width="8.0" height="15.0" fill="rgb(210,26,6)" rx="2" ry="2" />
<text  x="37.08" y="367.5" ></text>
</g>
<g >
<title>strings.ReplaceAll (1 samples, 0.68%)</title><rect x="780.6" y="229" width="8.0" height="15.0" fill="rgb(253,222,53)" rx="2" ry="2" />
<text  x="783.61" y="239.5" ></text>
</g>
<g >
<title>net.(*UDPConn).ReadFrom (3 samples, 2.04%)</title><rect x="106.3" y="309" width="24.1" height="15.0" fill="rgb(221,76,18)" rx="2" ry="2" />
<text  x="109.33" y="319.5" >n..</text>
</g>
<g >
<title>runtime.memclrNoHeapPointersChunked (3 samples, 2.04%)</title><rect x="138.4" y="261" width="24.1" height="15.0" fill="rgb(241,169,40)" rx="2" ry="2" />
<text  x="141.44" y="271.5" >r..</text>
</g>
<g >
<title>syscall.Open (1 samples, 0.68%)</title><rect x="299.0" y="197" width="8.0" height="15.0" fill="rgb(240,163,39)" rx="2" ry="2" />
<text  x="301.98" y="207.5" ></text>
</g>
<g >
<title>os.WriteFile (1 samples, 0.68%)</title><rect x="299.0" y="245" width="8.0" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="301.98" y="255.5" ></text>
</g>
<g >
<title>runtime.(*scavengerState).init.func2 (1 samples, 0.68%)</title><rect x="170.5" y="341" width="8.1" height="15.0" fill="rgb(233,131,31)" rx="2" ry="2" />
<text  x="173.54" y="351.5" ></text>
</g>
<g >
<title>encoding/json.(*decodeState).unmarshal (21 samples, 14.29%)</title><rect x="868.9" y="293" width="168.6" height="15.0" fill="rgb(206,4,1)" rx="2" ry="2" />
<text  x="871.91" y="303.5" >encoding/json.(*decod..</text>
</g>
<g >
<title>strings.ReplaceAll (1 samples, 0.68%)</title><rect x="836.8" y="261" width="8.0" height="15.0" fill="rgb(253,222,53)" rx="2" ry="2" />
<text  x="839.80" y="271.5" ></text>
</g>
<g >
<title>github.com/charmbracelet/bubbletea.(*Program).handleCommands.func1 (1 samples, 0.68%)</title><rect x="18.0" y="373" width="8.1" height="15.0" fill="rgb(235,140,33)" rx="2" ry="2" />
<text  x="21.03" y="383.5" ></text>
</g>
<g >
<title>strconv.AppendInt (1 samples, 0.68%)</title><rect x="274.9" y="85" width="8.0" height="15.0" fill="rgb(250,210,50)" rx="2" ry="2" />
<text  x="277.90" y="95.5" ></text>
</g>
<g >
<title>github.com/rivo/uniseg.FirstGraphemeClusterInString (1 samples, 0.68%)</title><rect x="34.1" y="325" width="8.0" height="15.0" fill="rgb(237,148,35)" rx="2" ry="2" />
<text  x="37.08" y="335.5" ></text>
</g>
<g >
<title>github.com/charmbracelet/x/ansi.stringWidth (4 samples, 2.72%)</title><rect x="555.9" y="213" width="32.1" height="15.0" fill="rgb(253,225,53)" rx="2" ry="2" />
<text  x="558.85" y="223.5" >gi..</text>
</g>
<g >
<title>runtime.mallocgc (1 samples, 0.68%)</title><rect x="42.1" y="261" width="8.0" height="15.0" fill="rgb(241,169,40)" rx="2" ry="2" />
<text  x="45.11" y="271.5" ></text>
</g>
<g >
<title>runtime.growslice (1 samples, 0.68%)</title><rect x="42.1" y="277" width="8.0" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="45.11" y="287.5" ></text>
</g>
<g >
<title>encoding/json.(*decodeState).rescanLiteral (1 samples, 0.68%)</title><rect x="989.3" y="133" width="8.0" height="15.0" fill="rgb(238,153,36)" rx="2" ry="2" />
<text  x="992.32" y="143.5" ></text>
</g>
<g >
<title>log.Printf (1 samples, 0.68%)</title><rect x="226.7" y="261" width="8.1" height="15.0" fill="rgb(235,142,34)" rx="2" ry="2" />
<text  x="229.73" y="271.5" ></text>
</g>
<g >
<title>path/filepath.walk (1 samples, 0.68%)</title><rect x="202.7" y="277" width="8.0" height="15.0" fill="rgb(248,200,48)" rx="2" ry="2" />
<text  x="205.65" y="287.5" ></text>
</g>
<g >
<title>main.TrackerModel.View (68 samples, 46.26%)</title><rect x="307.0" y="309" width="545.9" height="15.0" fill="rgb(208,17,4)" rx="2" ry="2" />
<text  x="310.01" y="319.5" >main.TrackerModel.View</text>
</g>
<g >
<title>runtime.scanobject (1 samples, 0.68%)</title><rect x="194.6" y="309" width="8.1" height="15.0" fill="rgb(233,131,31)" rx="2" ry="2" />
<text  x="197.63" y="319.5" ></text>
</g>
<g >
<title>reflect.Value.Int (1 samples, 0.68%)</title><rect x="258.8" y="101" width="8.1" height="15.0" fill="rgb(212,36,8)" rx="2" ry="2" />
<text  x="261.84" y="111.5" ></text>
</g>
<g >
<title>runtime.duffzero (1 samples, 0.68%)</title><rect x="226.7" y="117" width="8.1" height="15.0" fill="rgb(215,49,11)" rx="2" ry="2" />
<text  x="229.73" y="127.5" ></text>
</g>
<g >
<title>github.com/charmbracelet/lipgloss.alignTextHorizontal (8 samples, 5.44%)</title><rect x="547.8" y="245" width="64.2" height="15.0" fill="rgb(231,123,29)" rx="2" ry="2" />
<text  x="550.82" y="255.5" >github...</text>
</g>
<g >
<title>runtime.(*mheap).initSpan (1 samples, 0.68%)</title><rect x="42.1" y="101" width="8.0" height="15.0" fill="rgb(245,187,44)" rx="2" ry="2" />
<text  x="45.11" y="111.5" ></text>
</g>
<g >
<title>syscall.read (1 samples, 0.68%)</title><rect x="1061.6" y="245" width="8.0" height="15.0" fill="rgb(226,96,23)" rx="2" ry="2" />
<text  x="1064.56" y="255.5" ></text>
</g>
<g >
<title>encoding/json.(*scanner).pushParseState (1 samples, 0.68%)</title><rect x="1053.5" y="261" width="8.1" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="1056.54" y="271.5" ></text>
</g>
<g >
<title>os.ReadFile (1 samples, 0.68%)</title><rect x="1061.6" y="309" width="8.0" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="1064.56" y="319.5" ></text>
</g>
<g >
<title>github.com/charmbracelet/lipgloss.Style.getAsInt (4 samples, 2.72%)</title><rect x="411.4" y="229" width="32.1" height="15.0" fill="rgb(240,162,38)" rx="2" ry="2" />
<text  x="414.36" y="239.5" >gi..</text>
</g>
<g >
<title>runtime.bgscavenge (1 samples, 0.68%)</title><rect x="170.5" y="373" width="8.1" height="15.0" fill="rgb(228,109,26)" rx="2" ry="2" />
<text  x="173.54" y="383.5" ></text>
</g>
<g >
<title>runtime.makeslice (1 samples, 0.68%)</title><rect x="82.2" y="309" width="8.1" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="85.24" y="319.5" ></text>
</g>
<g >
<title>runtime.(*mheap).freeSpanLocked (1 samples, 0.68%)</title><rect x="178.6" y="293" width="8.0" height="15.0" fill="rgb(224,91,21)" rx="2" ry="2" />
<text  x="181.57" y="303.5" ></text>
</g>
<g >
<title>runtime.stealWork (5 samples, 3.40%)</title><rect x="1149.9" y="309" width="40.1" height="15.0" fill="rgb(253,224,53)" rx="2" ry="2" />
<text  x="1152.86" y="319.5" >run..</text>
</g>
<g >
<title>fmt.(*buffer).writeString (1 samples, 0.68%)</title><rect x="644.1" y="149" width="8.1" height="15.0" fill="rgb(205,1,0)" rx="2" ry="2" />
<text  x="647.15" y="159.5" ></text>
</g>
<g >
<title>reflect.Value.grow (3 samples, 2.04%)</title><rect x="1005.4" y="133" width="24.1" height="15.0" fill="rgb(206,8,1)" rx="2" ry="2" />
<text  x="1008.37" y="143.5" >r..</text>
</g>
<g >
<title>encoding/json.(*decodeState).value (21 samples, 14.29%)</title><rect x="868.9" y="277" width="168.6" height="15.0" fill="rgb(233,132,31)" rx="2" ry="2" />
<text  x="871.91" y="287.5" >encoding/json.(*decod..</text>
</g>
<g >
<title>github.com/hypebeast/go-osc/osc.(*Server).Serve (10 samples, 6.80%)</title><rect x="82.2" y="341" width="80.3" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="85.24" y="351.5" >github.co..</text>
</g>
<g >
<title>runtime.mallocgcSmallScanNoHeader (1 samples, 0.68%)</title><rect x="66.2" y="229" width="8.0" height="15.0" fill="rgb(216,53,12)" rx="2" ry="2" />
<text  x="69.19" y="239.5" ></text>
</g>
<g >
<title>encoding/json.checkValid (3 samples, 2.04%)</title><rect x="1037.5" y="293" width="24.1" height="15.0" fill="rgb(239,156,37)" rx="2" ry="2" />
<text  x="1040.48" y="303.5" >e..</text>
</g>
<g >
<title>github.com/charmbracelet/x/ansi.stringWidth (7 samples, 4.76%)</title><rect x="443.5" y="213" width="56.2" height="15.0" fill="rgb(253,225,53)" rx="2" ry="2" />
<text  x="446.47" y="223.5" >githu..</text>
</g>
<g >
<title>strings.(*Builder).WriteString (1 samples, 0.68%)</title><rect x="844.8" y="277" width="8.1" height="15.0" fill="rgb(251,212,50)" rx="2" ry="2" />
<text  x="847.83" y="287.5" ></text>
</g>
<g >
<title>runtime.growslice (1 samples, 0.68%)</title><rect x="844.8" y="261" width="8.1" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="847.83" y="271.5" ></text>
</g>
<g >
<title>encoding/json.arrayEncoder.encode (4 samples, 2.72%)</title><rect x="234.8" y="181" width="32.1" height="15.0" fill="rgb(216,55,13)" rx="2" ry="2" />
<text  x="237.76" y="191.5" >en..</text>
</g>
<g >
<title>reflect.(*rtype).typeOff (4 samples, 2.72%)</title><rect x="933.1" y="85" width="32.1" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="936.13" y="95.5" >re..</text>
</g>
<g >
<title>github.com/charmbracelet/bubbletea.(*Program).handleCommands.func1.1 (1 samples, 0.68%)</title><rect x="10.0" y="373" width="8.0" height="15.0" fill="rgb(221,78,18)" rx="2" ry="2" />
<text  x="13.00" y="383.5" ></text>
</g>
<g >
<title>main.main.func4 (10 samples, 6.80%)</title><rect x="82.2" y="373" width="80.3" height="15.0" fill="rgb(229,111,26)" rx="2" ry="2" />
<text  x="85.24" y="383.5" >main.main..</text>
</g>
<g >
<title>internal/poll.(*FD).ReadFromInet6 (2 samples, 1.36%)</title><rect x="114.4" y="245" width="16.0" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="117.35" y="255.5" ></text>
</g>
<g >
<title>runtime.nextFreeFast (1 samples, 0.68%)</title><rect x="1005.4" y="69" width="8.0" height="15.0" fill="rgb(227,102,24)" rx="2" ry="2" />
<text  x="1008.37" y="79.5" ></text>
</g>
<g >
<title>bytes.(*Buffer).ReadFrom (1 samples, 0.68%)</title><rect x="162.5" y="277" width="8.0" height="15.0" fill="rgb(211,31,7)" rx="2" ry="2" />
<text  x="165.52" y="287.5" ></text>
</g>
<g >
<title>runtime.notesleep (3 samples, 2.04%)</title><rect x="1101.7" y="293" width="24.1" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="1104.70" y="303.5" >r..</text>
</g>
<g >
<title>runtime.(*mcentral).cacheSpan (1 samples, 0.68%)</title><rect x="812.7" y="165" width="8.0" height="15.0" fill="rgb(244,179,42)" rx="2" ry="2" />
<text  x="815.72" y="175.5" ></text>
</g>
<g >
<title>syscall.openat (1 samples, 0.68%)</title><rect x="299.0" y="181" width="8.0" height="15.0" fill="rgb(207,13,3)" rx="2" ry="2" />
<text  x="301.98" y="191.5" ></text>
</g>
<g >
<title>encoding/json.arrayEncoder.encode (4 samples, 2.72%)</title><rect x="266.9" y="181" width="32.1" height="15.0" fill="rgb(216,55,13)" rx="2" ry="2" />
<text  x="269.87" y="191.5" >en..</text>
</g>
<g >
<title>syscall.Read (1 samples, 0.68%)</title><rect x="1061.6" y="261" width="8.0" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="1064.56" y="271.5" ></text>
</g>
<g >
<title>regexp.Compile (3 samples, 2.04%)</title><rect x="50.1" y="325" width="24.1" height="15.0" fill="rgb(205,0,0)" rx="2" ry="2" />
<text  x="53.14" y="335.5" >r..</text>
</g>
<g >
<title>encoding/json.arrayEncoder.encode (4 samples, 2.72%)</title><rect x="266.9" y="117" width="32.1" height="15.0" fill="rgb(216,55,13)" rx="2" ry="2" />
<text  x="269.87" y="127.5" >en..</text>
</g>
<g >
<title>bytes.(*Buffer).grow (1 samples, 0.68%)</title><rect x="42.1" y="309" width="8.0" height="15.0" fill="rgb(238,155,37)" rx="2" ry="2" />
<text  x="45.11" y="319.5" ></text>
</g>
<g >
<title>runtime.(*pageCache).alloc (1 samples, 0.68%)</title><rect x="130.4" y="181" width="8.0" height="15.0" fill="rgb(217,59,14)" rx="2" ry="2" />
<text  x="133.41" y="191.5" ></text>
</g>
<g >
<title>encoding/json.structEncoder.encode (4 samples, 2.72%)</title><rect x="234.8" y="197" width="32.1" height="15.0" fill="rgb(251,213,50)" rx="2" ry="2" />
<text  x="237.76" y="207.5" >en..</text>
</g>
<g >
<title>github.com/schollz/2n/internal/views.RenderPhraseView (67 samples, 45.58%)</title><rect x="315.0" y="293" width="537.9" height="15.0" fill="rgb(205,3,0)" rx="2" ry="2" />
<text  x="318.03" y="303.5" >github.com/schollz/2n/internal/views.RenderPhraseView</text>
</g>
<g >
<title>github.com/charmbracelet/lipgloss.Style.applyBorder (9 samples, 6.12%)</title><rect x="339.1" y="245" width="72.3" height="15.0" fill="rgb(234,134,32)" rx="2" ry="2" />
<text  x="342.12" y="255.5" >github.c..</text>
</g>
<g >
<title>github.com/schollz/2n/internal/input.EmitRowDataFor.Printf.func15 (1 samples, 0.68%)</title><rect x="226.7" y="229" width="8.1" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="229.73" y="239.5" ></text>
</g>
<g >
<title>syscall.RawSyscall6 (1 samples, 0.68%)</title><rect x="299.0" y="149" width="8.0" height="15.0" fill="rgb(241,167,40)" rx="2" ry="2" />
<text  x="301.98" y="159.5" ></text>
</g>
<g >
<title>fmt.(*buffer).write (1 samples, 0.68%)</title><rect x="772.6" y="149" width="8.0" height="15.0" fill="rgb(231,121,29)" rx="2" ry="2" />
<text  x="775.59" y="159.5" ></text>
</g>
<g >
<title>encoding/json.arrayEncoder.encode (4 samples, 2.72%)</title><rect x="234.8" y="117" width="32.1" height="15.0" fill="rgb(216,55,13)" rx="2" ry="2" />
<text  x="237.76" y="127.5" >en..</text>
</g>
<g >
<title>encoding/json.indirect (9 samples, 6.12%)</title><rect x="893.0" y="117" width="72.2" height="15.0" fill="rgb(246,192,45)" rx="2" ry="2" />
<text  x="895.99" y="127.5" >encoding..</text>
</g>
<g >
<title>net.(*sysDialer).dialUDP (1 samples, 0.68%)</title><rect x="218.7" y="197" width="8.0" height="15.0" fill="rgb(210,25,5)" rx="2" ry="2" />
<text  x="221.71" y="207.5" ></text>
</g>
<g >
<title>runtime.rtype.typeOff (4 samples, 2.72%)</title><rect x="933.1" y="69" width="32.1" height="15.0" fill="rgb(253,224,53)" rx="2" ry="2" />
<text  x="936.13" y="79.5" >ru..</text>
</g>
<g >
<title>runtime.mallocgcSmallNoscan (1 samples, 0.68%)</title><rect x="82.2" y="277" width="8.1" height="15.0" fill="rgb(239,156,37)" rx="2" ry="2" />
<text  x="85.24" y="287.5" ></text>
</g>
<g >
<title>bytes.(*Buffer).tryGrowByReslice (1 samples, 0.68%)</title><rect x="234.8" y="101" width="8.0" height="15.0" fill="rgb(227,101,24)" rx="2" ry="2" />
<text  x="237.76" y="111.5" ></text>
</g>
<g >
<title>github.com/schollz/2n/internal/storage.AutoSave (5 samples, 3.40%)</title><rect x="266.9" y="261" width="40.1" height="15.0" fill="rgb(230,116,27)" rx="2" ry="2" />
<text  x="269.87" y="271.5" >git..</text>
</g>
<g >
<title>path/filepath.walk (1 samples, 0.68%)</title><rect x="202.7" y="197" width="8.0" height="15.0" fill="rgb(248,200,48)" rx="2" ry="2" />
<text  x="205.65" y="207.5" ></text>
</g>
<g >
<title>runtime.(*unwinder).resolveInternal (1 samples, 0.68%)</title><rect x="74.2" y="229" width="8.0" height="15.0" fill="rgb(212,33,8)" rx="2" ry="2" />
<text  x="77.22" y="239.5" ></text>
</g>
<g >
<title>runtime.(*mcache).refill (2 samples, 1.36%)</title><rect x="812.7" y="181" width="16.1" height="15.0" fill="rgb(232,124,29)" rx="2" ry="2" />
<text  x="815.72" y="191.5" ></text>
</g>
<g >
<title>net.(*Resolver).lookupIPAddr.func1 (1 samples, 0.68%)</title><rect x="74.2" y="357" width="8.0" height="15.0" fill="rgb(253,225,53)" rx="2" ry="2" />
<text  x="77.22" y="367.5" ></text>
</g>
<g >
<title>io.Copy (1 samples, 0.68%)</title><rect x="162.5" y="309" width="8.0" height="15.0" fill="rgb(216,50,12)" rx="2" ry="2" />
<text  x="165.52" y="319.5" ></text>
</g>
<g >
<title>runtime.selectgo (1 samples, 0.68%)</title><rect x="18.0" y="357" width="8.1" height="15.0" fill="rgb(212,35,8)" rx="2" ry="2" />
<text  x="21.03" y="367.5" ></text>
</g>
<g >
<title>runtime.memclrNoHeapPointers (1 samples, 0.68%)</title><rect x="250.8" y="37" width="8.0" height="15.0" fill="rgb(252,219,52)" rx="2" ry="2" />
<text  x="253.82" y="47.5" ></text>
</g>
<g >
<title>github.com/schollz/2n/internal/storage.AutoSave (4 samples, 2.72%)</title><rect x="234.8" y="261" width="32.1" height="15.0" fill="rgb(230,116,27)" rx="2" ry="2" />
<text  x="237.76" y="271.5" >gi..</text>
</g>
<g >
<title>runtime.systemstack (1 samples, 0.68%)</title><rect x="194.6" y="357" width="8.1" height="15.0" fill="rgb(206,6,1)" rx="2" ry="2" />
<text  x="197.63" y="367.5" ></text>
</g>
<g >
<title>strings.(*Builder).WriteString (4 samples, 2.72%)</title><rect x="804.7" y="261" width="32.1" height="15.0" fill="rgb(251,212,50)" rx="2" ry="2" />
<text  x="807.69" y="271.5" >st..</text>
</g>
<g >
<title>runtime.(*m).clearAllpSnapshot (1 samples, 0.68%)</title><rect x="1093.7" y="309" width="8.0" height="15.0" fill="rgb(214,41,10)" rx="2" ry="2" />
<text  x="1096.67" y="319.5" ></text>
</g>
<g >
<title>runtime.mapaccess1_fast32 (3 samples, 2.04%)</title><rect x="941.2" y="37" width="24.0" height="15.0" fill="rgb(220,72,17)" rx="2" ry="2" />
<text  x="944.16" y="47.5" >r..</text>
</g>
<g >
<title>fmt.(*pp).doPrintf (1 samples, 0.68%)</title><rect x="226.7" y="197" width="8.1" height="15.0" fill="rgb(251,215,51)" rx="2" ry="2" />
<text  x="229.73" y="207.5" ></text>
</g>
<g >
<title>runtime.(*timer).stop (1 samples, 0.68%)</title><rect x="10.0" y="325" width="8.0" height="15.0" fill="rgb(234,134,32)" rx="2" ry="2" />
<text  x="13.00" y="335.5" ></text>
</g>
<g >
<title>github.com/schollz/2n/internal/model.(*Model).SendOSCSamplerMessage (1 samples, 0.68%)</title><rect x="218.7" y="245" width="8.0" height="15.0" fill="rgb(239,156,37)" rx="2" ry="2" />
<text  x="221.71" y="255.5" ></text>
</g>
<g >
<title>runtime.newobject (1 samples, 0.68%)</title><rect x="90.3" y="309" width="8.0" height="15.0" fill="rgb(221,75,18)" rx="2" ry="2" />
<text  x="93.27" y="319.5" ></text>
</g>
<g >
<title>strconv.formatBits (1 samples, 0.68%)</title><rect x="274.9" y="69" width="8.0" height="15.0" fill="rgb(218,64,15)" rx="2" ry="2" />
<text  x="277.90" y="79.5" ></text>
</g>
<g >
<title>os.(*File).read (1 samples, 0.68%)</title><rect x="162.5" y="261" width="8.0" height="15.0" fill="rgb(222,81,19)" rx="2" ry="2" />
<text  x="165.52" y="271.5" ></text>
</g>
<g >
<title>fmt.Appendf (1 samples, 0.68%)</title><rect x="226.7" y="213" width="8.1" height="15.0" fill="rgb(219,65,15)" rx="2" ry="2" />
<text  x="229.73" y="223.5" ></text>
</g>
<g >
<title>runtime.(*mcentral).grow (1 samples, 0.68%)</title><rect x="812.7" y="149" width="8.0" height="15.0" fill="rgb(233,130,31)" rx="2" ry="2" />
<text  x="815.72" y="159.5" ></text>
</g>
<g >
<title>internal/runtime/syscall.Syscall6 (2 samples, 1.36%)</title><rect x="1125.8" y="277" width="16.0" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="1128.78" y="287.5" ></text>
</g>
<g >
<title>github.com/schollz/2n/internal/supercollider.HasRequiredExtensions (1 samples, 0.68%)</title><rect x="202.7" y="357" width="8.0" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="205.65" y="367.5" ></text>
</g>
<g >
<title>github.com/charmbracelet/bubbletea.(*standardRenderer).listen (3 samples, 2.04%)</title><rect x="26.1" y="373" width="24.0" height="15.0" fill="rgb(224,87,21)" rx="2" ry="2" />
<text  x="29.05" y="383.5" >g..</text>
</g>
<g >
<title>runtime.(*mcache).nextFree (1 samples, 0.68%)</title><rect x="66.2" y="213" width="8.0" height="15.0" fill="rgb(222,80,19)" rx="2" ry="2" />
<text  x="69.19" y="223.5" ></text>
</g>
<g >
<title>strings.Count (1 samples, 0.68%)</title><rect x="788.6" y="213" width="8.1" height="15.0" fill="rgb(224,91,21)" rx="2" ry="2" />
<text  x="791.64" y="223.5" ></text>
</g>
<g >
<title>runtime.memclrNoHeapPointers (3 samples, 2.04%)</title><rect x="138.4" y="245" width="24.1" height="15.0" fill="rgb(252,219,52)" rx="2" ry="2" />
<text  x="141.44" y="255.5" >r..</text>
</g>
<g >
<title>net.(*netFD).readFromInet6 (2 samples, 1.36%)</title><rect x="114.4" y="261" width="16.0" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="117.35" y="271.5" ></text>
</g>
<g >
<title>log.(*Logger).output (1 samples, 0.68%)</title><rect x="226.7" y="245" width="8.1" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="229.73" y="255.5" ></text>
</g>
<g >
<title>github.com/charmbracelet/lipgloss.Style.getAsColor (3 samples, 2.04%)</title><rect x="347.1" y="229" width="24.1" height="15.0" fill="rgb(220,72,17)" rx="2" ry="2" />
<text  x="350.14" y="239.5" >g..</text>
</g>
<g >
<title>fmt.(*pp).doPrintf (1 samples, 0.68%)</title><rect x="772.6" y="213" width="8.0" height="15.0" fill="rgb(251,215,51)" rx="2" ry="2" />
<text  x="775.59" y="223.5" ></text>
</g>
<g >
<title>github.com/charmbracelet/lipgloss.Style.getAsBool (2 samples, 1.36%)</title><rect x="756.5" y="261" width="16.1" height="15.0" fill="rgb(213,40,9)" rx="2" ry="2" />
<text  x="759.53" y="271.5" ></text>
</g>
<g >
<title>reflect.(*structType).Field (1 samples, 0.68%)</title><rect x="226.7" y="133" width="8.1" height="15.0" fill="rgb(237,150,36)" rx="2" ry="2" />
<text  x="229.73" y="143.5" ></text>
</g>
<g >
<title>bufio.NewReaderSize (2 samples, 1.36%)</title><rect x="82.2" y="325" width="16.1" height="15.0" fill="rgb(249,205,49)" rx="2" ry="2" />
<text  x="85.24" y="335.5" ></text>
</g>
<g >
<title>runtime.(*mcentral).uncacheSpan (1 samples, 0.68%)</title><rect x="820.7" y="165" width="8.1" height="15.0" fill="rgb(227,104,24)" rx="2" ry="2" />
<text  x="823.75" y="175.5" ></text>
</g>
<g >
<title>runtime.growslice (1 samples, 0.68%)</title><rect x="58.2" y="245" width="8.0" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="61.16" y="255.5" ></text>
</g>
<g >
<title>main.initialModel (27 samples, 18.37%)</title><rect x="852.9" y="341" width="216.7" height="15.0" fill="rgb(217,55,13)" rx="2" ry="2" />
<text  x="855.86" y="351.5" >main.initialModel</text>
</g>
<g >
<title>runtime.asyncPreempt (1 samples, 0.68%)</title><rect x="788.6" y="197" width="8.1" height="15.0" fill="rgb(243,174,41)" rx="2" ry="2" />
<text  x="791.64" y="207.5" ></text>
</g>
<g >
<title>runtime.mallocgc (3 samples, 2.04%)</title><rect x="804.7" y="229" width="24.1" height="15.0" fill="rgb(241,169,40)" rx="2" ry="2" />
<text  x="807.69" y="239.5" >r..</text>
</g>
<g >
<title>runtime.pMask.read (1 samples, 0.68%)</title><rect x="1141.8" y="309" width="8.1" height="15.0" fill="rgb(239,156,37)" rx="2" ry="2" />
<text  x="1144.84" y="319.5" ></text>
</g>
<g >
<title>github.com/charmbracelet/x/ansi.stringWidth (1 samples, 0.68%)</title><rect x="34.1" y="341" width="8.0" height="15.0" fill="rgb(253,225,53)" rx="2" ry="2" />
<text  x="37.08" y="351.5" ></text>
</g>
<g >
<title>runtime.unlockWithRank (1 samples, 0.68%)</title><rect x="1165.9" y="181" width="8.0" height="15.0" fill="rgb(247,197,47)" rx="2" ry="2" />
<text  x="1168.92" y="191.5" ></text>
</g>
<g >
<title>runtime.(*mcache).nextFree (1 samples, 0.68%)</title><rect x="42.1" y="229" width="8.0" height="15.0" fill="rgb(222,80,19)" rx="2" ry="2" />
<text  x="45.11" y="239.5" ></text>
</g>
<g >
<title>runtime.growslice (3 samples, 2.04%)</title><rect x="1005.4" y="101" width="24.1" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="1008.37" y="111.5" >r..</text>
</g>
<g >
<title>runtime.(*timer).unlockAndRun (3 samples, 2.04%)</title><rect x="1157.9" y="261" width="24.1" height="15.0" fill="rgb(232,126,30)" rx="2" ry="2" />
<text  x="1160.89" y="271.5" >r..</text>
</g>
<g >
<title>runtime.(*mcache).allocLarge (1 samples, 0.68%)</title><rect x="130.4" y="261" width="8.0" height="15.0" fill="rgb(253,221,53)" rx="2" ry="2" />
<text  x="133.41" y="271.5" ></text>
</g>
<g >
<title>github.com/schollz/2n/internal/views.RenderHeader (1 samples, 0.68%)</title><rect x="307.0" y="261" width="8.0" height="15.0" fill="rgb(228,109,26)" rx="2" ry="2" />
<text  x="310.01" y="271.5" ></text>
</g>
<g >
<title>encoding/json.(*decodeState).array (21 samples, 14.29%)</title><rect x="868.9" y="197" width="168.6" height="15.0" fill="rgb(220,72,17)" rx="2" ry="2" />
<text  x="871.91" y="207.5" >encoding/json.(*decod..</text>
</g>
<g >
<title>github.com/hypebeast/go-osc/osc.(*Client).Send (1 samples, 0.68%)</title><rect x="218.7" y="229" width="8.0" height="15.0" fill="rgb(230,115,27)" rx="2" ry="2" />
<text  x="221.71" y="239.5" ></text>
</g>
<g >
<title>path/filepath.Walk (1 samples, 0.68%)</title><rect x="202.7" y="325" width="8.0" height="15.0" fill="rgb(205,1,0)" rx="2" ry="2" />
<text  x="205.65" y="335.5" ></text>
</g>
<g >
<title>syscall.Lstat (1 samples, 0.68%)</title><rect x="202.7" y="149" width="8.0" height="15.0" fill="rgb(228,107,25)" rx="2" ry="2" />
<text  x="205.65" y="159.5" ></text>
</g>
<g >
<title>fmt.(*pp).printValue (1 samples, 0.68%)</title><rect x="226.7" y="165" width="8.1" height="15.0" fill="rgb(229,110,26)" rx="2" ry="2" />
<text  x="229.73" y="175.5" ></text>
</g>
<g >
<title>github.com/hypebeast/go-osc/osc.(*Message).Match (3 samples, 2.04%)</title><rect x="50.1" y="357" width="24.1" height="15.0" fill="rgb(231,122,29)" rx="2" ry="2" />
<text  x="53.14" y="367.5" >g..</text>
</g>
<g >
<title>github.com/charmbracelet/lipgloss.Style.implicitBorders (2 samples, 1.36%)</title><rect x="371.2" y="229" width="16.1" height="15.0" fill="rgb(245,184,44)" rx="2" ry="2" />
<text  x="374.22" y="239.5" ></text>
</g>
<g >
<title>runtime.findRunnable (3 samples, 2.04%)</title><rect x="1069.6" y="325" width="24.1" height="15.0" fill="rgb(219,64,15)" rx="2" ry="2" />
<text  x="1072.59" y="335.5" >r..</text>
</g>
<g >
<title>time.Time.Add (1 samples, 0.68%)</title><rect x="1173.9" y="229" width="8.1" height="15.0" fill="rgb(245,187,44)" rx="2" ry="2" />
<text  x="1176.95" y="239.5" ></text>
</g>
<g >
<title>encoding/json.sliceEncoder.encode (4 samples, 2.72%)</title><rect x="234.8" y="165" width="32.1" height="15.0" fill="rgb(213,40,9)" rx="2" ry="2" />
<text  x="237.76" y="175.5" >en..</text>
</g>
<g >
<title>github.com/rivo/uniseg.runeWidth (1 samples, 0.68%)</title><rect x="571.9" y="181" width="8.0" height="15.0" fill="rgb(235,140,33)" rx="2" ry="2" />
<text  x="574.90" y="191.5" ></text>
</g>
<g >
<title>net.(*UDPAddr).sockaddr (1 samples, 0.68%)</title><rect x="218.7" y="133" width="8.0" height="15.0" fill="rgb(213,37,8)" rx="2" ry="2" />
<text  x="221.71" y="143.5" ></text>
</g>
<g >
<title>path/filepath.walk (1 samples, 0.68%)</title><rect x="202.7" y="261" width="8.0" height="15.0" fill="rgb(248,200,48)" rx="2" ry="2" />
<text  x="205.65" y="271.5" ></text>
</g>
<g >
<title>runtime.mallocgc (1 samples, 0.68%)</title><rect x="66.2" y="245" width="8.0" height="15.0" fill="rgb(241,169,40)" rx="2" ry="2" />
<text  x="69.19" y="255.5" ></text>
</g>
<g >
<title>bytes.(*Buffer).grow (1 samples, 0.68%)</title><rect x="250.8" y="69" width="8.0" height="15.0" fill="rgb(238,155,37)" rx="2" ry="2" />
<text  x="253.82" y="79.5" ></text>
</g>
<g >
<title>github.com/schollz/2n/internal/views.RenderHeader (2 samples, 1.36%)</title><rect x="780.6" y="261" width="16.1" height="15.0" fill="rgb(228,109,26)" rx="2" ry="2" />
<text  x="783.61" y="271.5" ></text>
</g>
<g >
<title>runtime.(*mcentral).grow (1 samples, 0.68%)</title><rect x="42.1" y="181" width="8.0" height="15.0" fill="rgb(233,130,31)" rx="2" ry="2" />
<text  x="45.11" y="191.5" ></text>
</g>
<g >
<title>main.TrackerModel.Update (12 samples, 8.16%)</title><rect x="210.7" y="309" width="96.3" height="15.0" fill="rgb(216,54,12)" rx="2" ry="2" />
<text  x="213.68" y="319.5" >main.Tracke..</text>
</g>
<g >
<title>github.com/muesli/termenv.Style.Foreground (1 samples, 0.68%)</title><rect x="772.6" y="261" width="8.0" height="15.0" fill="rgb(244,183,43)" rx="2" ry="2" />
<text  x="775.59" y="271.5" ></text>
</g>
<g >
<title>runtime.(*spanSet).push (1 samples, 0.68%)</title><rect x="820.7" y="149" width="8.1" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="823.75" y="159.5" ></text>
</g>
<g >
<title>runtime.nextFreeFast (1 samples, 0.68%)</title><rect x="676.3" y="197" width="8.0" height="15.0" fill="rgb(227,102,24)" rx="2" ry="2" />
<text  x="679.26" y="207.5" ></text>
</g>
<g >
<title>runtime.futex (2 samples, 1.36%)</title><rect x="1109.7" y="261" width="16.1" height="15.0" fill="rgb(237,150,35)" rx="2" ry="2" />
<text  x="1112.73" y="271.5" ></text>
</g>
<g >
<title>runtime.(*mheap).alloc (1 samples, 0.68%)</title><rect x="42.1" y="165" width="8.0" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="45.11" y="175.5" ></text>
</g>
<g >
<title>github.com/schollz/2n/internal/input.handleShiftRight (4 samples, 2.72%)</title><rect x="234.8" y="277" width="32.1" height="15.0" fill="rgb(228,107,25)" rx="2" ry="2" />
<text  x="237.76" y="287.5" >gi..</text>
</g>
<g >
<title>github.com/rivo/uniseg.propertySearch[go.shape.[3]int] (1 samples, 0.68%)</title><rect x="579.9" y="165" width="8.1" height="15.0" fill="rgb(225,96,22)" rx="2" ry="2" />
<text  x="582.93" y="175.5" ></text>
</g>
<g >
<title>runtime.mcall (15 samples, 10.20%)</title><rect x="1069.6" y="373" width="120.4" height="15.0" fill="rgb(213,40,9)" rx="2" ry="2" />
<text  x="1072.59" y="383.5" >runtime.mcall</text>
</g>
<g >
<title>strings.Split (1 samples, 0.68%)</title><rect x="788.6" y="245" width="8.1" height="15.0" fill="rgb(205,2,0)" rx="2" ry="2" />
<text  x="791.64" y="255.5" ></text>
</g>
<g >
<title>syscall.Syscall6 (2 samples, 1.36%)</title><rect x="114.4" y="197" width="16.0" height="15.0" fill="rgb(216,52,12)" rx="2" ry="2" />
<text  x="117.35" y="207.5" ></text>
</g>
<g >
<title>github.com/charmbracelet/x/ansi.StringWidth (4 samples, 2.72%)</title><rect x="612.0" y="245" width="32.1" height="15.0" fill="rgb(210,26,6)" rx="2" ry="2" />
<text  x="615.04" y="255.5" >gi..</text>
</g>
<g >
<title>runtime.stealWork (1 samples, 0.68%)</title><rect x="1077.6" y="309" width="8.0" height="15.0" fill="rgb(253,224,53)" rx="2" ry="2" />
<text  x="1080.62" y="319.5" ></text>
</g>
<g >
<title>github.com/muesli/termenv.Profile.Color (1 samples, 0.68%)</title><rect x="307.0" y="213" width="8.0" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="310.01" y="223.5" ></text>
</g>
<g >
<title>path/filepath.walk (1 samples, 0.68%)</title><rect x="202.7" y="309" width="8.0" height="15.0" fill="rgb(248,200,48)" rx="2" ry="2" />
<text  x="205.65" y="319.5" ></text>
</g>
<g >
<title>github.com/charmbracelet/lipgloss.Style.getAsBool (4 samples, 2.72%)</title><rect x="507.7" y="245" width="32.1" height="15.0" fill="rgb(213,40,9)" rx="2" ry="2" />
<text  x="510.69" y="255.5" >gi..</text>
</g>
<g >
<title>runtime.(*mheap).allocSpan (1 samples, 0.68%)</title><rect x="130.4" y="197" width="8.0" height="15.0" fill="rgb(233,132,31)" rx="2" ry="2" />
<text  x="133.41" y="207.5" ></text>
</g>
<g >
<title>github.com/charmbracelet/x/ansi.StringWidth (6 samples, 4.08%)</title><rect x="555.9" y="229" width="48.1" height="15.0" fill="rgb(210,26,6)" rx="2" ry="2" />
<text  x="558.85" y="239.5" >gith..</text>
</g>
<g >
<title>runtime.chansend (1 samples, 0.68%)</title><rect x="1165.9" y="213" width="8.0" height="15.0" fill="rgb(228,109,26)" rx="2" ry="2" />
<text  x="1168.92" y="223.5" ></text>
</g>
<g >
<title>encoding/json.structEncoder.encode (4 samples, 2.72%)</title><rect x="266.9" y="197" width="32.1" height="15.0" fill="rgb(251,213,50)" rx="2" ry="2" />
<text  x="269.87" y="207.5" >en..</text>
</g>
<g >
<title>runtime.releasem (1 samples, 0.68%)</title><rect x="18.0" y="341" width="8.1" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="21.03" y="351.5" ></text>
</g>
<g >
<title>runtime.duffcopy (2 samples, 1.36%)</title><rect x="756.5" y="245" width="16.1" height="15.0" fill="rgb(248,197,47)" rx="2" ry="2" />
<text  x="759.53" y="255.5" ></text>
</g>
<g >
<title>runtime.concatstring2 (1 samples, 0.68%)</title><rect x="604.0" y="229" width="8.0" height="15.0" fill="rgb(240,164,39)" rx="2" ry="2" />
<text  x="607.01" y="239.5" ></text>
</g>
<g >
<title>net.internetSocket (1 samples, 0.68%)</title><rect x="218.7" y="181" width="8.0" height="15.0" fill="rgb(228,109,26)" rx="2" ry="2" />
<text  x="221.71" y="191.5" ></text>
</g>
<g >
<title>runtime.(*mheap).allocSpan (1 samples, 0.68%)</title><rect x="812.7" y="85" width="8.0" height="15.0" fill="rgb(233,132,31)" rx="2" ry="2" />
<text  x="815.72" y="95.5" ></text>
</g>
<g >
<title>runtime.heapSetTypeNoHeader (1 samples, 0.68%)</title><rect x="90.3" y="277" width="8.0" height="15.0" fill="rgb(216,54,12)" rx="2" ry="2" />
<text  x="93.27" y="287.5" ></text>
</g>
<g >
<title>strings.Replace (1 samples, 0.68%)</title><rect x="836.8" y="245" width="8.0" height="15.0" fill="rgb(218,62,15)" rx="2" ry="2" />
<text  x="839.80" y="255.5" ></text>
</g>
<g >
<title>reflect.growslice (1 samples, 0.68%)</title><rect x="1029.5" y="149" width="8.0" height="15.0" fill="rgb(231,120,28)" rx="2" ry="2" />
<text  x="1032.46" y="159.5" ></text>
</g>
<g >
<title>encoding/json.intEncoder (1 samples, 0.68%)</title><rect x="274.9" y="101" width="8.0" height="15.0" fill="rgb(251,214,51)" rx="2" ry="2" />
<text  x="277.90" y="111.5" ></text>
</g>
<g >
<title>runtime.nextFreeFast (1 samples, 0.68%)</title><rect x="860.9" y="261" width="8.0" height="15.0" fill="rgb(227,102,24)" rx="2" ry="2" />
<text  x="863.88" y="271.5" ></text>
</g>
<g >
<title>encoding/json.sliceEncoder.encode (4 samples, 2.72%)</title><rect x="234.8" y="133" width="32.1" height="15.0" fill="rgb(213,40,9)" rx="2" ry="2" />
<text  x="237.76" y="143.5" >en..</text>
</g>
<g >
<title>io.Copy (1 samples, 0.68%)</title><rect x="162.5" y="357" width="8.0" height="15.0" fill="rgb(216,50,12)" rx="2" ry="2" />
<text  x="165.52" y="367.5" ></text>
</g>
<g >
<title>encoding/json.(*decodeState).scanWhile (1 samples, 0.68%)</title><rect x="868.9" y="149" width="8.0" height="15.0" fill="rgb(246,191,45)" rx="2" ry="2" />
<text  x="871.91" y="159.5" ></text>
</g>
<g >
<title>runtime.(*mcentral).cacheSpan (1 samples, 0.68%)</title><rect x="42.1" y="197" width="8.0" height="15.0" fill="rgb(244,179,42)" rx="2" ry="2" />
<text  x="45.11" y="207.5" ></text>
</g>
<g >
<title>reflect.(*rtype).Name (2 samples, 1.36%)</title><rect x="909.0" y="101" width="16.1" height="15.0" fill="rgb(207,11,2)" rx="2" ry="2" />
<text  x="912.05" y="111.5" ></text>
</g>
<g >
<title>github.com/schollz/2n/internal/input.EmitRowDataFor (2 samples, 1.36%)</title><rect x="210.7" y="261" width="16.0" height="15.0" fill="rgb(232,124,29)" rx="2" ry="2" />
<text  x="213.68" y="271.5" ></text>
</g>
<g >
<title>encoding/json.indirect (1 samples, 0.68%)</title><rect x="997.3" y="149" width="8.1" height="15.0" fill="rgb(246,192,45)" rx="2" ry="2" />
<text  x="1000.35" y="159.5" ></text>
</g>
<g >
<title>strings.Replace (1 samples, 0.68%)</title><rect x="780.6" y="213" width="8.0" height="15.0" fill="rgb(218,62,15)" rx="2" ry="2" />
<text  x="783.61" y="223.5" ></text>
</g>
<g >
<title>github.com/rivo/uniseg.runeWidth (3 samples, 2.04%)</title><rect x="459.5" y="181" width="24.1" height="15.0" fill="rgb(235,140,33)" rx="2" ry="2" />
<text  x="462.52" y="191.5" >g..</text>
</g>
<g >
<title>runtime.convTstring (2 samples, 1.36%)</title><rect x="668.2" y="229" width="16.1" height="15.0" fill="rgb(224,89,21)" rx="2" ry="2" />
<text  x="671.23" y="239.5" ></text>
</g>
<g >
<title>runtime.netpoll (1 samples, 0.68%)</title><rect x="1069.6" y="309" width="8.0" height="15.0" fill="rgb(231,119,28)" rx="2" ry="2" />
<text  x="1072.59" y="319.5" ></text>
</g>
<g >
<title>github.com/charmbracelet/bubbletea.(*standardRenderer).flush (1 samples, 0.68%)</title><rect x="26.1" y="357" width="8.0" height="15.0" fill="rgb(228,106,25)" rx="2" ry="2" />
<text  x="29.05" y="367.5" ></text>
</g>
<g >
<title>bytes.growSlice (1 samples, 0.68%)</title><rect x="250.8" y="53" width="8.0" height="15.0" fill="rgb(215,47,11)" rx="2" ry="2" />
<text  x="253.82" y="63.5" ></text>
</g>
<g >
<title>encoding/json.state0 (1 samples, 0.68%)</title><rect x="1045.5" y="277" width="8.0" height="15.0" fill="rgb(206,8,2)" rx="2" ry="2" />
<text  x="1048.51" y="287.5" ></text>
</g>
<g >
<title>runtime.(*mcache).refill (1 samples, 0.68%)</title><rect x="66.2" y="197" width="8.0" height="15.0" fill="rgb(232,124,29)" rx="2" ry="2" />
<text  x="69.19" y="207.5" ></text>
</g>
<g >
<title>runtime.park_m (12 samples, 8.16%)</title><rect x="1093.7" y="357" width="96.3" height="15.0" fill="rgb(233,132,31)" rx="2" ry="2" />
<text  x="1096.67" y="367.5" >runtime.par..</text>
</g>
<g >
<title>regexp/syntax.(*parser).literal (1 samples, 0.68%)</title><rect x="58.2" y="277" width="8.0" height="15.0" fill="rgb(222,81,19)" rx="2" ry="2" />
<text  x="61.16" y="287.5" ></text>
</g>
<g >
<title>runtime.divRoundUp (1 samples, 0.68%)</title><rect x="668.2" y="197" width="8.1" height="15.0" fill="rgb(211,27,6)" rx="2" ry="2" />
<text  x="671.23" y="207.5" ></text>
</g>
<g >
<title>runtime.gcDrainMarkWorkerDedicated (1 samples, 0.68%)</title><rect x="194.6" y="341" width="8.1" height="15.0" fill="rgb(206,5,1)" rx="2" ry="2" />
<text  x="197.63" y="351.5" ></text>
</g>
<g >
<title>runtime.(*mcache).refill (1 samples, 0.68%)</title><rect x="42.1" y="213" width="8.0" height="15.0" fill="rgb(232,124,29)" rx="2" ry="2" />
<text  x="45.11" y="223.5" ></text>
</g>
<g >
<title>encoding/json.arrayEncoder.encode (4 samples, 2.72%)</title><rect x="234.8" y="149" width="32.1" height="15.0" fill="rgb(216,55,13)" rx="2" ry="2" />
<text  x="237.76" y="159.5" >en..</text>
</g>
<g >
<title>runtime.resolveTypeOff (4 samples, 2.72%)</title><rect x="933.1" y="53" width="32.1" height="15.0" fill="rgb(239,160,38)" rx="2" ry="2" />
<text  x="936.13" y="63.5" >ru..</text>
</g>
<g >
<title>main.main (107 samples, 72.79%)</title><rect x="210.7" y="357" width="858.9" height="15.0" fill="rgb(227,101,24)" rx="2" ry="2" />
<text  x="213.68" y="367.5" >main.main</text>
</g>
<g >
<title>github.com/hypebeast/go-osc/osc.getRegEx (3 samples, 2.04%)</title><rect x="50.1" y="341" width="24.1" height="15.0" fill="rgb(252,218,52)" rx="2" ry="2" />
<text  x="53.14" y="351.5" >g..</text>
</g>
<g >
<title>path/filepath.walk (1 samples, 0.68%)</title><rect x="202.7" y="245" width="8.0" height="15.0" fill="rgb(248,200,48)" rx="2" ry="2" />
<text  x="205.65" y="255.5" ></text>
</g>
<g >
<title>regexp/syntax.(*parser).newRegexp (1 samples, 0.68%)</title><rect x="66.2" y="277" width="8.0" height="15.0" fill="rgb(230,118,28)" rx="2" ry="2" />
<text  x="69.19" y="287.5" ></text>
</g>
<g >
<title>github.com/rivo/uniseg.propertySearch[go.shape.[3]int] (1 samples, 0.68%)</title><rect x="571.9" y="165" width="8.0" height="15.0" fill="rgb(225,96,22)" rx="2" ry="2" />
<text  x="574.90" y="175.5" ></text>
</g>
<g >
<title>fmt.(*pp).fmtString (1 samples, 0.68%)</title><rect x="323.1" y="213" width="8.0" height="15.0" fill="rgb(226,99,23)" rx="2" ry="2" />
<text  x="326.06" y="223.5" ></text>
</g>
<g >
<title>bytes.growSlice (1 samples, 0.68%)</title><rect x="42.1" y="293" width="8.0" height="15.0" fill="rgb(215,47,11)" rx="2" ry="2" />
<text  x="45.11" y="303.5" ></text>
</g>
<g >
<title>regexp/syntax.(*parser).push (1 samples, 0.68%)</title><rect x="58.2" y="261" width="8.0" height="15.0" fill="rgb(217,55,13)" rx="2" ry="2" />
<text  x="61.16" y="271.5" ></text>
</g>
<g >
<title>runtime.heapSetTypeSmallHeader (1 samples, 0.68%)</title><rect x="852.9" y="261" width="8.0" height="15.0" fill="rgb(225,94,22)" rx="2" ry="2" />
<text  x="855.86" y="271.5" ></text>
</g>
<g >
<title>github.com/charmbracelet/x/ansi.StringWidth (7 samples, 4.76%)</title><rect x="443.5" y="229" width="56.2" height="15.0" fill="rgb(210,26,6)" rx="2" ry="2" />
<text  x="446.47" y="239.5" >githu..</text>
</g>
<g >
<title>runtime.(*mcentral).grow (1 samples, 0.68%)</title><rect x="82.2" y="213" width="8.1" height="15.0" fill="rgb(233,130,31)" rx="2" ry="2" />
<text  x="85.24" y="223.5" ></text>
</g>
<g >
<title>runtime.mallocgcSmallNoscan (1 samples, 0.68%)</title><rect x="42.1" y="245" width="8.0" height="15.0" fill="rgb(239,156,37)" rx="2" ry="2" />
<text  x="45.11" y="255.5" ></text>
</g>
<g >
<title>reflect.Value.Grow (3 samples, 2.04%)</title><rect x="1005.4" y="149" width="24.1" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1008.37" y="159.5" >r..</text>
</g>
<g >
<title>fmt.(*fmt).fmtS (1 samples, 0.68%)</title><rect x="323.1" y="197" width="8.0" height="15.0" fill="rgb(251,213,50)" rx="2" ry="2" />
<text  x="326.06" y="207.5" ></text>
</g>
<g >
<title>net.ipToSockaddr (1 samples, 0.68%)</title><rect x="218.7" y="117" width="8.0" height="15.0" fill="rgb(253,223,53)" rx="2" ry="2" />
<text  x="221.71" y="127.5" ></text>
</g>
<g >
<title>runtime.newobject (1 samples, 0.68%)</title><rect x="66.2" y="261" width="8.0" height="15.0" fill="rgb(221,75,18)" rx="2" ry="2" />
<text  x="69.19" y="271.5" ></text>
</g>
<g >
<title>io.copyBuffer (1 samples, 0.68%)</title><rect x="162.5" y="341" width="8.0" height="15.0" fill="rgb(220,71,17)" rx="2" ry="2" />
<text  x="165.52" y="351.5" ></text>
</g>
<g >
<title>path/filepath.walk (1 samples, 0.68%)</title><rect x="202.7" y="293" width="8.0" height="15.0" fill="rgb(248,200,48)" rx="2" ry="2" />
<text  x="205.65" y="303.5" ></text>
</g>
<g >
<title>runtime.runqgrab (1 samples, 0.68%)</title><rect x="1182.0" y="277" width="8.0" height="15.0" fill="rgb(235,138,33)" rx="2" ry="2" />
<text  x="1184.97" y="287.5" ></text>
</g>
<g >
<title>encoding/json.(*encodeState).marshal (4 samples, 2.72%)</title><rect x="266.9" y="229" width="32.1" height="15.0" fill="rgb(207,12,3)" rx="2" ry="2" />
<text  x="269.87" y="239.5" >en..</text>
</g>
<g >
<title>github.com/schollz/2n/internal/input.AdvancePlayback (3 samples, 2.04%)</title><rect x="210.7" y="293" width="24.1" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="213.68" y="303.5" >g..</text>
</g>
<g >
<title>os.Lstat (1 samples, 0.68%)</title><rect x="202.7" y="165" width="8.0" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="205.65" y="175.5" ></text>
</g>
<g >
<title>os/exec.(*Cmd).Start.func2 (1 samples, 0.68%)</title><rect x="162.5" y="373" width="8.0" height="15.0" fill="rgb(225,95,22)" rx="2" ry="2" />
<text  x="165.52" y="383.5" ></text>
</g>
<g >
<title>fmt.Sprintf (2 samples, 1.36%)</title><rect x="644.1" y="229" width="16.1" height="15.0" fill="rgb(210,26,6)" rx="2" ry="2" />
<text  x="647.15" y="239.5" ></text>
</g>
<g >
<title>syscall.fstatat (1 samples, 0.68%)</title><rect x="202.7" y="133" width="8.0" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="205.65" y="143.5" ></text>
</g>
<g >
<title>github.com/schollz/2n/internal/views.renderViewWithCommonPattern (1 samples, 0.68%)</title><rect x="307.0" y="277" width="8.0" height="15.0" fill="rgb(207,10,2)" rx="2" ry="2" />
<text  x="310.01" y="287.5" ></text>
</g>
<g >
<title>runtime.(*mspan).writeHeapBitsSmall (1 samples, 0.68%)</title><rect x="50.1" y="245" width="8.1" height="15.0" fill="rgb(217,59,14)" rx="2" ry="2" />
<text  x="53.14" y="255.5" ></text>
</g>
<g >
<title>github.com/charmbracelet/bubbletea.(*Program).Run (80 samples, 54.42%)</title><rect x="210.7" y="341" width="642.2" height="15.0" fill="rgb(207,10,2)" rx="2" ry="2" />
<text  x="213.68" y="351.5" >github.com/charmbracelet/bubbletea.(*Program).Run</text>
</g>
<g >
<title>encoding/json.stateEndValue (1 samples, 0.68%)</title><rect x="1045.5" y="261" width="8.0" height="15.0" fill="rgb(226,99,23)" rx="2" ry="2" />
<text  x="1048.51" y="271.5" ></text>
</g>
<g >
<title>runtime.mPark (3 samples, 2.04%)</title><rect x="1101.7" y="309" width="24.1" height="15.0" fill="rgb(254,226,54)" rx="2" ry="2" />
<text  x="1104.70" y="319.5" >r..</text>
</g>
<g >
<title>runtime.memmove (1 samples, 0.68%)</title><rect x="772.6" y="133" width="8.0" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="775.59" y="143.5" ></text>
</g>
<g >
<title>github.com/charmbracelet/x/ansi.Truncate (1 samples, 0.68%)</title><rect x="42.1" y="357" width="8.0" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="45.11" y="367.5" ></text>
</g>
<g >
<title>runtime.nextFreeFast (1 samples, 0.68%)</title><rect x="98.3" y="277" width="8.0" height="15.0" fill="rgb(227,102,24)" rx="2" ry="2" />
<text  x="101.30" y="287.5" ></text>
</g>
<g >
<title>runtime.mallocgc (2 samples, 1.36%)</title><rect x="668.2" y="213" width="16.1" height="15.0" fill="rgb(241,169,40)" rx="2" ry="2" />
<text  x="671.23" y="223.5" ></text>
</g>
<g >
<title>runtime.duffcopy (9 samples, 6.12%)</title><rect x="684.3" y="245" width="72.2" height="15.0" fill="rgb(248,197,47)" rx="2" ry="2" />
<text  x="687.29" y="255.5" >runtime...</text>
</g>
<g >
<title>github.com/charmbracelet/lipgloss.Style.isSet (1 samples, 0.68%)</title><rect x="539.8" y="245" width="8.0" height="15.0" fill="rgb(242,173,41)" rx="2" ry="2" />
<text  x="542.80" y="255.5" ></text>
</g>
<g >
<title>syscall.Syscall (1 samples, 0.68%)</title><rect x="1061.6" y="229" width="8.0" height="15.0" fill="rgb(215,47,11)" rx="2" ry="2" />
<text  x="1064.56" y="239.5" ></text>
</g>
<g >
<title>runtime.gcDrain (1 samples, 0.68%)</title><rect x="194.6" y="325" width="8.1" height="15.0" fill="rgb(233,130,31)" rx="2" ry="2" />
<text  x="197.63" y="335.5" ></text>
</g>
<g >
<title>github.com/muesli/termenv.Style.Styled (5 samples, 3.40%)</title><rect x="644.1" y="245" width="40.2" height="15.0" fill="rgb(221,73,17)" rx="2" ry="2" />
<text  x="647.15" y="255.5" >git..</text>
</g>
<g >
<title>internal/runtime/syscall.Syscall6 (1 samples, 0.68%)</title><rect x="299.0" y="133" width="8.0" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="301.98" y="143.5" ></text>
</g>
<g >
<title>fmt.(*pp).doPrintf (1 samples, 0.68%)</title><rect x="323.1" y="245" width="8.0" height="15.0" fill="rgb(251,215,51)" rx="2" ry="2" />
<text  x="326.06" y="255.5" ></text>
</g>
<g >
<title>os.(*File).WriteTo (1 samples, 0.68%)</title><rect x="162.5" y="325" width="8.0" height="15.0" fill="rgb(245,188,45)" rx="2" ry="2" />
<text  x="165.52" y="335.5" ></text>
</g>
<g >
<title>encoding/json.(*decodeState).value (15 samples, 10.20%)</title><rect x="876.9" y="149" width="120.4" height="15.0" fill="rgb(233,132,31)" rx="2" ry="2" />
<text  x="879.94" y="159.5" >encoding/json.(..</text>
</g>
<g >
<title>net.(*netFD).dial (1 samples, 0.68%)</title><rect x="218.7" y="149" width="8.0" height="15.0" fill="rgb(209,22,5)" rx="2" ry="2" />
<text  x="221.71" y="159.5" ></text>
</g>
<g >
<title>runtime.systemstack (1 samples, 0.68%)</title><rect x="170.5" y="309" width="8.1" height="15.0" fill="rgb(206,6,1)" rx="2" ry="2" />
<text  x="173.54" y="319.5" ></text>
</g>
<g >
<title>runtime.(*sweepLocked).sweep (1 samples, 0.68%)</title><rect x="186.6" y="341" width="8.0" height="15.0" fill="rgb(220,70,16)" rx="2" ry="2" />
<text  x="189.60" y="351.5" ></text>
</g>
<g >
<title>encoding/json.arrayEncoder.encode (4 samples, 2.72%)</title><rect x="266.9" y="149" width="32.1" height="15.0" fill="rgb(216,55,13)" rx="2" ry="2" />
<text  x="269.87" y="159.5" >en..</text>
</g>
<g >
<title>unicode/utf8.RuneCountInString (1 samples, 0.68%)</title><rect x="323.1" y="181" width="8.0" height="15.0" fill="rgb(214,44,10)" rx="2" ry="2" />
<text  x="326.06" y="191.5" ></text>
</g>
<g >
<title>reflect.(*rtype).Field (1 samples, 0.68%)</title><rect x="226.7" y="149" width="8.1" height="15.0" fill="rgb(217,59,14)" rx="2" ry="2" />
<text  x="229.73" y="159.5" ></text>
</g>
<g >
<title>runtime.(*pageAlloc).scavenge (1 samples, 0.68%)</title><rect x="170.5" y="325" width="8.1" height="15.0" fill="rgb(245,187,44)" rx="2" ry="2" />
<text  x="173.54" y="335.5" ></text>
</g>
<g >
<title>internal/runtime/syscall.EpollWait (1 samples, 0.68%)</title><rect x="1069.6" y="293" width="8.0" height="15.0" fill="rgb(233,130,31)" rx="2" ry="2" />
<text  x="1072.59" y="303.5" ></text>
</g>
<g >
<title>runtime.(*mheap).alloc.func1 (1 samples, 0.68%)</title><rect x="42.1" y="133" width="8.0" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="45.11" y="143.5" ></text>
</g>
<g >
<title>runtime.(*mheap).alloc (1 samples, 0.68%)</title><rect x="812.7" y="133" width="8.0" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="815.72" y="143.5" ></text>
</g>
<g >
<title>runtime.ifaceeq (1 samples, 0.68%)</title><rect x="162.5" y="229" width="8.0" height="15.0" fill="rgb(241,166,39)" rx="2" ry="2" />
<text  x="165.52" y="239.5" ></text>
</g>
<g >
<title>github.com/schollz/2n/internal/storage.LoadState (25 samples, 17.01%)</title><rect x="868.9" y="325" width="200.7" height="15.0" fill="rgb(205,2,0)" rx="2" ry="2" />
<text  x="871.91" y="335.5" >github.com/schollz/2n/inte..</text>
</g>
<g >
<title>runtime.(*fixalloc).alloc (1 samples, 0.68%)</title><rect x="812.7" y="53" width="8.0" height="15.0" fill="rgb(218,60,14)" rx="2" ry="2" />
<text  x="815.72" y="63.5" ></text>
</g>
<g >
<title>time.stopTimer (1 samples, 0.68%)</title><rect x="10.0" y="341" width="8.0" height="15.0" fill="rgb(235,140,33)" rx="2" ry="2" />
<text  x="13.00" y="351.5" ></text>
</g>
<g >
<title>runtime.exitsyscall (1 samples, 0.68%)</title><rect x="26.1" y="277" width="8.0" height="15.0" fill="rgb(245,184,44)" rx="2" ry="2" />
<text  x="29.05" y="287.5" ></text>
</g>
<g >
<title>os.(*File).read (1 samples, 0.68%)</title><rect x="1061.6" y="277" width="8.0" height="15.0" fill="rgb(222,81,19)" rx="2" ry="2" />
<text  x="1064.56" y="287.5" ></text>
</g>
<g >
<title>runtime.unlock2 (1 samples, 0.68%)</title><rect x="1165.9" y="165" width="8.0" height="15.0" fill="rgb(244,181,43)" rx="2" ry="2" />
<text  x="1168.92" y="175.5" ></text>
</g>
<g >
<title>path/filepath.walk (1 samples, 0.68%)</title><rect x="202.7" y="229" width="8.0" height="15.0" fill="rgb(248,200,48)" rx="2" ry="2" />
<text  x="205.65" y="239.5" ></text>
</g>
<g >
<title>strconv.ParseInt (3 samples, 2.04%)</title><rect x="965.2" y="117" width="24.1" height="15.0" fill="rgb(251,214,51)" rx="2" ry="2" />
<text  x="968.24" y="127.5" >s..</text>
</g>
<g >
<title>syscall.Syscall6 (1 samples, 0.68%)</title><rect x="202.7" y="117" width="8.0" height="15.0" fill="rgb(216,52,12)" rx="2" ry="2" />
<text  x="205.65" y="127.5" ></text>
</g>
<g >
<title>runtime.(*mheap).allocSpan (1 samples, 0.68%)</title><rect x="42.1" y="117" width="8.0" height="15.0" fill="rgb(233,132,31)" rx="2" ry="2" />
<text  x="45.11" y="127.5" ></text>
</g>
<g >
<title>time.(*Timer).Stop (1 samples, 0.68%)</title><rect x="10.0" y="357" width="8.0" height="15.0" fill="rgb(250,209,50)" rx="2" ry="2" />
<text  x="13.00" y="367.5" ></text>
</g>
<g >
<title>github.com/rivo/uniseg.propertySearch[go.shape.[3]int] (1 samples, 0.68%)</title><rect x="34.1" y="293" width="8.0" height="15.0" fill="rgb(225,96,22)" rx="2" ry="2" />
<text  x="37.08" y="303.5" ></text>
</g>
<g >
<title>net.socket (1 samples, 0.68%)</title><rect x="218.7" y="165" width="8.0" height="15.0" fill="rgb(211,30,7)" rx="2" ry="2" />
<text  x="221.71" y="175.5" ></text>
</g>
<g >
<title>runtime.mallocgc (1 samples, 0.68%)</title><rect x="1029.5" y="117" width="8.0" height="15.0" fill="rgb(241,169,40)" rx="2" ry="2" />
<text  x="1032.46" y="127.5" ></text>
</g>
<g >
<title>runtime.mallocgc (1 samples, 0.68%)</title><rect x="90.3" y="293" width="8.0" height="15.0" fill="rgb(241,169,40)" rx="2" ry="2" />
<text  x="93.27" y="303.5" ></text>
</g>
<g >
<title>reflect.Value.grow (1 samples, 0.68%)</title><rect x="1029.5" y="165" width="8.0" height="15.0" fill="rgb(206,8,1)" rx="2" ry="2" />
<text  x="1032.46" y="175.5" ></text>
</g>
<g >
<title>runtime.madvise (1 samples, 0.68%)</title><rect x="170.5" y="245" width="8.1" height="15.0" fill="rgb(216,54,12)" rx="2" ry="2" />
<text  x="173.54" y="255.5" ></text>
</g>
<g >
<title>runtime.sysUnused (1 samples, 0.68%)</title><rect x="170.5" y="277" width="8.1" height="15.0" fill="rgb(205,0,0)" rx="2" ry="2" />
<text  x="173.54" y="287.5" ></text>
</g>
<g >
<title>regexp.compile (1 samples, 0.68%)</title><rect x="50.1" y="309" width="8.1" height="15.0" fill="rgb(248,199,47)" rx="2" ry="2" />
<text  x="53.14" y="319.5" ></text>
</g>
<g >
<title>runtime.(*mheap).alloc (1 samples, 0.68%)</title><rect x="82.2" y="197" width="8.1" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="85.24" y="207.5" ></text>
</g>
<g >
<title>runtime.makeslice (2 samples, 1.36%)</title><rect x="852.9" y="293" width="16.0" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="855.86" y="303.5" ></text>
</g>
<g >
<title>runtime.(*mcentral).uncacheSpan (1 samples, 0.68%)</title><rect x="66.2" y="181" width="8.0" height="15.0" fill="rgb(227,104,24)" rx="2" ry="2" />
<text  x="69.19" y="191.5" ></text>
</g>
<g >
<title>reflect.growslice (3 samples, 2.04%)</title><rect x="1005.4" y="117" width="24.1" height="15.0" fill="rgb(231,120,28)" rx="2" ry="2" />
<text  x="1008.37" y="127.5" >r..</text>
</g>
<g >
<title>runtime.mallocgc (1 samples, 0.68%)</title><rect x="82.2" y="293" width="8.1" height="15.0" fill="rgb(241,169,40)" rx="2" ry="2" />
<text  x="85.24" y="303.5" ></text>
</g>
<g >
<title>runtime.newobject (1 samples, 0.68%)</title><rect x="98.3" y="309" width="8.0" height="15.0" fill="rgb(221,75,18)" rx="2" ry="2" />
<text  x="101.30" y="319.5" ></text>
</g>
<g >
<title>runtime.findRunnable (12 samples, 8.16%)</title><rect x="1093.7" y="325" width="96.3" height="15.0" fill="rgb(219,64,15)" rx="2" ry="2" />
<text  x="1096.67" y="335.5" >runtime.fin..</text>
</g>
<g >
<title>syscall.RawSyscall6 (1 samples, 0.68%)</title><rect x="202.7" y="101" width="8.0" height="15.0" fill="rgb(241,167,40)" rx="2" ry="2" />
<text  x="205.65" y="111.5" ></text>
</g>
<g >
<title>fmt.Sprintf (1 samples, 0.68%)</title><rect x="323.1" y="261" width="8.0" height="15.0" fill="rgb(210,26,6)" rx="2" ry="2" />
<text  x="326.06" y="271.5" ></text>
</g>
<g >
<title>runtime.duffcopy (1 samples, 0.68%)</title><rect x="499.7" y="229" width="8.0" height="15.0" fill="rgb(248,197,47)" rx="2" ry="2" />
<text  x="502.66" y="239.5" ></text>
</g>
<g >
<title>runtime.systemstack (1 samples, 0.68%)</title><rect x="812.7" y="117" width="8.0" height="15.0" fill="rgb(206,6,1)" rx="2" ry="2" />
<text  x="815.72" y="127.5" ></text>
</g>
<g >
<title>fmt.(*fmt).fmtInteger (1 samples, 0.68%)</title><rect x="772.6" y="165" width="8.0" height="15.0" fill="rgb(249,203,48)" rx="2" ry="2" />
<text  x="775.59" y="175.5" ></text>
</g>
<g >
<title>github.com/muesli/termenv.ANSIColor.Sequence (1 samples, 0.68%)</title><rect x="772.6" y="245" width="8.0" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="775.59" y="255.5" ></text>
</g>
<g >
<title>runtime.stopm (1 samples, 0.68%)</title><rect x="1085.6" y="309" width="8.1" height="15.0" fill="rgb(242,172,41)" rx="2" ry="2" />
<text  x="1088.65" y="319.5" ></text>
</g>
<g >
<title>runtime.concatstrings (1 samples, 0.68%)</title><rect x="604.0" y="213" width="8.0" height="15.0" fill="rgb(220,73,17)" rx="2" ry="2" />
<text  x="607.01" y="223.5" ></text>
</g>
<g >
<title>encoding/json.(*encodeState).reflectValue (4 samples, 2.72%)</title><rect x="234.8" y="213" width="32.1" height="15.0" fill="rgb(239,156,37)" rx="2" ry="2" />
<text  x="237.76" y="223.5" >en..</text>
</g>
<g >
<title>syscall.recvfromInet6 (2 samples, 1.36%)</title><rect x="114.4" y="229" width="16.0" height="15.0" fill="rgb(247,195,46)" rx="2" ry="2" />
<text  x="117.35" y="239.5" ></text>
</g>
<g >
<title>github.com/rivo/uniseg.transitionGraphemeState (1 samples, 0.68%)</title><rect x="579.9" y="181" width="8.1" height="15.0" fill="rgb(208,17,4)" rx="2" ry="2" />
<text  x="582.93" y="191.5" ></text>
</g>
<g >
<title>reflect.(*rtype).nameOff (1 samples, 0.68%)</title><rect x="917.1" y="85" width="8.0" height="15.0" fill="rgb(222,80,19)" rx="2" ry="2" />
<text  x="920.07" y="95.5" ></text>
</g>
<g >
<title>github.com/rivo/uniseg.FirstGraphemeClusterInString (2 samples, 1.36%)</title><rect x="571.9" y="197" width="16.1" height="15.0" fill="rgb(237,148,35)" rx="2" ry="2" />
<text  x="574.90" y="207.5" ></text>
</g>
<g >
<title>time.(*Time).addSec (1 samples, 0.68%)</title><rect x="1173.9" y="213" width="8.1" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="1176.95" y="223.5" ></text>
</g>
<g >
<title>runtime.systemstack (1 samples, 0.68%)</title><rect x="178.6" y="325" width="8.0" height="15.0" fill="rgb(206,6,1)" rx="2" ry="2" />
<text  x="181.57" y="335.5" ></text>
</g>
<g >
<title>encoding/json.sliceEncoder.encode (4 samples, 2.72%)</title><rect x="266.9" y="165" width="32.1" height="15.0" fill="rgb(213,40,9)" rx="2" ry="2" />
<text  x="269.87" y="175.5" >en..</text>
</g>
<g >
<title>net.(*UDPConn).readFrom (3 samples, 2.04%)</title><rect x="106.3" y="277" width="24.1" height="15.0" fill="rgb(214,45,10)" rx="2" ry="2" />
<text  x="109.33" y="287.5" >n..</text>
</g>
<g >
<title>runtime.bgsweep (2 samples, 1.36%)</title><rect x="178.6" y="373" width="16.0" height="15.0" fill="rgb(240,165,39)" rx="2" ry="2" />
<text  x="181.57" y="383.5" ></text>
</g>
<g >
<title>runtime.copystack (1 samples, 0.68%)</title><rect x="74.2" y="261" width="8.0" height="15.0" fill="rgb(218,60,14)" rx="2" ry="2" />
<text  x="77.22" y="271.5" ></text>
</g>
<g >
<title>path/filepath.walk (1 samples, 0.68%)</title><rect x="202.7" y="213" width="8.0" height="15.0" fill="rgb(248,200,48)" rx="2" ry="2" />
<text  x="205.65" y="223.5" ></text>
</g>
<g >
<title>runtime.(*mspan).base (1 samples, 0.68%)</title><rect x="194.6" y="293" width="8.1" height="15.0" fill="rgb(224,91,21)" rx="2" ry="2" />
<text  x="197.63" y="303.5" ></text>
</g>
<g >
<title>net.(*conf).hostLookupOrder (1 samples, 0.68%)</title><rect x="74.2" y="309" width="8.0" height="15.0" fill="rgb(227,105,25)" rx="2" ry="2" />
<text  x="77.22" y="319.5" ></text>
</g>
<g >
<title>reflect.ptrTo (5 samples, 3.40%)</title><rect x="925.1" y="101" width="40.1" height="15.0" fill="rgb(210,26,6)" rx="2" ry="2" />
<text  x="928.10" y="111.5" >ref..</text>
</g>
<g >
<title>time.sendTime (3 samples, 2.04%)</title><rect x="1157.9" y="245" width="24.1" height="15.0" fill="rgb(252,219,52)" rx="2" ry="2" />
<text  x="1160.89" y="255.5" >t..</text>
</g>
<g >
<title>runtime.checkdead (1 samples, 0.68%)</title><rect x="1085.6" y="277" width="8.1" height="15.0" fill="rgb(213,40,9)" rx="2" ry="2" />
<text  x="1088.65" y="287.5" ></text>
</g>
<g >
<title>runtime.mallocgc (4 samples, 2.72%)</title><rect x="130.4" y="293" width="32.1" height="15.0" fill="rgb(241,169,40)" rx="2" ry="2" />
<text  x="133.41" y="303.5" >ru..</text>
</g>
<g >
<title>github.com/charmbracelet/x/ansi.stringWidth (3 samples, 2.04%)</title><rect x="612.0" y="229" width="24.1" height="15.0" fill="rgb(253,225,53)" rx="2" ry="2" />
<text  x="615.04" y="239.5" >g..</text>
</g>
<g >
<title>syscall.recvfrom (2 samples, 1.36%)</title><rect x="114.4" y="213" width="16.0" height="15.0" fill="rgb(230,116,27)" rx="2" ry="2" />
<text  x="117.35" y="223.5" ></text>
</g>
<g >
<title>runtime.memmove (1 samples, 0.68%)</title><rect x="604.0" y="197" width="8.0" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="607.01" y="207.5" ></text>
</g>
<g >
<title>fmt.(*pp).fmtInteger (1 samples, 0.68%)</title><rect x="772.6" y="181" width="8.0" height="15.0" fill="rgb(214,44,10)" rx="2" ry="2" />
<text  x="775.59" y="191.5" ></text>
</g>
<g >
<title>runtime.mallocgc (1 samples, 0.68%)</title><rect x="50.1" y="277" width="8.1" height="15.0" fill="rgb(241,169,40)" rx="2" ry="2" />
<text  x="53.14" y="287.5" ></text>
</g>
<g >
<title>github.com/charmbracelet/x/ansi/parser.TransitionTable.Transition (1 samples, 0.68%)</title><rect x="636.1" y="229" width="8.0" height="15.0" fill="rgb(237,149,35)" rx="2" ry="2" />
<text  x="639.12" y="239.5" ></text>
</g>
<g >
<title>runtime.(*unwinder).next (1 samples, 0.68%)</title><rect x="74.2" y="245" width="8.0" height="15.0" fill="rgb(241,166,39)" rx="2" ry="2" />
<text  x="77.22" y="255.5" ></text>
</g>
<g >
<title>internal/runtime/syscall.Syscall6 (1 samples, 0.68%)</title><rect x="202.7" y="85" width="8.0" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="205.65" y="95.5" ></text>
</g>
<g >
<title>runtime.newstack (1 samples, 0.68%)</title><rect x="74.2" y="277" width="8.0" height="15.0" fill="rgb(248,197,47)" rx="2" ry="2" />
<text  x="77.22" y="287.5" ></text>
</g>
<g >
<title>runtime.(*lfstack).pop (1 samples, 0.68%)</title><rect x="66.2" y="149" width="8.0" height="15.0" fill="rgb(217,57,13)" rx="2" ry="2" />
<text  x="69.19" y="159.5" ></text>
</g>
<g >
<title>runtime.sysUnusedOS (1 samples, 0.68%)</title><rect x="170.5" y="261" width="8.1" height="15.0" fill="rgb(208,16,3)" rx="2" ry="2" />
<text  x="173.54" y="271.5" ></text>
</g>
<g >
<title>runtime.systemstack (1 samples, 0.68%)</title><rect x="42.1" y="149" width="8.0" height="15.0" fill="rgb(206,6,1)" rx="2" ry="2" />
<text  x="45.11" y="159.5" ></text>
</g>
<g >
<title>path/filepath.walk (1 samples, 0.68%)</title><rect x="202.7" y="181" width="8.0" height="15.0" fill="rgb(248,200,48)" rx="2" ry="2" />
<text  x="205.65" y="191.5" ></text>
</g>
<g >
<title>github.com/schollz/2n/internal/model.(*Model).initializeDefaultData (2 samples, 1.36%)</title><rect x="852.9" y="309" width="16.0" height="15.0" fill="rgb(210,26,6)" rx="2" ry="2" />
<text  x="855.86" y="319.5" ></text>
</g>
<g >
<title>bytes.(*Buffer).Write (1 samples, 0.68%)</title><rect x="42.1" y="325" width="8.0" height="15.0" fill="rgb(247,197,47)" rx="2" ry="2" />
<text  x="45.11" y="335.5" ></text>
</g>
<g >
<title>github.com/rivo/uniseg.transitionGraphemeState (2 samples, 1.36%)</title><rect x="483.6" y="181" width="16.1" height="15.0" fill="rgb(208,17,4)" rx="2" ry="2" />
<text  x="486.61" y="191.5" ></text>
</g>
<g >
<title>runtime.nextFreeFast (1 samples, 0.68%)</title><rect x="844.8" y="229" width="8.1" height="15.0" fill="rgb(227,102,24)" rx="2" ry="2" />
<text  x="847.83" y="239.5" ></text>
</g>
<g >
<title>fmt.(*pp).printArg (1 samples, 0.68%)</title><rect x="772.6" y="197" width="8.0" height="15.0" fill="rgb(245,185,44)" rx="2" ry="2" />
<text  x="775.59" y="207.5" ></text>
</g>
<g >
<title>internal/runtime/syscall.Syscall6 (2 samples, 1.36%)</title><rect x="114.4" y="165" width="16.0" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="117.35" y="175.5" ></text>
</g>
<g >
<title>encoding/json.Unmarshal (24 samples, 16.33%)</title><rect x="868.9" y="309" width="192.7" height="15.0" fill="rgb(221,77,18)" rx="2" ry="2" />
<text  x="871.91" y="319.5" >encoding/json.Unmarshal</text>
</g>
<g >
<title>reflect.(*rtype).ptrTo (1 samples, 0.68%)</title><rect x="925.1" y="85" width="8.0" height="15.0" fill="rgb(225,94,22)" rx="2" ry="2" />
<text  x="928.10" y="95.5" ></text>
</g>
<g >
<title>runtime.main (108 samples, 73.47%)</title><rect x="202.7" y="373" width="866.9" height="15.0" fill="rgb(209,21,5)" rx="2" ry="2" />
<text  x="205.65" y="383.5" >runtime.main</text>
</g>
<g >
<title>github.com/charmbracelet/lipgloss.Color.color (1 samples, 0.68%)</title><rect x="307.0" y="229" width="8.0" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="310.01" y="239.5" ></text>
</g>
<g >
<title>internal/abi.(*Type).Kind (1 samples, 0.68%)</title><rect x="282.9" y="101" width="8.1" height="15.0" fill="rgb(251,214,51)" rx="2" ry="2" />
<text  x="285.93" y="111.5" ></text>
</g>
<g >
<title>runtime.runqsteal (1 samples, 0.68%)</title><rect x="1182.0" y="293" width="8.0" height="15.0" fill="rgb(227,104,24)" rx="2" ry="2" />
<text  x="1184.97" y="303.5" ></text>
</g>
<g >
<title>runtime.send (1 samples, 0.68%)</title><rect x="1165.9" y="197" width="8.0" height="15.0" fill="rgb(227,103,24)" rx="2" ry="2" />
<text  x="1168.92" y="207.5" ></text>
</g>
<g >
<title>runtime.(*waitq).dequeue (1 samples, 0.68%)</title><rect x="1157.9" y="213" width="8.0" height="15.0" fill="rgb(239,160,38)" rx="2" ry="2" />
<text  x="1160.89" y="223.5" ></text>
</g>
<g >
<title>runtime.mallocgcSmallNoscan (3 samples, 2.04%)</title><rect x="804.7" y="213" width="24.1" height="15.0" fill="rgb(239,156,37)" rx="2" ry="2" />
<text  x="807.69" y="223.5" >r..</text>
</g>
<g >
<title>github.com/charmbracelet/x/ansi.truncate (1 samples, 0.68%)</title><rect x="42.1" y="341" width="8.0" height="15.0" fill="rgb(224,88,21)" rx="2" ry="2" />
<text  x="45.11" y="351.5" ></text>
</g>
<g >
<title>runtime.duffcopy (1 samples, 0.68%)</title><rect x="796.7" y="261" width="8.0" height="15.0" fill="rgb(248,197,47)" rx="2" ry="2" />
<text  x="799.67" y="271.5" ></text>
</g>
<g >
<title>runtime.growslice (1 samples, 0.68%)</title><rect x="1029.5" y="133" width="8.0" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="1032.46" y="143.5" ></text>
</g>
<g >
<title>github.com/hypebeast/go-osc/osc.(*StandardDispatcher).Dispatch (3 samples, 2.04%)</title><rect x="50.1" y="373" width="24.1" height="15.0" fill="rgb(237,148,35)" rx="2" ry="2" />
<text  x="53.14" y="383.5" >g..</text>
</g>
<g >
<title>internal/singleflight.(*Group).doCall (1 samples, 0.68%)</title><rect x="74.2" y="373" width="8.0" height="15.0" fill="rgb(231,120,28)" rx="2" ry="2" />
<text  x="77.22" y="383.5" ></text>
</g>
<g >
<title>runtime.mallocgc (2 samples, 1.36%)</title><rect x="852.9" y="277" width="16.0" height="15.0" fill="rgb(241,169,40)" rx="2" ry="2" />
<text  x="855.86" y="287.5" ></text>
</g>
<g >
<title>runtime.schedule (3 samples, 2.04%)</title><rect x="1069.6" y="341" width="24.1" height="15.0" fill="rgb(220,72,17)" rx="2" ry="2" />
<text  x="1072.59" y="351.5" >r..</text>
</g>
<g >
<title>encoding/json.(*decodeState).literalStore (13 samples, 8.84%)</title><rect x="885.0" y="133" width="104.3" height="15.0" fill="rgb(248,200,48)" rx="2" ry="2" />
<text  x="887.97" y="143.5" >encoding/jso..</text>
</g>
<g >
<title>io.copyBuffer (1 samples, 0.68%)</title><rect x="162.5" y="293" width="8.0" height="15.0" fill="rgb(220,71,17)" rx="2" ry="2" />
<text  x="165.52" y="303.5" ></text>
</g>
<g >
<title>encoding/json.intEncoder (2 samples, 1.36%)</title><rect x="242.8" y="101" width="16.0" height="15.0" fill="rgb(251,214,51)" rx="2" ry="2" />
<text  x="245.79" y="111.5" ></text>
</g>
<g >
<title>runtime.duffcopy (4 samples, 2.72%)</title><rect x="411.4" y="213" width="32.1" height="15.0" fill="rgb(248,197,47)" rx="2" ry="2" />
<text  x="414.36" y="223.5" >ru..</text>
</g>
<g >
<title>runtime.mallocgc (1 samples, 0.68%)</title><rect x="1005.4" y="85" width="8.0" height="15.0" fill="rgb(241,169,40)" rx="2" ry="2" />
<text  x="1008.37" y="95.5" ></text>
</g>
<g >
<title>encoding/json.(*encodeState).marshal (4 samples, 2.72%)</title><rect x="234.8" y="229" width="32.1" height="15.0" fill="rgb(207,12,3)" rx="2" ry="2" />
<text  x="237.76" y="239.5" >en..</text>
</g>
<g >
<title>os.OpenFile (1 samples, 0.68%)</title><rect x="299.0" y="229" width="8.0" height="15.0" fill="rgb(228,110,26)" rx="2" ry="2" />
<text  x="301.98" y="239.5" ></text>
</g>
<g >
<title>encoding/json.(*encodeState).reflectValue (4 samples, 2.72%)</title><rect x="266.9" y="213" width="32.1" height="15.0" fill="rgb(239,156,37)" rx="2" ry="2" />
<text  x="269.87" y="223.5" >en..</text>
</g>
<g >
<title>github.com/charmbracelet/lipgloss.Style.Render (1 samples, 0.68%)</title><rect x="307.0" y="245" width="8.0" height="15.0" fill="rgb(224,88,21)" rx="2" ry="2" />
<text  x="310.01" y="255.5" ></text>
</g>
<g >
<title>syscall.Write (1 samples, 0.68%)</title><rect x="26.1" y="325" width="8.0" height="15.0" fill="rgb(208,18,4)" rx="2" ry="2" />
<text  x="29.05" y="335.5" ></text>
</g>
<g >
<title>github.com/rivo/uniseg.propertySearch[go.shape.[3]int] (2 samples, 1.36%)</title><rect x="467.6" y="165" width="16.0" height="15.0" fill="rgb(225,96,22)" rx="2" ry="2" />
<text  x="470.55" y="175.5" ></text>
</g>
<g >
<title>encoding/json.sliceEncoder.encode (4 samples, 2.72%)</title><rect x="266.9" y="133" width="32.1" height="15.0" fill="rgb(213,40,9)" rx="2" ry="2" />
<text  x="269.87" y="143.5" >en..</text>
</g>
<g >
<title>github.com/schollz/2n/internal/model.NewModel (2 samples, 1.36%)</title><rect x="852.9" y="325" width="16.0" height="15.0" fill="rgb(237,148,35)" rx="2" ry="2" />
<text  x="855.86" y="335.5" ></text>
</g>
<g >
<title>runtime.(*mcache).nextFree (1 samples, 0.68%)</title><rect x="82.2" y="261" width="8.1" height="15.0" fill="rgb(222,80,19)" rx="2" ry="2" />
<text  x="85.24" y="271.5" ></text>
</g>
<g >
<title>runtime.heapSetTypeNoHeader (1 samples, 0.68%)</title><rect x="1029.5" y="101" width="8.0" height="15.0" fill="rgb(216,54,12)" rx="2" ry="2" />
<text  x="1032.46" y="111.5" ></text>
</g>
<g >
<title>encoding/json.Marshal (4 samples, 2.72%)</title><rect x="266.9" y="245" width="32.1" height="15.0" fill="rgb(238,152,36)" rx="2" ry="2" />
<text  x="269.87" y="255.5" >en..</text>
</g>
<g >
<title>runtime.(*mheap).alloc.func1 (1 samples, 0.68%)</title><rect x="130.4" y="213" width="8.0" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="133.41" y="223.5" ></text>
</g>
<g >
<title>runtime.(*timers).check (3 samples, 2.04%)</title><rect x="1157.9" y="293" width="24.1" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="1160.89" y="303.5" >r..</text>
</g>
<g >
<title>encoding/json.Marshal (4 samples, 2.72%)</title><rect x="234.8" y="245" width="32.1" height="15.0" fill="rgb(238,152,36)" rx="2" ry="2" />
<text  x="237.76" y="255.5" >en..</text>
</g>
<g >
<title>github.com/charmbracelet/bubbletea.(*Program).eventLoop (80 samples, 54.42%)</title><rect x="210.7" y="325" width="642.2" height="15.0" fill="rgb(227,105,25)" rx="2" ry="2" />
<text  x="213.68" y="335.5" >github.com/charmbracelet/bubbletea.(*Program).eventLoop</text>
</g>
<g >
<title>runtime.selectnbsend (2 samples, 1.36%)</title><rect x="1157.9" y="229" width="16.0" height="15.0" fill="rgb(249,204,48)" rx="2" ry="2" />
<text  x="1160.89" y="239.5" ></text>
</g>
<g >
<title>fmt.newPrinter (1 samples, 0.68%)</title><rect x="652.2" y="213" width="8.0" height="15.0" fill="rgb(241,169,40)" rx="2" ry="2" />
<text  x="655.18" y="223.5" ></text>
</g>
<g >
<title>internal/runtime/syscall.EpollWait (2 samples, 1.36%)</title><rect x="1125.8" y="293" width="16.0" height="15.0" fill="rgb(233,130,31)" rx="2" ry="2" />
<text  x="1128.78" y="303.5" ></text>
</g>
<g >
<title>internal/runtime/syscall.Syscall6 (1 samples, 0.68%)</title><rect x="1061.6" y="197" width="8.0" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="1064.56" y="207.5" ></text>
</g>
<g >
<title>runtime.mput (1 samples, 0.68%)</title><rect x="1085.6" y="293" width="8.1" height="15.0" fill="rgb(246,191,45)" rx="2" ry="2" />
<text  x="1088.65" y="303.5" ></text>
</g>
<g >
<title>encoding/json.(*decodeState).array (21 samples, 14.29%)</title><rect x="868.9" y="229" width="168.6" height="15.0" fill="rgb(220,72,17)" rx="2" ry="2" />
<text  x="871.91" y="239.5" >encoding/json.(*decod..</text>
</g>
<g >
<title>github.com/schollz/2n/internal/input.HandleKeyInput (9 samples, 6.12%)</title><rect x="234.8" y="293" width="72.2" height="15.0" fill="rgb(244,182,43)" rx="2" ry="2" />
<text  x="237.76" y="303.5" >github.c..</text>
</g>
<g >
<title>encoding/json.stateBeginValue (1 samples, 0.68%)</title><rect x="1053.5" y="277" width="8.1" height="15.0" fill="rgb(245,188,44)" rx="2" ry="2" />
<text  x="1056.54" y="287.5" ></text>
</g>
<g >
<title>fmt.(*pp).printArg (1 samples, 0.68%)</title><rect x="226.7" y="181" width="8.1" height="15.0" fill="rgb(245,185,44)" rx="2" ry="2" />
<text  x="229.73" y="191.5" ></text>
</g>
<g >
<title>runtime.(*scavengerState).run (1 samples, 0.68%)</title><rect x="170.5" y="357" width="8.1" height="15.0" fill="rgb(232,125,30)" rx="2" ry="2" />
<text  x="173.54" y="367.5" ></text>
</g>
<g >
<title>github.com/schollz/2n/internal/input.switchToView (5 samples, 3.40%)</title><rect x="266.9" y="277" width="40.1" height="15.0" fill="rgb(207,10,2)" rx="2" ry="2" />
<text  x="269.87" y="287.5" >git..</text>
</g>
<g >
<title>encoding/json.(*decodeState).value (21 samples, 14.29%)</title><rect x="868.9" y="245" width="168.6" height="15.0" fill="rgb(233,132,31)" rx="2" ry="2" />
<text  x="871.91" y="255.5" >encoding/json.(*decod..</text>
</g>
<g >
<title>runtime.(*timers).run (3 samples, 2.04%)</title><rect x="1157.9" y="277" width="24.1" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="1160.89" y="287.5" >r..</text>
</g>
<g >
<title>strings.genSplit (1 samples, 0.68%)</title><rect x="788.6" y="229" width="8.1" height="15.0" fill="rgb(227,102,24)" rx="2" ry="2" />
<text  x="791.64" y="239.5" ></text>
</g>
<g >
<title>runtime.(*mheap).alloc (1 samples, 0.68%)</title><rect x="130.4" y="245" width="8.0" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="133.41" y="255.5" ></text>
</g>
<g >
<title>github.com/hypebeast/go-osc/osc.(*Server).ListenAndServe (10 samples, 6.80%)</title><rect x="82.2" y="357" width="80.3" height="15.0" fill="rgb(229,112,26)" rx="2" ry="2" />
<text  x="85.24" y="367.5" >github.co..</text>
</g>
<g >
<title>runtime.findBitRange64 (1 samples, 0.68%)</title><rect x="130.4" y="165" width="8.0" height="15.0" fill="rgb(212,32,7)" rx="2" ry="2" />
<text  x="133.41" y="175.5" ></text>
</g>
<g >
<title>os.readFileContents (1 samples, 0.68%)</title><rect x="1061.6" y="293" width="8.0" height="15.0" fill="rgb(249,203,48)" rx="2" ry="2" />
<text  x="1064.56" y="303.5" ></text>
</g>
<g >
<title>syscall.RawSyscall6 (1 samples, 0.68%)</title><rect x="1061.6" y="213" width="8.0" height="15.0" fill="rgb(241,167,40)" rx="2" ry="2" />
<text  x="1064.56" y="223.5" ></text>
</g>
<g >
<title>github.com/charmbracelet/lipgloss.Style.applyMargins (12 samples, 8.16%)</title><rect x="411.4" y="245" width="96.3" height="15.0" fill="rgb(241,166,39)" rx="2" ry="2" />
<text  x="414.36" y="255.5" >github.com/..</text>
</g>
<g >
<title>runtime.(*mcentral).cacheSpan (1 samples, 0.68%)</title><rect x="82.2" y="229" width="8.1" height="15.0" fill="rgb(244,179,42)" rx="2" ry="2" />
<text  x="85.24" y="239.5" ></text>
</g>
<g >
<title>runtime.(*mheap).freeSpan (1 samples, 0.68%)</title><rect x="178.6" y="341" width="8.0" height="15.0" fill="rgb(212,32,7)" rx="2" ry="2" />
<text  x="181.57" y="351.5" ></text>
</g>
<g >
<title>net.init.func1 (1 samples, 0.68%)</title><rect x="74.2" y="341" width="8.0" height="15.0" fill="rgb(208,18,4)" rx="2" ry="2" />
<text  x="77.22" y="351.5" ></text>
</g>
<g >
<title>encoding/json.(*decodeState).object (21 samples, 14.29%)</title><rect x="868.9" y="261" width="168.6" height="15.0" fill="rgb(252,217,52)" rx="2" ry="2" />
<text  x="871.91" y="271.5" >encoding/json.(*decod..</text>
</g>
<g >
<title>runtime.(*sweepLocked).sweep.(*mheap).freeSpan.func2 (1 samples, 0.68%)</title><rect x="178.6" y="309" width="8.0" height="15.0" fill="rgb(220,73,17)" rx="2" ry="2" />
<text  x="181.57" y="319.5" ></text>
</g>
<g >
<title>bytes.(*Buffer).Write (1 samples, 0.68%)</title><rect x="250.8" y="85" width="8.0" height="15.0" fill="rgb(247,197,47)" rx="2" ry="2" />
<text  x="253.82" y="95.5" ></text>
</g>
<g >
<title>syscall.write (1 samples, 0.68%)</title><rect x="26.1" y="309" width="8.0" height="15.0" fill="rgb(252,217,51)" rx="2" ry="2" />
<text  x="29.05" y="319.5" ></text>
</g>
<g >
<title>runtime.heapSetTypeNoHeader (1 samples, 0.68%)</title><rect x="50.1" y="261" width="8.1" height="15.0" fill="rgb(216,54,12)" rx="2" ry="2" />
<text  x="53.14" y="271.5" ></text>
</g>
<g >
<title>runtime.mallocgcLarge (4 samples, 2.72%)</title><rect x="130.4" y="277" width="32.1" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="133.41" y="287.5" >ru..</text>
</g>
<g >
<title>runtime.netpoll (2 samples, 1.36%)</title><rect x="1125.8" y="309" width="16.0" height="15.0" fill="rgb(231,119,28)" rx="2" ry="2" />
<text  x="1128.78" y="319.5" ></text>
</g>
<g >
<title>sync.(*Pool).Get (1 samples, 0.68%)</title><rect x="652.2" y="197" width="8.0" height="15.0" fill="rgb(241,165,39)" rx="2" ry="2" />
<text  x="655.18" y="207.5" ></text>
</g>
<g >
<title>runtime.(*mcache).nextFree (2 samples, 1.36%)</title><rect x="812.7" y="197" width="16.1" height="15.0" fill="rgb(222,80,19)" rx="2" ry="2" />
<text  x="815.72" y="207.5" ></text>
</g>
<g >
<title>reflect.Value.Grow (1 samples, 0.68%)</title><rect x="1029.5" y="181" width="8.0" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1032.46" y="191.5" ></text>
</g>
<g >
<title>runtime.growslice (3 samples, 2.04%)</title><rect x="804.7" y="245" width="24.1" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="807.69" y="255.5" >r..</text>
</g>
<g >
<title>runtime.systemstack (1 samples, 0.68%)</title><rect x="130.4" y="229" width="8.0" height="15.0" fill="rgb(206,6,1)" rx="2" ry="2" />
<text  x="133.41" y="239.5" ></text>
</g>
<g >
<title>runtime.schedule (12 samples, 8.16%)</title><rect x="1093.7" y="341" width="96.3" height="15.0" fill="rgb(220,72,17)" rx="2" ry="2" />
<text  x="1096.67" y="351.5" >runtime.sch..</text>
</g>
<g >
<title>github.com/rivo/uniseg.FirstGraphemeClusterInString (5 samples, 3.40%)</title><rect x="459.5" y="197" width="40.2" height="15.0" fill="rgb(237,148,35)" rx="2" ry="2" />
<text  x="462.52" y="207.5" >git..</text>
</g>
<g >
<title>fmt.(*fmt).fmtS (1 samples, 0.68%)</title><rect x="644.1" y="165" width="8.1" height="15.0" fill="rgb(251,213,50)" rx="2" ry="2" />
<text  x="647.15" y="175.5" ></text>
</g>
<g >
<title>runtime.usleep (1 samples, 0.68%)</title><rect x="1182.0" y="261" width="8.0" height="15.0" fill="rgb(254,228,54)" rx="2" ry="2" />
<text  x="1184.97" y="271.5" ></text>
</g>
<g >
<title>fmt.(*pp).fmtString (1 samples, 0.68%)</title><rect x="644.1" y="181" width="8.1" height="15.0" fill="rgb(226,99,23)" rx="2" ry="2" />
<text  x="647.15" y="191.5" ></text>
</g>
<g >
<title>github.com/rivo/uniseg.propertySearch[go.shape.[3]int] (2 samples, 1.36%)</title><rect x="483.6" y="165" width="16.1" height="15.0" fill="rgb(225,96,22)" rx="2" ry="2" />
<text  x="486.61" y="175.5" ></text>
</g>
<g >
<title>encoding/json.(*decodeState).value (21 samples, 14.29%)</title><rect x="868.9" y="213" width="168.6" height="15.0" fill="rgb(233,132,31)" rx="2" ry="2" />
<text  x="871.91" y="223.5" >encoding/json.(*decod..</text>
</g>
<g >
<title>github.com/hypebeast/go-osc/osc.(*Server).readFromConnection (7 samples, 4.76%)</title><rect x="106.3" y="325" width="56.2" height="15.0" fill="rgb(230,118,28)" rx="2" ry="2" />
<text  x="109.33" y="335.5" >githu..</text>
</g>
<g >
<title>syscall.Syscall (1 samples, 0.68%)</title><rect x="26.1" y="293" width="8.0" height="15.0" fill="rgb(215,47,11)" rx="2" ry="2" />
<text  x="29.05" y="303.5" ></text>
</g>
<g >
<title>runtime.(*mcache).refill (1 samples, 0.68%)</title><rect x="82.2" y="245" width="8.1" height="15.0" fill="rgb(232,124,29)" rx="2" ry="2" />
<text  x="85.24" y="255.5" ></text>
</g>
<g >
<title>github.com/hypebeast/go-osc/osc.(*Message).Append (1 samples, 0.68%)</title><rect x="210.7" y="245" width="8.0" height="15.0" fill="rgb(240,163,38)" rx="2" ry="2" />
<text  x="213.68" y="255.5" ></text>
</g>
<g >
<title>runtime.(*pageAlloc).scavenge.func1 (1 samples, 0.68%)</title><rect x="170.5" y="293" width="8.1" height="15.0" fill="rgb(217,56,13)" rx="2" ry="2" />
<text  x="173.54" y="303.5" ></text>
</g>
<g >
<title>github.com/rivo/uniseg.propertyEastAsianWidth (1 samples, 0.68%)</title><rect x="459.5" y="165" width="8.1" height="15.0" fill="rgb(227,103,24)" rx="2" ry="2" />
<text  x="462.52" y="175.5" ></text>
</g>
<g >
<title>runtime.memclrNoHeapPointers (2 samples, 1.36%)</title><rect x="1013.4" y="85" width="16.1" height="15.0" fill="rgb(252,219,52)" rx="2" ry="2" />
<text  x="1016.40" y="95.5" ></text>
</g>
<g >
<title>github.com/schollz/2n/internal/supercollider.hasExtension (1 samples, 0.68%)</title><rect x="202.7" y="341" width="8.0" height="15.0" fill="rgb(240,163,39)" rx="2" ry="2" />
<text  x="205.65" y="351.5" ></text>
</g>
<g >
<title>runtime.gcBgMarkWorker (1 samples, 0.68%)</title><rect x="194.6" y="373" width="8.1" height="15.0" fill="rgb(235,140,33)" rx="2" ry="2" />
<text  x="197.63" y="383.5" ></text>
</g>
<g >
<title>github.com/charmbracelet/lipgloss.Style.Render (1 samples, 0.68%)</title><rect x="780.6" y="245" width="8.0" height="15.0" fill="rgb(224,88,21)" rx="2" ry="2" />
<text  x="783.61" y="255.5" ></text>
</g>
<g >
<title>runtime.duffcopy (2 samples, 1.36%)</title><rect x="371.2" y="213" width="16.1" height="15.0" fill="rgb(248,197,47)" rx="2" ry="2" />
<text  x="374.22" y="223.5" ></text>
</g>
<g >
<title>fmt.(*pp).doPrintf (1 samples, 0.68%)</title><rect x="644.1" y="213" width="8.1" height="15.0" fill="rgb(251,215,51)" rx="2" ry="2" />
<text  x="647.15" y="223.5" ></text>
</g>
<g >
<title>runtime.sweepone (2 samples, 1.36%)</title><rect x="178.6" y="357" width="16.0" height="15.0" fill="rgb(209,19,4)" rx="2" ry="2" />
<text  x="181.57" y="367.5" ></text>
</g>
<g >
<title>bytes.NewBuffer (1 samples, 0.68%)</title><rect x="98.3" y="325" width="8.0" height="15.0" fill="rgb(243,175,41)" rx="2" ry="2" />
<text  x="101.30" y="335.5" ></text>
</g>
<g >
<title>runtime.goexit0 (3 samples, 2.04%)</title><rect x="1069.6" y="357" width="24.1" height="15.0" fill="rgb(231,122,29)" rx="2" ry="2" />
<text  x="1072.59" y="367.5" >r..</text>
</g>
<g >
<title>regexp/syntax.parse (2 samples, 1.36%)</title><rect x="58.2" y="293" width="16.0" height="15.0" fill="rgb(239,157,37)" rx="2" ry="2" />
<text  x="61.16" y="303.5" ></text>
</g>
<g >
<title>strings.Count (1 samples, 0.68%)</title><rect x="780.6" y="197" width="8.0" height="15.0" fill="rgb(224,91,21)" rx="2" ry="2" />
<text  x="783.61" y="207.5" ></text>
</g>
<g >
<title>github.com/schollz/2n/internal/views.RenderFileView (1 samples, 0.68%)</title><rect x="307.0" y="293" width="8.0" height="15.0" fill="rgb(222,79,18)" rx="2" ry="2" />
<text  x="310.01" y="303.5" ></text>
</g>
<g >
<title>os.(*File).write (1 samples, 0.68%)</title><rect x="26.1" y="341" width="8.0" height="15.0" fill="rgb(248,201,48)" rx="2" ry="2" />
<text  x="29.05" y="351.5" ></text>
</g>
<g >
<title>net.(*UDPConn).readFromUDP (3 samples, 2.04%)</title><rect x="106.3" y="293" width="24.1" height="15.0" fill="rgb(209,21,5)" rx="2" ry="2" />
<text  x="109.33" y="303.5" >n..</text>
</g>
<g >
<title>encoding/json.(*decodeState).array (20 samples, 13.61%)</title><rect x="868.9" y="165" width="160.6" height="15.0" fill="rgb(220,72,17)" rx="2" ry="2" />
<text  x="871.91" y="175.5" >encoding/json.(*deco..</text>
</g>
<g >
<title>internal/runtime/syscall.Syscall6 (1 samples, 0.68%)</title><rect x="1069.6" y="277" width="8.0" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="1072.59" y="287.5" ></text>
</g>
<g >
<title>runtime.asyncPreempt (1 samples, 0.68%)</title><rect x="660.2" y="229" width="8.0" height="15.0" fill="rgb(243,174,41)" rx="2" ry="2" />
<text  x="663.20" y="239.5" ></text>
</g>
<g >
<title>runtime.mallocgc (1 samples, 0.68%)</title><rect x="844.8" y="245" width="8.1" height="15.0" fill="rgb(241,169,40)" rx="2" ry="2" />
<text  x="847.83" y="255.5" ></text>
</g>
<g >
<title>all (147 samples, 100%)</title><rect x="10.0" y="389" width="1180.0" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="13.00" y="399.5" ></text>
</g>
<g >
<title>runtime.(*spanSet).push (1 samples, 0.68%)</title><rect x="66.2" y="165" width="8.0" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="69.19" y="175.5" ></text>
</g>
<g >
<title>github.com/rivo/uniseg.runeWidth (1 samples, 0.68%)</title><rect x="34.1" y="309" width="8.0" height="15.0" fill="rgb(235,140,33)" rx="2" ry="2" />
<text  x="37.08" y="319.5" ></text>
</g>
<g >
<title>reflect.Value.Int (1 samples, 0.68%)</title><rect x="291.0" y="101" width="8.0" height="15.0" fill="rgb(212,36,8)" rx="2" ry="2" />
<text  x="293.95" y="111.5" ></text>
</g>
<g >
<title>regexp/syntax.Parse (2 samples, 1.36%)</title><rect x="58.2" y="309" width="16.0" height="15.0" fill="rgb(245,188,45)" rx="2" ry="2" />
<text  x="61.16" y="319.5" ></text>
</g>
<g >
<title>strings.Count (1 samples, 0.68%)</title><rect x="836.8" y="229" width="8.0" height="15.0" fill="rgb(224,91,21)" rx="2" ry="2" />
<text  x="839.80" y="239.5" ></text>
</g>
<g >
<title>runtime.(*mheap).alloc.func1 (1 samples, 0.68%)</title><rect x="812.7" y="101" width="8.0" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="815.72" y="111.5" ></text>
</g>
<g >
<title>runtime.newobject (1 samples, 0.68%)</title><rect x="50.1" y="293" width="8.1" height="15.0" fill="rgb(221,75,18)" rx="2" ry="2" />
<text  x="53.14" y="303.5" ></text>
</g>
<g >
<title>syscall.Syscall6 (1 samples, 0.68%)</title><rect x="299.0" y="165" width="8.0" height="15.0" fill="rgb(216,52,12)" rx="2" ry="2" />
<text  x="301.98" y="175.5" ></text>
</g>
<g >
<title>github.com/rivo/uniseg.FirstGraphemeClusterInString (1 samples, 0.68%)</title><rect x="628.1" y="213" width="8.0" height="15.0" fill="rgb(237,148,35)" rx="2" ry="2" />
<text  x="631.10" y="223.5" ></text>
</g>
<g >
<title>internal/poll.ignoringEINTRIO (1 samples, 0.68%)</title><rect x="162.5" y="245" width="8.0" height="15.0" fill="rgb(227,103,24)" rx="2" ry="2" />
<text  x="165.52" y="255.5" ></text>
</g>
<g >
<title>runtime.(*mheap).allocMSpanLocked (1 samples, 0.68%)</title><rect x="812.7" y="69" width="8.0" height="15.0" fill="rgb(249,203,48)" rx="2" ry="2" />
<text  x="815.72" y="79.5" ></text>
</g>
<g >
<title>runtime.futexsleep (3 samples, 2.04%)</title><rect x="1101.7" y="277" width="24.1" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="1104.70" y="287.5" >r..</text>
</g>
<g >
<title>net.DialUDP (1 samples, 0.68%)</title><rect x="218.7" y="213" width="8.0" height="15.0" fill="rgb(207,9,2)" rx="2" ry="2" />
<text  x="221.71" y="223.5" ></text>
</g>
<g >
<title>net.(*Resolver).lookupIP (1 samples, 0.68%)</title><rect x="74.2" y="325" width="8.0" height="15.0" fill="rgb(230,118,28)" rx="2" ry="2" />
<text  x="77.22" y="335.5" ></text>
</g>
</g>
</svg>
