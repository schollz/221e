name: Build
on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  macos:
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v4
      - name: Install rtmidi dependencies
        run: |
          brew update
          brew install pkg-config
          brew install rtmidi
          brew install sox
      - uses: actions/setup-go@v5
        with:
          go-version: "stable"
      - name: Set up environment variables
        run: |
          echo "CGO_ENABLED=1" >> $GITHUB_ENV
      - name: Test
        run: go test -v ./...
      - name: Build Go project
        run: go build -v

  linux:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Install ALSA development libraries
        run: sudo apt-get update && sudo apt-get install -y libasound2-dev sox
      - uses: actions/setup-go@v5
        with:
          go-version: "stable"
      - name: Test
        run: go test -v ./...
      - name: Build Go project
        run: go build -v

  alpine:
    runs-on: ubuntu-latest
    container:
      image: golang:1.25-alpine
    steps:
      - name: Install build dependencies
        run: |
          apk add --no-cache \
            git \
            build-base \
            autoconf \
            automake \
            libtool \
            linux-headers \
            alsa-lib-dev \
            sox
      - uses: actions/checkout@v4
      - name: Build ALSA library statically
        run: |
          cd /tmp
          git clone https://github.com/alsa-project/alsa-lib.git
          cd alsa-lib
          git checkout v1.2.10
          libtoolize --force --copy --automake
          aclocal
          autoheader
          automake --foreign --copy --add-missing
          autoconf
          ./configure --prefix=/usr/local --enable-shared=no --enable-static=yes --disable-ucm
          make -j$(nproc)
          make install
      - name: Build Go project
        run: |
          export PKG_CONFIG_PATH="/usr/local/lib/pkgconfig:$PKG_CONFIG_PATH"
          export CGO_CFLAGS="-I/usr/local/include"
          export CGO_LDFLAGS="-L/usr/local/lib"
          CGO_ENABLED=1 go build -buildvcs=false -ldflags '-linkmode external -extldflags "-static -L/usr/local/lib"' -o 2n-static
      - name: Verify static binary
        run: |
          file 2n-static
          (ldd 2n-static 2>/dev/null || echo "âœ“ Static binary!")
          ls -lh 2n-static
      - name: Upload Alpine static binary
        uses: actions/upload-artifact@v4
        with:
          name: alpine-static-binary
          path: 2n-static

  windows:
    runs-on: windows-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Set up MSYS2
        uses: msys2/setup-msys2@v2
        with:
          msystem: MINGW64
          update: true
      - name: Install required packages
        shell: msys2 {0}
        run: |
          pacman -S --noconfirm mingw-w64-x86_64-rtmidi mingw-w64-x86_64-toolchain
      - name: Set up environment variables for Go
        run: |
          $env:Path += ";C:\\msys64\\mingw64\\bin"
          $env:CGO_ENABLED = "1"
          $env:CC = "x86_64-w64-mingw32-gcc"
          $env:CGO_LDFLAGS = "-static"
      - uses: actions/setup-go@v5
        with:
          go-version: "stable"
      - name: Test
        run: go test -v ./...
      - name: Build Go project
        run: |
          go build -v