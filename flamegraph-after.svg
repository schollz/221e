<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="422" onload="init(evt)" viewBox="0 0 1200 422" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<!-- Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples. -->
<!-- NOTES:  -->
<defs>
	<linearGradient id="background" y1="0" y2="1" x1="0" x2="0" >
		<stop stop-color="#eeeeee" offset="5%" />
		<stop stop-color="#eeeeb0" offset="95%" />
	</linearGradient>
</defs>
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search, #ignorecase { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show, #ignorecase:hover, #ignorecase.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching, currentSearchTerm, ignorecase, ignorecaseBtn;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		ignorecaseBtn = document.getElementById("ignorecase");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
		currentSearchTerm = null;

		// use GET parameters to restore a flamegraphs state.
		var params = get_params();
		if (params.x && params.y)
			zoom(find_group(document.querySelector('[x="' + params.x + '"][y="' + params.y + '"]')));
                if (params.s) search(params.s);
	}

	// event listeners
	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom(true);
			zoom(target);
			if (!document.querySelector('.parent')) {
				// we have basically done a clearzoom so clear the url
				var params = get_params();
				if (params.x) delete params.x;
				if (params.y) delete params.y;
				history.replaceState(null, null, parse_params(params));
				unzoombtn.classList.add("hide");
				return;
			}

			// set parameters for zoom state
			var el = target.querySelector("rect");
			if (el && el.attributes && el.attributes.y && el.attributes._orig_x) {
				var params = get_params()
				params.x = el.attributes._orig_x.value;
				params.y = el.attributes.y.value;
				history.replaceState(null, null, parse_params(params));
			}
		}
		else if (e.target.id == "unzoom") clearzoom();
		else if (e.target.id == "search") search_prompt();
		else if (e.target.id == "ignorecase") toggle_ignorecase();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	// ctrl-I to toggle case-sensitive search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
		else if (e.ctrlKey && e.keyCode === 73) {
			e.preventDefault();
			toggle_ignorecase();
		}
	}, false)

	// functions
	function get_params() {
		var params = {};
		var paramsarr = window.location.search.substr(1).split('&');
		for (var i = 0; i < paramsarr.length; ++i) {
			var tmp = paramsarr[i].split("=");
			if (!tmp[0] || !tmp[1]) continue;
			params[tmp[0]]  = decodeURIComponent(tmp[1]);
		}
		return params;
	}
	function parse_params(params) {
		var uri = "?";
		for (var key in params) {
			uri += key + '=' + encodeURIComponent(params[key]) + '&';
		}
		if (uri.slice(-1) == "&")
			uri = uri.substring(0, uri.length - 1);
		if (uri == '?')
			uri = window.location.href.split('?')[0];
		return uri;
	}
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		var sl = t.getSubStringLength(0, txt.length);
		// check if only whitespace or if we can fit the entire string into width w
		if (/^ *$/.test(txt) || sl < w)
			return;

		// this isn't perfect, but gives a good starting point
		// and avoids calling getSubStringLength too often
		var start = Math.floor((w/sl) * txt.length);
		for (var x = start; x > 0; x = x-2) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
		search();
	}
	function unzoom(dont_update_text) {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			if(!dont_update_text) update_text(el[i]);
		}
		search();
	}
	function clearzoom() {
		unzoom();

		// remove zoom state
		var params = get_params();
		if (params.x) delete params.x;
		if (params.y) delete params.y;
		history.replaceState(null, null, parse_params(params));
	}

	// search
	function toggle_ignorecase() {
		ignorecase = !ignorecase;
		if (ignorecase) {
			ignorecaseBtn.classList.add("show");
		} else {
			ignorecaseBtn.classList.remove("show");
		}
		reset_search();
		search();
	}
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
		var params = get_params();
		delete params.s;
		history.replaceState(null, null, parse_params(params));
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)"
			    + (ignorecase ? ", ignoring case" : "")
			    + "\nPress Ctrl-i to toggle case sensitivity", "");
			if (term != null) search(term);
		} else {
			reset_search();
			searching = 0;
			currentSearchTerm = null;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		if (term) currentSearchTerm = term;
		if (currentSearchTerm === null) return;

		var re = new RegExp(currentSearchTerm, ignorecase ? 'i' : '');
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;
		var params = get_params();
		params.s = currentSearchTerm;
		history.replaceState(null, null, parse_params(params));

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0.0" y="0" width="1200.0" height="422.0" fill="url(#background)"  />
<text id="title" x="600.00" y="24" >Flame Graph</text>
<text id="details" x="10.00" y="405" > </text>
<text id="unzoom" x="10.00" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090.00" y="24" >Search</text>
<text id="ignorecase" x="1174.00" y="24" >ic</text>
<text id="matched" x="1090.00" y="405" > </text>
<g id="frames">
<g >
<title>github.com/rivo/uniseg.runeWidth (1 samples, 0.63%)</title><rect x="39.9" y="293" width="7.4" height="15.0" fill="rgb(235,140,33)" rx="2" ry="2" />
<text  x="42.87" y="303.5" ></text>
</g>
<g >
<title>github.com/charmbracelet/lipgloss.Style.maybeConvertTabs (1 samples, 0.63%)</title><rect x="361.0" y="213" width="7.5" height="15.0" fill="rgb(247,196,47)" rx="2" ry="2" />
<text  x="364.01" y="223.5" ></text>
</g>
<g >
<title>path/filepath.walk (1 samples, 0.63%)</title><rect x="122.0" y="213" width="7.5" height="15.0" fill="rgb(248,200,48)" rx="2" ry="2" />
<text  x="125.03" y="223.5" ></text>
</g>
<g >
<title>encoding/json.structEncoder.encode (4 samples, 2.53%)</title><rect x="129.5" y="181" width="29.9" height="15.0" fill="rgb(251,213,50)" rx="2" ry="2" />
<text  x="132.49" y="191.5" >en..</text>
</g>
<g >
<title>runtime.systemstack (1 samples, 0.63%)</title><rect x="62.3" y="309" width="7.4" height="15.0" fill="rgb(206,6,1)" rx="2" ry="2" />
<text  x="65.28" y="319.5" ></text>
</g>
<g >
<title>encoding/json.(*decodeState).literalStore (9 samples, 5.70%)</title><rect x="973.4" y="117" width="67.2" height="15.0" fill="rgb(248,200,48)" rx="2" ry="2" />
<text  x="976.42" y="127.5" >encodin..</text>
</g>
<g >
<title>runtime.memclrNoHeapPointers (1 samples, 0.63%)</title><rect x="1078.0" y="69" width="7.4" height="15.0" fill="rgb(252,219,52)" rx="2" ry="2" />
<text  x="1080.97" y="79.5" ></text>
</g>
<g >
<title>path/filepath.walk (1 samples, 0.63%)</title><rect x="122.0" y="165" width="7.5" height="15.0" fill="rgb(248,200,48)" rx="2" ry="2" />
<text  x="125.03" y="175.5" ></text>
</g>
<g >
<title>github.com/charmbracelet/lipgloss.pad (1 samples, 0.63%)</title><rect x="338.6" y="229" width="7.5" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="341.61" y="239.5" ></text>
</g>
<g >
<title>runtime.(*consistentHeapStats).acquire (1 samples, 0.63%)</title><rect x="54.8" y="309" width="7.5" height="15.0" fill="rgb(253,223,53)" rx="2" ry="2" />
<text  x="57.81" y="319.5" ></text>
</g>
<g >
<title>runtime.futexwakeup (1 samples, 0.63%)</title><rect x="1182.5" y="245" width="7.5" height="15.0" fill="rgb(219,66,15)" rx="2" ry="2" />
<text  x="1185.53" y="255.5" ></text>
</g>
<g >
<title>fmt.newPrinter (1 samples, 0.63%)</title><rect x="443.2" y="197" width="7.4" height="15.0" fill="rgb(241,169,40)" rx="2" ry="2" />
<text  x="446.16" y="207.5" ></text>
</g>
<g >
<title>strings.genSplit (1 samples, 0.63%)</title><rect x="868.9" y="197" width="7.4" height="15.0" fill="rgb(227,102,24)" rx="2" ry="2" />
<text  x="871.86" y="207.5" ></text>
</g>
<g >
<title>runtime.unlock2 (1 samples, 0.63%)</title><rect x="405.8" y="53" width="7.5" height="15.0" fill="rgb(244,181,43)" rx="2" ry="2" />
<text  x="408.82" y="63.5" ></text>
</g>
<g >
<title>runtime.duffcopy (1 samples, 0.63%)</title><rect x="368.5" y="213" width="7.4" height="15.0" fill="rgb(248,197,47)" rx="2" ry="2" />
<text  x="371.48" y="223.5" ></text>
</g>
<g >
<title>syscall.RawSyscall6 (1 samples, 0.63%)</title><rect x="181.8" y="149" width="7.4" height="15.0" fill="rgb(241,167,40)" rx="2" ry="2" />
<text  x="184.77" y="159.5" ></text>
</g>
<g >
<title>encoding/json.sliceEncoder.encode (4 samples, 2.53%)</title><rect x="129.5" y="117" width="29.9" height="15.0" fill="rgb(213,40,9)" rx="2" ry="2" />
<text  x="132.49" y="127.5" >en..</text>
</g>
<g >
<title>runtime.park_m (8 samples, 5.06%)</title><rect x="1130.3" y="341" width="59.7" height="15.0" fill="rgb(233,132,31)" rx="2" ry="2" />
<text  x="1133.25" y="351.5" >runtim..</text>
</g>
<g >
<title>runtime.schedule (7 samples, 4.43%)</title><rect x="1137.7" y="325" width="52.3" height="15.0" fill="rgb(220,72,17)" rx="2" ry="2" />
<text  x="1140.72" y="335.5" >runti..</text>
</g>
<g >
<title>internal/runtime/syscall.EpollWait (1 samples, 0.63%)</title><rect x="1160.1" y="277" width="7.5" height="15.0" fill="rgb(233,130,31)" rx="2" ry="2" />
<text  x="1163.13" y="287.5" ></text>
</g>
<g >
<title>runtime.duffzero (1 samples, 0.63%)</title><rect x="450.6" y="165" width="7.5" height="15.0" fill="rgb(215,49,11)" rx="2" ry="2" />
<text  x="453.63" y="175.5" ></text>
</g>
<g >
<title>github.com/charmbracelet/x/ansi/parser.TransitionTable.Transition (3 samples, 1.90%)</title><rect x="249.0" y="197" width="22.4" height="15.0" fill="rgb(237,149,35)" rx="2" ry="2" />
<text  x="251.99" y="207.5" >g..</text>
</g>
<g >
<title>runtime.slicebytetostring (1 samples, 0.63%)</title><rect x="1025.7" y="101" width="7.5" height="15.0" fill="rgb(252,219,52)" rx="2" ry="2" />
<text  x="1028.70" y="111.5" ></text>
</g>
<g >
<title>reflect.Value.grow (4 samples, 2.53%)</title><rect x="1055.6" y="117" width="29.8" height="15.0" fill="rgb(206,8,1)" rx="2" ry="2" />
<text  x="1058.57" y="127.5" >re..</text>
</g>
<g >
<title>internal/runtime/maps.(*table).split (1 samples, 0.63%)</title><rect x="398.4" y="197" width="7.4" height="15.0" fill="rgb(220,71,17)" rx="2" ry="2" />
<text  x="401.35" y="207.5" ></text>
</g>
<g >
<title>os.WriteFile (1 samples, 0.63%)</title><rect x="181.8" y="229" width="7.4" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="184.77" y="239.5" ></text>
</g>
<g >
<title>github.com/rivo/uniseg.transitionGraphemeState (1 samples, 0.63%)</title><rect x="211.6" y="165" width="7.5" height="15.0" fill="rgb(208,17,4)" rx="2" ry="2" />
<text  x="214.65" y="175.5" ></text>
</g>
<g >
<title>internal/runtime/maps.newTable (1 samples, 0.63%)</title><rect x="398.4" y="181" width="7.4" height="15.0" fill="rgb(228,109,26)" rx="2" ry="2" />
<text  x="401.35" y="191.5" ></text>
</g>
<g >
<title>runtime.main (133 samples, 84.18%)</title><rect x="122.0" y="357" width="993.3" height="15.0" fill="rgb(209,21,5)" rx="2" ry="2" />
<text  x="125.03" y="367.5" >runtime.main</text>
</g>
<g >
<title>internal/stringslite.Index (1 samples, 0.63%)</title><rect x="861.4" y="165" width="7.5" height="15.0" fill="rgb(241,167,40)" rx="2" ry="2" />
<text  x="864.39" y="175.5" ></text>
</g>
<g >
<title>github.com/charmbracelet/x/ansi.stringWidth (7 samples, 4.43%)</title><rect x="271.4" y="213" width="52.3" height="15.0" fill="rgb(253,225,53)" rx="2" ry="2" />
<text  x="274.39" y="223.5" >githu..</text>
</g>
<g >
<title>runtime.memmove (1 samples, 0.63%)</title><rect x="906.2" y="245" width="7.5" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="909.20" y="255.5" ></text>
</g>
<g >
<title>runtime.getMCache (1 samples, 0.63%)</title><rect x="562.7" y="117" width="7.4" height="15.0" fill="rgb(241,168,40)" rx="2" ry="2" />
<text  x="565.66" y="127.5" ></text>
</g>
<g >
<title>runtime.notesleep (1 samples, 0.63%)</title><rect x="1122.8" y="277" width="7.5" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="1125.78" y="287.5" ></text>
</g>
<g >
<title>runtime.gcDrainMarkWorkerIdle (1 samples, 0.63%)</title><rect x="114.6" y="325" width="7.4" height="15.0" fill="rgb(218,61,14)" rx="2" ry="2" />
<text  x="117.56" y="335.5" ></text>
</g>
<g >
<title>reflect.Value.Addr (1 samples, 0.63%)</title><rect x="1018.2" y="85" width="7.5" height="15.0" fill="rgb(246,188,45)" rx="2" ry="2" />
<text  x="1021.23" y="95.5" ></text>
</g>
<g >
<title>github.com/rivo/uniseg.propertySearch[go.shape.[3]int] (1 samples, 0.63%)</title><rect x="241.5" y="149" width="7.5" height="15.0" fill="rgb(225,96,22)" rx="2" ry="2" />
<text  x="244.52" y="159.5" ></text>
</g>
<g >
<title>sync/atomic.(*Int32).Add (1 samples, 0.63%)</title><rect x="876.3" y="213" width="7.5" height="15.0" fill="rgb(235,140,33)" rx="2" ry="2" />
<text  x="879.33" y="223.5" ></text>
</g>
<g >
<title>os.Lstat (1 samples, 0.63%)</title><rect x="122.0" y="149" width="7.5" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="125.03" y="159.5" ></text>
</g>
<g >
<title>encoding/json.(*decodeState).value (22 samples, 13.92%)</title><rect x="928.6" y="261" width="164.3" height="15.0" fill="rgb(233,132,31)" rx="2" ry="2" />
<text  x="931.61" y="271.5" >encoding/json.(*decod..</text>
</g>
<g >
<title>github.com/schollz/2n/internal/views.getCachedStyled (8 samples, 5.06%)</title><rect x="353.5" y="245" width="59.8" height="15.0" fill="rgb(235,141,33)" rx="2" ry="2" />
<text  x="356.54" y="255.5" >github..</text>
</g>
<g >
<title>syscall.Lstat (1 samples, 0.63%)</title><rect x="122.0" y="133" width="7.5" height="15.0" fill="rgb(228,107,25)" rx="2" ry="2" />
<text  x="125.03" y="143.5" ></text>
</g>
<g >
<title>runtime.(*mcache).nextFree (1 samples, 0.63%)</title><rect x="405.8" y="181" width="7.5" height="15.0" fill="rgb(222,80,19)" rx="2" ry="2" />
<text  x="408.82" y="191.5" ></text>
</g>
<g >
<title>runtime.systemstack (1 samples, 0.63%)</title><rect x="323.7" y="85" width="7.4" height="15.0" fill="rgb(206,6,1)" rx="2" ry="2" />
<text  x="326.67" y="95.5" ></text>
</g>
<g >
<title>github.com/rivo/uniseg.FirstGraphemeClusterInString (2 samples, 1.27%)</title><rect x="204.2" y="181" width="14.9" height="15.0" fill="rgb(237,148,35)" rx="2" ry="2" />
<text  x="207.18" y="191.5" ></text>
</g>
<g >
<title>bytes.(*Buffer).WriteByte (1 samples, 0.63%)</title><rect x="129.5" y="85" width="7.5" height="15.0" fill="rgb(238,152,36)" rx="2" ry="2" />
<text  x="132.49" y="95.5" ></text>
</g>
<g >
<title>bytes.(*Buffer).Write (1 samples, 0.63%)</title><rect x="166.8" y="69" width="7.5" height="15.0" fill="rgb(247,197,47)" rx="2" ry="2" />
<text  x="169.84" y="79.5" ></text>
</g>
<g >
<title>github.com/schollz/2n/internal/storage.AutoSave (4 samples, 2.53%)</title><rect x="159.4" y="245" width="29.8" height="15.0" fill="rgb(230,116,27)" rx="2" ry="2" />
<text  x="162.37" y="255.5" >gi..</text>
</g>
<g >
<title>github.com/charmbracelet/x/ansi.stringWidth (3 samples, 1.90%)</title><rect x="226.6" y="197" width="22.4" height="15.0" fill="rgb(253,225,53)" rx="2" ry="2" />
<text  x="229.58" y="207.5" >g..</text>
</g>
<g >
<title>encoding/json.intEncoder (2 samples, 1.27%)</title><rect x="137.0" y="85" width="14.9" height="15.0" fill="rgb(251,214,51)" rx="2" ry="2" />
<text  x="139.96" y="95.5" ></text>
</g>
<g >
<title>runtime.duffcopy (1 samples, 0.63%)</title><rect x="555.2" y="165" width="7.5" height="15.0" fill="rgb(248,197,47)" rx="2" ry="2" />
<text  x="558.19" y="175.5" ></text>
</g>
<g >
<title>syscall.fstatat (1 samples, 0.63%)</title><rect x="122.0" y="117" width="7.5" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="125.03" y="127.5" ></text>
</g>
<g >
<title>github.com/schollz/2n/internal/model.NewModel (1 samples, 0.63%)</title><rect x="921.1" y="309" width="7.5" height="15.0" fill="rgb(237,148,35)" rx="2" ry="2" />
<text  x="924.14" y="319.5" ></text>
</g>
<g >
<title>github.com/charmbracelet/lipgloss.colorOrNil (1 samples, 0.63%)</title><rect x="189.2" y="245" width="7.5" height="15.0" fill="rgb(231,123,29)" rx="2" ry="2" />
<text  x="192.24" y="255.5" ></text>
</g>
<g >
<title>github.com/charmbracelet/lipgloss.Style.applyMargins (4 samples, 2.53%)</title><rect x="196.7" y="229" width="29.9" height="15.0" fill="rgb(241,166,39)" rx="2" ry="2" />
<text  x="199.71" y="239.5" >gi..</text>
</g>
<g >
<title>github.com/charmbracelet/x/ansi.StringWidth (4 samples, 2.53%)</title><rect x="196.7" y="213" width="29.9" height="15.0" fill="rgb(210,26,6)" rx="2" ry="2" />
<text  x="199.71" y="223.5" >gi..</text>
</g>
<g >
<title>github.com/schollz/2n/internal/input.HandleKeyInput (8 samples, 5.06%)</title><rect x="129.5" y="277" width="59.7" height="15.0" fill="rgb(244,182,43)" rx="2" ry="2" />
<text  x="132.49" y="287.5" >github..</text>
</g>
<g >
<title>runtime.growslice (2 samples, 1.27%)</title><rect x="846.5" y="197" width="14.9" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="849.46" y="207.5" ></text>
</g>
<g >
<title>runtime.gfput (1 samples, 0.63%)</title><rect x="1115.3" y="309" width="7.5" height="15.0" fill="rgb(226,98,23)" rx="2" ry="2" />
<text  x="1118.32" y="319.5" ></text>
</g>
<g >
<title>reflect.Value.Grow (5 samples, 3.16%)</title><rect x="1048.1" y="133" width="37.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1051.10" y="143.5" >ref..</text>
</g>
<g >
<title>github.com/rivo/uniseg.transitionGraphemeState (1 samples, 0.63%)</title><rect x="17.5" y="293" width="7.4" height="15.0" fill="rgb(208,17,4)" rx="2" ry="2" />
<text  x="20.47" y="303.5" ></text>
</g>
<g >
<title>github.com/muesli/termenv.Style.Foreground (2 samples, 1.27%)</title><rect x="375.9" y="229" width="15.0" height="15.0" fill="rgb(244,183,43)" rx="2" ry="2" />
<text  x="378.95" y="239.5" ></text>
</g>
<g >
<title>runtime.startm (1 samples, 0.63%)</title><rect x="1182.5" y="277" width="7.5" height="15.0" fill="rgb(220,71,17)" rx="2" ry="2" />
<text  x="1185.53" y="287.5" ></text>
</g>
<g >
<title>github.com/charmbracelet/lipgloss.Style.Render (3 samples, 1.90%)</title><rect x="353.5" y="229" width="22.4" height="15.0" fill="rgb(224,88,21)" rx="2" ry="2" />
<text  x="356.54" y="239.5" >g..</text>
</g>
<g >
<title>fmt.(*buffer).writeString (2 samples, 1.27%)</title><rect x="592.5" y="101" width="15.0" height="15.0" fill="rgb(205,1,0)" rx="2" ry="2" />
<text  x="595.53" y="111.5" ></text>
</g>
<g >
<title>strconv.ParseInt (1 samples, 0.63%)</title><rect x="1033.2" y="101" width="7.4" height="15.0" fill="rgb(251,214,51)" rx="2" ry="2" />
<text  x="1036.16" y="111.5" ></text>
</g>
<g >
<title>aeshashbody (1 samples, 0.63%)</title><rect x="794.2" y="197" width="7.4" height="15.0" fill="rgb(250,210,50)" rx="2" ry="2" />
<text  x="797.18" y="207.5" ></text>
</g>
<g >
<title>strings.Split (1 samples, 0.63%)</title><rect x="868.9" y="213" width="7.4" height="15.0" fill="rgb(205,2,0)" rx="2" ry="2" />
<text  x="871.86" y="223.5" ></text>
</g>
<g >
<title>runtime.memclrNoHeapPointers (1 samples, 0.63%)</title><rect x="398.4" y="69" width="7.4" height="15.0" fill="rgb(252,219,52)" rx="2" ry="2" />
<text  x="401.35" y="79.5" ></text>
</g>
<g >
<title>runtime.duffcopy (1 samples, 0.63%)</title><rect x="540.3" y="165" width="7.4" height="15.0" fill="rgb(248,197,47)" rx="2" ry="2" />
<text  x="543.25" y="175.5" ></text>
</g>
<g >
<title>memeqbody (1 samples, 0.63%)</title><rect x="801.6" y="197" width="7.5" height="15.0" fill="rgb(242,173,41)" rx="2" ry="2" />
<text  x="804.65" y="207.5" ></text>
</g>
<g >
<title>strings.genSplit (1 samples, 0.63%)</title><rect x="562.7" y="165" width="7.4" height="15.0" fill="rgb(227,102,24)" rx="2" ry="2" />
<text  x="565.66" y="175.5" ></text>
</g>
<g >
<title>syscall.write (1 samples, 0.63%)</title><rect x="181.8" y="181" width="7.4" height="15.0" fill="rgb(252,217,51)" rx="2" ry="2" />
<text  x="184.77" y="191.5" ></text>
</g>
<g >
<title>runtime.unlockWithRank (1 samples, 0.63%)</title><rect x="405.8" y="69" width="7.5" height="15.0" fill="rgb(247,197,47)" rx="2" ry="2" />
<text  x="408.82" y="79.5" ></text>
</g>
<g >
<title>runtime.goexit0 (2 samples, 1.27%)</title><rect x="1115.3" y="341" width="15.0" height="15.0" fill="rgb(231,122,29)" rx="2" ry="2" />
<text  x="1118.32" y="351.5" ></text>
</g>
<g >
<title>runtime.markBits.isMarked (1 samples, 0.63%)</title><rect x="107.1" y="277" width="7.5" height="15.0" fill="rgb(205,3,0)" rx="2" ry="2" />
<text  x="110.09" y="287.5" ></text>
</g>
<g >
<title>encoding/json.structEncoder.encode (3 samples, 1.90%)</title><rect x="159.4" y="181" width="22.4" height="15.0" fill="rgb(251,213,50)" rx="2" ry="2" />
<text  x="162.37" y="191.5" >e..</text>
</g>
<g >
<title>runtime.makeslice (1 samples, 0.63%)</title><rect x="868.9" y="181" width="7.4" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="871.86" y="191.5" ></text>
</g>
<g >
<title>fmt.(*buffer).write (1 samples, 0.63%)</title><rect x="428.2" y="117" width="7.5" height="15.0" fill="rgb(231,121,29)" rx="2" ry="2" />
<text  x="431.23" y="127.5" ></text>
</g>
<g >
<title>github.com/charmbracelet/lipgloss.Style.getAsBool (4 samples, 2.53%)</title><rect x="667.2" y="213" width="29.9" height="15.0" fill="rgb(213,40,9)" rx="2" ry="2" />
<text  x="670.22" y="223.5" >gi..</text>
</g>
<g >
<title>runtime.forEachPInternal (1 samples, 0.63%)</title><rect x="62.3" y="277" width="7.4" height="15.0" fill="rgb(211,28,6)" rx="2" ry="2" />
<text  x="65.28" y="287.5" ></text>
</g>
<g >
<title>runtime.memmove (1 samples, 0.63%)</title><rect x="600.0" y="85" width="7.5" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="603.00" y="95.5" ></text>
</g>
<g >
<title>encoding/json.Unmarshal (25 samples, 15.82%)</title><rect x="928.6" y="293" width="186.7" height="15.0" fill="rgb(221,77,18)" rx="2" ry="2" />
<text  x="931.61" y="303.5" >encoding/json.Unmarshal</text>
</g>
<g >
<title>github.com/charmbracelet/lipgloss.Style.Foreground (1 samples, 0.63%)</title><rect x="189.2" y="261" width="7.5" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="192.24" y="271.5" ></text>
</g>
<g >
<title>github.com/charmbracelet/x/ansi.stringWidth (1 samples, 0.63%)</title><rect x="24.9" y="309" width="7.5" height="15.0" fill="rgb(253,225,53)" rx="2" ry="2" />
<text  x="27.94" y="319.5" ></text>
</g>
<g >
<title>runtime.scanobject (1 samples, 0.63%)</title><rect x="114.6" y="293" width="7.4" height="15.0" fill="rgb(233,131,31)" rx="2" ry="2" />
<text  x="117.56" y="303.5" ></text>
</g>
<g >
<title>bytes.(*Buffer).Write (1 samples, 0.63%)</title><rect x="137.0" y="69" width="7.4" height="15.0" fill="rgb(247,197,47)" rx="2" ry="2" />
<text  x="139.96" y="79.5" ></text>
</g>
<g >
<title>runtime.mallocgcSmallNoscan (1 samples, 0.63%)</title><rect x="323.7" y="181" width="7.4" height="15.0" fill="rgb(239,156,37)" rx="2" ry="2" />
<text  x="326.67" y="191.5" ></text>
</g>
<g >
<title>runtime.duffcopy (1 samples, 0.63%)</title><rect x="883.8" y="229" width="7.5" height="15.0" fill="rgb(248,197,47)" rx="2" ry="2" />
<text  x="886.80" y="239.5" ></text>
</g>
<g >
<title>runtime.(*sweepLocked).sweep (2 samples, 1.27%)</title><rect x="47.3" y="325" width="15.0" height="15.0" fill="rgb(220,70,16)" rx="2" ry="2" />
<text  x="50.34" y="335.5" ></text>
</g>
<g >
<title>github.com/charmbracelet/lipgloss.Style.applyMargins (1 samples, 0.63%)</title><rect x="913.7" y="229" width="7.4" height="15.0" fill="rgb(241,166,39)" rx="2" ry="2" />
<text  x="916.67" y="239.5" ></text>
</g>
<g >
<title>encoding/json.(*decodeState).value (22 samples, 13.92%)</title><rect x="928.6" y="229" width="164.3" height="15.0" fill="rgb(233,132,31)" rx="2" ry="2" />
<text  x="931.61" y="239.5" >encoding/json.(*decod..</text>
</g>
<g >
<title>runtime.gdestroy (1 samples, 0.63%)</title><rect x="1115.3" y="325" width="7.5" height="15.0" fill="rgb(238,152,36)" rx="2" ry="2" />
<text  x="1118.32" y="335.5" ></text>
</g>
<g >
<title>sync.(*Pool).Get (1 samples, 0.63%)</title><rect x="443.2" y="181" width="7.4" height="15.0" fill="rgb(241,165,39)" rx="2" ry="2" />
<text  x="446.16" y="191.5" ></text>
</g>
<g >
<title>encoding/json.(*decodeState).value (22 samples, 13.92%)</title><rect x="928.6" y="165" width="164.3" height="15.0" fill="rgb(233,132,31)" rx="2" ry="2" />
<text  x="931.61" y="175.5" >encoding/json.(*decod..</text>
</g>
<g >
<title>runtime.sweepone (2 samples, 1.27%)</title><rect x="47.3" y="341" width="15.0" height="15.0" fill="rgb(209,19,4)" rx="2" ry="2" />
<text  x="50.34" y="351.5" ></text>
</g>
<g >
<title>github.com/schollz/2n/internal/supercollider.hasExtension (1 samples, 0.63%)</title><rect x="122.0" y="325" width="7.5" height="15.0" fill="rgb(240,163,39)" rx="2" ry="2" />
<text  x="125.03" y="335.5" ></text>
</g>
<g >
<title>runtime.notesleep (1 samples, 0.63%)</title><rect x="1145.2" y="277" width="7.5" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="1148.19" y="287.5" ></text>
</g>
<g >
<title>github.com/rivo/uniseg.transitionGraphemeState (1 samples, 0.63%)</title><rect x="241.5" y="165" width="7.5" height="15.0" fill="rgb(208,17,4)" rx="2" ry="2" />
<text  x="244.52" y="175.5" ></text>
</g>
<g >
<title>runtime.duffcopy (1 samples, 0.63%)</title><rect x="361.0" y="197" width="7.5" height="15.0" fill="rgb(248,197,47)" rx="2" ry="2" />
<text  x="364.01" y="207.5" ></text>
</g>
<g >
<title>github.com/charmbracelet/lipgloss.Style.Render (29 samples, 18.35%)</title><rect x="450.6" y="213" width="216.6" height="15.0" fill="rgb(224,88,21)" rx="2" ry="2" />
<text  x="453.63" y="223.5" >github.com/charmbracelet/lip..</text>
</g>
<g >
<title>runtime.(*mcache).nextFree (1 samples, 0.63%)</title><rect x="323.7" y="165" width="7.4" height="15.0" fill="rgb(222,80,19)" rx="2" ry="2" />
<text  x="326.67" y="175.5" ></text>
</g>
<g >
<title>fmt.newPrinter (1 samples, 0.63%)</title><rect x="375.9" y="181" width="7.5" height="15.0" fill="rgb(241,169,40)" rx="2" ry="2" />
<text  x="378.95" y="191.5" ></text>
</g>
<g >
<title>strings.Split (1 samples, 0.63%)</title><rect x="562.7" y="181" width="7.4" height="15.0" fill="rgb(205,2,0)" rx="2" ry="2" />
<text  x="565.66" y="191.5" ></text>
</g>
<g >
<title>runtime.duffcopy (4 samples, 2.53%)</title><rect x="667.2" y="197" width="29.9" height="15.0" fill="rgb(248,197,47)" rx="2" ry="2" />
<text  x="670.22" y="207.5" >ru..</text>
</g>
<g >
<title>runtime.(*mcache).prepareForSweep (1 samples, 0.63%)</title><rect x="62.3" y="245" width="7.4" height="15.0" fill="rgb(213,37,9)" rx="2" ry="2" />
<text  x="65.28" y="255.5" ></text>
</g>
<g >
<title>github.com/charmbracelet/lipgloss.Style.maybeConvertTabs (1 samples, 0.63%)</title><rect x="585.1" y="197" width="7.4" height="15.0" fill="rgb(247,196,47)" rx="2" ry="2" />
<text  x="588.06" y="207.5" ></text>
</g>
<g >
<title>runtime.readUintptr (1 samples, 0.63%)</title><rect x="704.6" y="149" width="7.4" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="707.56" y="159.5" ></text>
</g>
<g >
<title>github.com/rivo/uniseg.propertySearch[go.shape.[3]int] (2 samples, 1.27%)</title><rect x="226.6" y="149" width="14.9" height="15.0" fill="rgb(225,96,22)" rx="2" ry="2" />
<text  x="229.58" y="159.5" ></text>
</g>
<g >
<title>fmt.(*pp).printArg (2 samples, 1.27%)</title><rect x="592.5" y="149" width="15.0" height="15.0" fill="rgb(245,185,44)" rx="2" ry="2" />
<text  x="595.53" y="159.5" ></text>
</g>
<g >
<title>runtime.duffcopy (1 samples, 0.63%)</title><rect x="585.1" y="181" width="7.4" height="15.0" fill="rgb(248,197,47)" rx="2" ry="2" />
<text  x="588.06" y="191.5" ></text>
</g>
<g >
<title>fmt.(*pp).printArg (2 samples, 1.27%)</title><rect x="428.2" y="181" width="15.0" height="15.0" fill="rgb(245,185,44)" rx="2" ry="2" />
<text  x="431.23" y="191.5" ></text>
</g>
<g >
<title>fmt.(*pp).doPrintf (2 samples, 1.27%)</title><rect x="592.5" y="165" width="15.0" height="15.0" fill="rgb(251,215,51)" rx="2" ry="2" />
<text  x="595.53" y="175.5" ></text>
</g>
<g >
<title>fmt.(*pp).fmtPointer (1 samples, 0.63%)</title><rect x="428.2" y="165" width="7.5" height="15.0" fill="rgb(241,169,40)" rx="2" ry="2" />
<text  x="431.23" y="175.5" ></text>
</g>
<g >
<title>github.com/schollz/2n/internal/input.handleUp (4 samples, 2.53%)</title><rect x="159.4" y="261" width="29.8" height="15.0" fill="rgb(244,183,43)" rx="2" ry="2" />
<text  x="162.37" y="271.5" >gi..</text>
</g>
<g >
<title>strings.(*Builder).WriteString (2 samples, 1.27%)</title><rect x="846.5" y="213" width="14.9" height="15.0" fill="rgb(251,212,50)" rx="2" ry="2" />
<text  x="849.46" y="223.5" ></text>
</g>
<g >
<title>fmt.Sprintf (1 samples, 0.63%)</title><rect x="375.9" y="197" width="7.5" height="15.0" fill="rgb(210,26,6)" rx="2" ry="2" />
<text  x="378.95" y="207.5" ></text>
</g>
<g >
<title>runtime.mapassign_faststr (5 samples, 3.16%)</title><rect x="809.1" y="213" width="37.4" height="15.0" fill="rgb(238,153,36)" rx="2" ry="2" />
<text  x="812.11" y="223.5" >run..</text>
</g>
<g >
<title>runtime.mallocgc (1 samples, 0.63%)</title><rect x="398.4" y="117" width="7.4" height="15.0" fill="rgb(241,169,40)" rx="2" ry="2" />
<text  x="401.35" y="127.5" ></text>
</g>
<g >
<title>syscall.Syscall (1 samples, 0.63%)</title><rect x="181.8" y="165" width="7.4" height="15.0" fill="rgb(215,47,11)" rx="2" ry="2" />
<text  x="184.77" y="175.5" ></text>
</g>
<g >
<title>runtime.wakep (1 samples, 0.63%)</title><rect x="1182.5" y="293" width="7.5" height="15.0" fill="rgb(216,54,13)" rx="2" ry="2" />
<text  x="1185.53" y="303.5" ></text>
</g>
<g >
<title>bytes.(*Buffer).grow (1 samples, 0.63%)</title><rect x="129.5" y="69" width="7.5" height="15.0" fill="rgb(238,155,37)" rx="2" ry="2" />
<text  x="132.49" y="79.5" ></text>
</g>
<g >
<title>reflect.(*rtype).Name (2 samples, 1.27%)</title><rect x="1003.3" y="85" width="14.9" height="15.0" fill="rgb(207,11,2)" rx="2" ry="2" />
<text  x="1006.29" y="95.5" ></text>
</g>
<g >
<title>github.com/schollz/2n/internal/storage.LoadState (25 samples, 15.82%)</title><rect x="928.6" y="309" width="186.7" height="15.0" fill="rgb(205,2,0)" rx="2" ry="2" />
<text  x="931.61" y="319.5" >github.com/schollz/2n/in..</text>
</g>
<g >
<title>syscall.RawSyscall6 (1 samples, 0.63%)</title><rect x="122.0" y="85" width="7.5" height="15.0" fill="rgb(241,167,40)" rx="2" ry="2" />
<text  x="125.03" y="95.5" ></text>
</g>
<g >
<title>internal/runtime/maps.newarray (1 samples, 0.63%)</title><rect x="398.4" y="149" width="7.4" height="15.0" fill="rgb(223,85,20)" rx="2" ry="2" />
<text  x="401.35" y="159.5" ></text>
</g>
<g >
<title>github.com/rivo/uniseg.FirstGraphemeClusterInString (3 samples, 1.90%)</title><rect x="226.6" y="181" width="22.4" height="15.0" fill="rgb(237,148,35)" rx="2" ry="2" />
<text  x="229.58" y="191.5" >g..</text>
</g>
<g >
<title>encoding/json.Marshal (3 samples, 1.90%)</title><rect x="159.4" y="229" width="22.4" height="15.0" fill="rgb(238,152,36)" rx="2" ry="2" />
<text  x="162.37" y="239.5" >e..</text>
</g>
<g >
<title>github.com/schollz/2n/internal/storage.AutoSave (4 samples, 2.53%)</title><rect x="129.5" y="245" width="29.9" height="15.0" fill="rgb(230,116,27)" rx="2" ry="2" />
<text  x="132.49" y="255.5" >gi..</text>
</g>
<g >
<title>internal/runtime/maps.ctrlGroup.matchH2 (5 samples, 3.16%)</title><rect x="727.0" y="213" width="37.3" height="15.0" fill="rgb(221,77,18)" rx="2" ry="2" />
<text  x="729.96" y="223.5" >int..</text>
</g>
<g >
<title>github.com/charmbracelet/lipgloss.Style.getAsInt (1 samples, 0.63%)</title><rect x="913.7" y="213" width="7.4" height="15.0" fill="rgb(240,162,38)" rx="2" ry="2" />
<text  x="916.67" y="223.5" ></text>
</g>
<g >
<title>runtime.(*mspan).base (1 samples, 0.63%)</title><rect x="697.1" y="149" width="7.5" height="15.0" fill="rgb(224,91,21)" rx="2" ry="2" />
<text  x="700.09" y="159.5" ></text>
</g>
<g >
<title>runtime.mallocgc (2 samples, 1.27%)</title><rect x="846.5" y="181" width="14.9" height="15.0" fill="rgb(241,169,40)" rx="2" ry="2" />
<text  x="849.46" y="191.5" ></text>
</g>
<g >
<title>github.com/muesli/termenv.Style.Styled (2 samples, 1.27%)</title><rect x="592.5" y="197" width="15.0" height="15.0" fill="rgb(221,73,17)" rx="2" ry="2" />
<text  x="595.53" y="207.5" ></text>
</g>
<g >
<title>runtime.(*mcentral).uncacheSpan (1 samples, 0.63%)</title><rect x="62.3" y="213" width="7.4" height="15.0" fill="rgb(227,104,24)" rx="2" ry="2" />
<text  x="65.28" y="223.5" ></text>
</g>
<g >
<title>github.com/schollz/2n/internal/views.RenderWaveform (1 samples, 0.63%)</title><rect x="346.1" y="229" width="7.4" height="15.0" fill="rgb(238,151,36)" rx="2" ry="2" />
<text  x="349.08" y="239.5" ></text>
</g>
<g >
<title>runtime.forEachP (1 samples, 0.63%)</title><rect x="62.3" y="325" width="7.4" height="15.0" fill="rgb(216,52,12)" rx="2" ry="2" />
<text  x="65.28" y="335.5" ></text>
</g>
<g >
<title>github.com/charmbracelet/x/ansi.stringWidth (3 samples, 1.90%)</title><rect x="196.7" y="197" width="22.4" height="15.0" fill="rgb(253,225,53)" rx="2" ry="2" />
<text  x="199.71" y="207.5" >g..</text>
</g>
<g >
<title>internal/runtime/maps.bitset.first (1 samples, 0.63%)</title><rect x="719.5" y="213" width="7.5" height="15.0" fill="rgb(244,182,43)" rx="2" ry="2" />
<text  x="722.49" y="223.5" ></text>
</g>
<g >
<title>runtime.memequal (1 samples, 0.63%)</title><rect x="353.5" y="181" width="7.5" height="15.0" fill="rgb(206,5,1)" rx="2" ry="2" />
<text  x="356.54" y="191.5" ></text>
</g>
<g >
<title>runtime.gcBgMarkWorker (8 samples, 5.06%)</title><rect x="62.3" y="357" width="59.7" height="15.0" fill="rgb(235,140,33)" rx="2" ry="2" />
<text  x="65.28" y="367.5" >runtim..</text>
</g>
<g >
<title>internal/bytealg.IndexString (1 samples, 0.63%)</title><rect x="861.4" y="149" width="7.5" height="15.0" fill="rgb(212,35,8)" rx="2" ry="2" />
<text  x="864.39" y="159.5" ></text>
</g>
<g >
<title>github.com/charmbracelet/bubbletea.(*standardRenderer).listen (5 samples, 3.16%)</title><rect x="10.0" y="357" width="37.3" height="15.0" fill="rgb(224,87,21)" rx="2" ry="2" />
<text  x="13.00" y="367.5" >git..</text>
</g>
<g >
<title>internal/runtime/syscall.Syscall6 (1 samples, 0.63%)</title><rect x="181.8" y="133" width="7.4" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="184.77" y="143.5" ></text>
</g>
<g >
<title>runtime.growslice (2 samples, 1.27%)</title><rect x="1070.5" y="85" width="14.9" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="1073.51" y="95.5" ></text>
</g>
<g >
<title>runtime.convTstring (1 samples, 0.63%)</title><rect x="771.8" y="213" width="7.4" height="15.0" fill="rgb(224,89,21)" rx="2" ry="2" />
<text  x="774.77" y="223.5" ></text>
</g>
<g >
<title>github.com/charmbracelet/lipgloss.Style.getAsInt (1 samples, 0.63%)</title><rect x="577.6" y="197" width="7.5" height="15.0" fill="rgb(240,162,38)" rx="2" ry="2" />
<text  x="580.59" y="207.5" ></text>
</g>
<g >
<title>github.com/rivo/uniseg.propertySearch[go.shape.[3]int] (3 samples, 1.90%)</title><rect x="301.3" y="165" width="22.4" height="15.0" fill="rgb(225,96,22)" rx="2" ry="2" />
<text  x="304.27" y="175.5" >g..</text>
</g>
<g >
<title>runtime.newobject (1 samples, 0.63%)</title><rect x="405.8" y="229" width="7.5" height="15.0" fill="rgb(221,75,18)" rx="2" ry="2" />
<text  x="408.82" y="239.5" ></text>
</g>
<g >
<title>path/filepath.walk (1 samples, 0.63%)</title><rect x="122.0" y="261" width="7.5" height="15.0" fill="rgb(248,200,48)" rx="2" ry="2" />
<text  x="125.03" y="271.5" ></text>
</g>
<g >
<title>runtime.mPark (1 samples, 0.63%)</title><rect x="1145.2" y="293" width="7.5" height="15.0" fill="rgb(254,226,54)" rx="2" ry="2" />
<text  x="1148.19" y="303.5" ></text>
</g>
<g >
<title>runtime.(*mcentral).grow (1 samples, 0.63%)</title><rect x="405.8" y="133" width="7.5" height="15.0" fill="rgb(233,130,31)" rx="2" ry="2" />
<text  x="408.82" y="143.5" ></text>
</g>
<g >
<title>encoding/json.arrayEncoder.encode (3 samples, 1.90%)</title><rect x="159.4" y="133" width="22.4" height="15.0" fill="rgb(216,55,13)" rx="2" ry="2" />
<text  x="162.37" y="143.5" >e..</text>
</g>
<g >
<title>runtime.duffcopy (7 samples, 4.43%)</title><rect x="607.5" y="197" width="52.2" height="15.0" fill="rgb(248,197,47)" rx="2" ry="2" />
<text  x="610.47" y="207.5" >runti..</text>
</g>
<g >
<title>runtime.mapaccess2_faststr (4 samples, 2.53%)</title><rect x="779.2" y="213" width="29.9" height="15.0" fill="rgb(238,152,36)" rx="2" ry="2" />
<text  x="782.24" y="223.5" >ru..</text>
</g>
<g >
<title>github.com/schollz/2n/internal/views.getHexString (1 samples, 0.63%)</title><rect x="898.7" y="261" width="7.5" height="15.0" fill="rgb(249,204,48)" rx="2" ry="2" />
<text  x="901.73" y="271.5" ></text>
</g>
<g >
<title>strconv.AppendInt (1 samples, 0.63%)</title><rect x="144.4" y="69" width="7.5" height="15.0" fill="rgb(250,210,50)" rx="2" ry="2" />
<text  x="147.43" y="79.5" ></text>
</g>
<g >
<title>github.com/charmbracelet/lipgloss.padLeft (1 samples, 0.63%)</title><rect x="338.6" y="245" width="7.5" height="15.0" fill="rgb(218,61,14)" rx="2" ry="2" />
<text  x="341.61" y="255.5" ></text>
</g>
<g >
<title>github.com/charmbracelet/lipgloss.Style.Render (19 samples, 12.03%)</title><rect x="196.7" y="245" width="141.9" height="15.0" fill="rgb(224,88,21)" rx="2" ry="2" />
<text  x="199.71" y="255.5" >github.com/charmbr..</text>
</g>
<g >
<title>github.com/charmbracelet/lipgloss.alignTextHorizontal (6 samples, 3.80%)</title><rect x="226.6" y="229" width="44.8" height="15.0" fill="rgb(231,123,29)" rx="2" ry="2" />
<text  x="229.58" y="239.5" >gith..</text>
</g>
<g >
<title>github.com/schollz/2n/internal/views.renderAnimatedBlocks (1 samples, 0.63%)</title><rect x="913.7" y="261" width="7.4" height="15.0" fill="rgb(249,203,48)" rx="2" ry="2" />
<text  x="916.67" y="271.5" ></text>
</g>
<g >
<title>bytes.growSlice (1 samples, 0.63%)</title><rect x="129.5" y="53" width="7.5" height="15.0" fill="rgb(215,47,11)" rx="2" ry="2" />
<text  x="132.49" y="63.5" ></text>
</g>
<g >
<title>runtime.mallocgc (1 samples, 0.63%)</title><rect x="771.8" y="197" width="7.4" height="15.0" fill="rgb(241,169,40)" rx="2" ry="2" />
<text  x="774.77" y="207.5" ></text>
</g>
<g >
<title>github.com/schollz/2n/internal/views.RenderSplashScreen (1 samples, 0.63%)</title><rect x="913.7" y="277" width="7.4" height="15.0" fill="rgb(231,122,29)" rx="2" ry="2" />
<text  x="916.67" y="287.5" ></text>
</g>
<g >
<title>github.com/charmbracelet/x/ansi/parser.TransitionTable.Transition (1 samples, 0.63%)</title><rect x="219.1" y="197" width="7.5" height="15.0" fill="rgb(237,149,35)" rx="2" ry="2" />
<text  x="222.11" y="207.5" ></text>
</g>
<g >
<title>runtime.stealWork (2 samples, 1.27%)</title><rect x="1167.6" y="293" width="14.9" height="15.0" fill="rgb(253,224,53)" rx="2" ry="2" />
<text  x="1170.59" y="303.5" ></text>
</g>
<g >
<title>runtime.mallocgcSmallScanHeader (1 samples, 0.63%)</title><rect x="405.8" y="197" width="7.5" height="15.0" fill="rgb(237,150,35)" rx="2" ry="2" />
<text  x="408.82" y="207.5" ></text>
</g>
<g >
<title>encoding/json.arrayEncoder.encode (4 samples, 2.53%)</title><rect x="129.5" y="133" width="29.9" height="15.0" fill="rgb(216,55,13)" rx="2" ry="2" />
<text  x="132.49" y="143.5" >en..</text>
</g>
<g >
<title>main.TrackerModel.View (98 samples, 62.03%)</title><rect x="189.2" y="293" width="731.9" height="15.0" fill="rgb(208,17,4)" rx="2" ry="2" />
<text  x="192.24" y="303.5" >main.TrackerModel.View</text>
</g>
<g >
<title>runtime.mallocgc (1 samples, 0.63%)</title><rect x="562.7" y="133" width="7.4" height="15.0" fill="rgb(241,169,40)" rx="2" ry="2" />
<text  x="565.66" y="143.5" ></text>
</g>
<g >
<title>github.com/schollz/2n/internal/views.renderPhraseCell (64 samples, 40.51%)</title><rect x="413.3" y="245" width="478.0" height="15.0" fill="rgb(223,85,20)" rx="2" ry="2" />
<text  x="416.29" y="255.5" >github.com/schollz/2n/internal/views.renderPhraseCell</text>
</g>
<g >
<title>github.com/rivo/uniseg.propertySearch[go.shape.[3]int] (1 samples, 0.63%)</title><rect x="204.2" y="149" width="7.4" height="15.0" fill="rgb(225,96,22)" rx="2" ry="2" />
<text  x="207.18" y="159.5" ></text>
</g>
<g >
<title>encoding/json.arrayEncoder.encode (2 samples, 1.27%)</title><rect x="159.4" y="101" width="14.9" height="15.0" fill="rgb(216,55,13)" rx="2" ry="2" />
<text  x="162.37" y="111.5" ></text>
</g>
<g >
<title>github.com/charmbracelet/lipgloss.Style.getAsColor (1 samples, 0.63%)</title><rect x="540.3" y="181" width="7.4" height="15.0" fill="rgb(220,72,17)" rx="2" ry="2" />
<text  x="543.25" y="191.5" ></text>
</g>
<g >
<title>runtime.(*sysMemStat).add (1 samples, 0.63%)</title><rect x="323.7" y="37" width="7.4" height="15.0" fill="rgb(236,143,34)" rx="2" ry="2" />
<text  x="326.67" y="47.5" ></text>
</g>
<g >
<title>github.com/rivo/uniseg.runeWidth (2 samples, 1.27%)</title><rect x="278.9" y="181" width="14.9" height="15.0" fill="rgb(235,140,33)" rx="2" ry="2" />
<text  x="281.86" y="191.5" ></text>
</g>
<g >
<title>runtime.newarray (1 samples, 0.63%)</title><rect x="398.4" y="133" width="7.4" height="15.0" fill="rgb(239,160,38)" rx="2" ry="2" />
<text  x="401.35" y="143.5" ></text>
</g>
<g >
<title>strings.Index (1 samples, 0.63%)</title><rect x="861.4" y="181" width="7.5" height="15.0" fill="rgb(234,137,32)" rx="2" ry="2" />
<text  x="864.39" y="191.5" ></text>
</g>
<g >
<title>runtime.mPark (1 samples, 0.63%)</title><rect x="1122.8" y="293" width="7.5" height="15.0" fill="rgb(254,226,54)" rx="2" ry="2" />
<text  x="1125.78" y="303.5" ></text>
</g>
<g >
<title>runtime.bgsweep (2 samples, 1.27%)</title><rect x="47.3" y="357" width="15.0" height="15.0" fill="rgb(240,165,39)" rx="2" ry="2" />
<text  x="50.34" y="367.5" ></text>
</g>
<g >
<title>path/filepath.walk (1 samples, 0.63%)</title><rect x="122.0" y="293" width="7.5" height="15.0" fill="rgb(248,200,48)" rx="2" ry="2" />
<text  x="125.03" y="303.5" ></text>
</g>
<g >
<title>runtime.nextFreeFast (1 samples, 0.63%)</title><rect x="712.0" y="165" width="7.5" height="15.0" fill="rgb(227,102,24)" rx="2" ry="2" />
<text  x="715.03" y="175.5" ></text>
</g>
<g >
<title>encoding/json.intEncoder (1 samples, 0.63%)</title><rect x="166.8" y="85" width="7.5" height="15.0" fill="rgb(251,214,51)" rx="2" ry="2" />
<text  x="169.84" y="95.5" ></text>
</g>
<g >
<title>internal/runtime/syscall.Syscall6 (1 samples, 0.63%)</title><rect x="122.0" y="69" width="7.5" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="125.03" y="79.5" ></text>
</g>
<g >
<title>runtime.ifaceeq (1 samples, 0.63%)</title><rect x="659.7" y="197" width="7.5" height="15.0" fill="rgb(241,166,39)" rx="2" ry="2" />
<text  x="662.75" y="207.5" ></text>
</g>
<g >
<title>runtime.futexsleep (1 samples, 0.63%)</title><rect x="1122.8" y="261" width="7.5" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="1125.78" y="271.5" ></text>
</g>
<g >
<title>internal/runtime/maps.newGroups (1 samples, 0.63%)</title><rect x="398.4" y="165" width="7.4" height="15.0" fill="rgb(246,192,46)" rx="2" ry="2" />
<text  x="401.35" y="175.5" ></text>
</g>
<g >
<title>runtime.growslice (1 samples, 0.63%)</title><rect x="891.3" y="229" width="7.4" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="894.27" y="239.5" ></text>
</g>
<g >
<title>encoding/json.stateBeginValue (1 samples, 0.63%)</title><rect x="958.5" y="117" width="7.4" height="15.0" fill="rgb(245,188,44)" rx="2" ry="2" />
<text  x="961.48" y="127.5" ></text>
</g>
<g >
<title>github.com/muesli/termenv.Style.Foreground (3 samples, 1.90%)</title><rect x="697.1" y="213" width="22.4" height="15.0" fill="rgb(244,183,43)" rx="2" ry="2" />
<text  x="700.09" y="223.5" >g..</text>
</g>
<g >
<title>github.com/schollz/2n/internal/views.RenderPhraseView (97 samples, 61.39%)</title><rect x="189.2" y="277" width="724.5" height="15.0" fill="rgb(205,3,0)" rx="2" ry="2" />
<text  x="192.24" y="287.5" >github.com/schollz/2n/internal/views.RenderPhraseView</text>
</g>
<g >
<title>runtime.(*mspan).base (1 samples, 0.63%)</title><rect x="114.6" y="277" width="7.4" height="15.0" fill="rgb(224,91,21)" rx="2" ry="2" />
<text  x="117.56" y="287.5" ></text>
</g>
<g >
<title>github.com/rivo/uniseg.transitionGraphemeState (1 samples, 0.63%)</title><rect x="24.9" y="277" width="7.5" height="15.0" fill="rgb(208,17,4)" rx="2" ry="2" />
<text  x="27.94" y="287.5" ></text>
</g>
<g >
<title>runtime.(*gcBits).bitp (2 samples, 1.27%)</title><rect x="69.7" y="277" width="15.0" height="15.0" fill="rgb(251,214,51)" rx="2" ry="2" />
<text  x="72.75" y="287.5" ></text>
</g>
<g >
<title>runtime.(*mheap).alloc.func1 (1 samples, 0.63%)</title><rect x="405.8" y="85" width="7.5" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="408.82" y="95.5" ></text>
</g>
<g >
<title>runtime.(*mheap).alloc (1 samples, 0.63%)</title><rect x="323.7" y="101" width="7.4" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="326.67" y="111.5" ></text>
</g>
<g >
<title>github.com/charmbracelet/bubbletea.(*Program).Run (106 samples, 67.09%)</title><rect x="129.5" y="325" width="791.6" height="15.0" fill="rgb(207,10,2)" rx="2" ry="2" />
<text  x="132.49" y="335.5" >github.com/charmbracelet/bubbletea.(*Program).Run</text>
</g>
<g >
<title>runtime.futex (1 samples, 0.63%)</title><rect x="1145.2" y="245" width="7.5" height="15.0" fill="rgb(237,150,35)" rx="2" ry="2" />
<text  x="1148.19" y="255.5" ></text>
</g>
<g >
<title>github.com/charmbracelet/x/ansi.stringWidth (1 samples, 0.63%)</title><rect x="17.5" y="325" width="7.4" height="15.0" fill="rgb(253,225,53)" rx="2" ry="2" />
<text  x="20.47" y="335.5" ></text>
</g>
<g >
<title>reflect.Value.IsNil (1 samples, 0.63%)</title><rect x="174.3" y="117" width="7.5" height="15.0" fill="rgb(250,207,49)" rx="2" ry="2" />
<text  x="177.30" y="127.5" ></text>
</g>
<g >
<title>runtime.memequal0 (1 samples, 0.63%)</title><rect x="659.7" y="181" width="7.5" height="15.0" fill="rgb(246,188,45)" rx="2" ry="2" />
<text  x="662.75" y="191.5" ></text>
</g>
<g >
<title>github.com/schollz/2n/internal/views.RenderHeader (1 samples, 0.63%)</title><rect x="346.1" y="245" width="7.4" height="15.0" fill="rgb(228,109,26)" rx="2" ry="2" />
<text  x="349.08" y="255.5" ></text>
</g>
<g >
<title>github.com/schollz/2n/internal/supercollider.HasRequiredExtensions (1 samples, 0.63%)</title><rect x="122.0" y="341" width="7.5" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="125.03" y="351.5" ></text>
</g>
<g >
<title>path/filepath.walk (1 samples, 0.63%)</title><rect x="122.0" y="245" width="7.5" height="15.0" fill="rgb(248,200,48)" rx="2" ry="2" />
<text  x="125.03" y="255.5" ></text>
</g>
<g >
<title>runtime.resetspinning (1 samples, 0.63%)</title><rect x="1182.5" y="309" width="7.5" height="15.0" fill="rgb(225,95,22)" rx="2" ry="2" />
<text  x="1185.53" y="319.5" ></text>
</g>
<g >
<title>fmt.(*pp).fmtString (2 samples, 1.27%)</title><rect x="592.5" y="133" width="15.0" height="15.0" fill="rgb(226,99,23)" rx="2" ry="2" />
<text  x="595.53" y="143.5" ></text>
</g>
<g >
<title>encoding/json.(*decodeState).array (22 samples, 13.92%)</title><rect x="928.6" y="213" width="164.3" height="15.0" fill="rgb(220,72,17)" rx="2" ry="2" />
<text  x="931.61" y="223.5" >encoding/json.(*decod..</text>
</g>
<g >
<title>runtime.memclrNoHeapPointers (1 samples, 0.63%)</title><rect x="129.5" y="37" width="7.5" height="15.0" fill="rgb(252,219,52)" rx="2" ry="2" />
<text  x="132.49" y="47.5" ></text>
</g>
<g >
<title>github.com/rivo/uniseg.FirstGraphemeClusterInString (6 samples, 3.80%)</title><rect x="278.9" y="197" width="44.8" height="15.0" fill="rgb(237,148,35)" rx="2" ry="2" />
<text  x="281.86" y="207.5" >gith..</text>
</g>
<g >
<title>runtime.growslice (1 samples, 0.63%)</title><rect x="383.4" y="213" width="7.5" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="386.42" y="223.5" ></text>
</g>
<g >
<title>github.com/rivo/uniseg.propertySearch[go.shape.[3]int] (1 samples, 0.63%)</title><rect x="24.9" y="261" width="7.5" height="15.0" fill="rgb(225,96,22)" rx="2" ry="2" />
<text  x="27.94" y="271.5" ></text>
</g>
<g >
<title>runtime.findRunnable (6 samples, 3.80%)</title><rect x="1137.7" y="309" width="44.8" height="15.0" fill="rgb(219,64,15)" rx="2" ry="2" />
<text  x="1140.72" y="319.5" >runt..</text>
</g>
<g >
<title>github.com/schollz/2n/internal/views.getCachedStyled (63 samples, 39.87%)</title><rect x="413.3" y="229" width="470.5" height="15.0" fill="rgb(235,141,33)" rx="2" ry="2" />
<text  x="416.29" y="239.5" >github.com/schollz/2n/internal/views.getCachedStyled</text>
</g>
<g >
<title>internal/runtime/syscall.Syscall6 (1 samples, 0.63%)</title><rect x="1160.1" y="261" width="7.5" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="1163.13" y="271.5" ></text>
</g>
<g >
<title>github.com/rivo/uniseg.runeWidth (2 samples, 1.27%)</title><rect x="226.6" y="165" width="14.9" height="15.0" fill="rgb(235,140,33)" rx="2" ry="2" />
<text  x="229.58" y="175.5" ></text>
</g>
<g >
<title>reflect.growslice (3 samples, 1.90%)</title><rect x="1063.0" y="101" width="22.4" height="15.0" fill="rgb(231,120,28)" rx="2" ry="2" />
<text  x="1066.04" y="111.5" >r..</text>
</g>
<g >
<title>github.com/rivo/uniseg.propertySearch[go.shape.[3]int] (1 samples, 0.63%)</title><rect x="17.5" y="277" width="7.4" height="15.0" fill="rgb(225,96,22)" rx="2" ry="2" />
<text  x="20.47" y="287.5" ></text>
</g>
<g >
<title>runtime.mallocgc (1 samples, 0.63%)</title><rect x="405.8" y="213" width="7.5" height="15.0" fill="rgb(241,169,40)" rx="2" ry="2" />
<text  x="408.82" y="223.5" ></text>
</g>
<g >
<title>github.com/rivo/uniseg.propertySearch[go.shape.[3]int] (1 samples, 0.63%)</title><rect x="39.9" y="277" width="7.4" height="15.0" fill="rgb(225,96,22)" rx="2" ry="2" />
<text  x="42.87" y="287.5" ></text>
</g>
<g >
<title>path/filepath.Walk (1 samples, 0.63%)</title><rect x="122.0" y="309" width="7.5" height="15.0" fill="rgb(205,1,0)" rx="2" ry="2" />
<text  x="125.03" y="319.5" ></text>
</g>
<g >
<title>encoding/json.sliceEncoder.encode (3 samples, 1.90%)</title><rect x="159.4" y="149" width="22.4" height="15.0" fill="rgb(213,40,9)" rx="2" ry="2" />
<text  x="162.37" y="159.5" >e..</text>
</g>
<g >
<title>runtime.netpoll (2 samples, 1.27%)</title><rect x="1152.7" y="293" width="14.9" height="15.0" fill="rgb(231,119,28)" rx="2" ry="2" />
<text  x="1155.66" y="303.5" ></text>
</g>
<g >
<title>runtime.mallocgcLarge (1 samples, 0.63%)</title><rect x="398.4" y="101" width="7.4" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="401.35" y="111.5" ></text>
</g>
<g >
<title>github.com/schollz/2n/internal/views.RenderSamplerPhraseView (94 samples, 59.49%)</title><rect x="196.7" y="261" width="702.0" height="15.0" fill="rgb(228,109,26)" rx="2" ry="2" />
<text  x="199.71" y="271.5" >github.com/schollz/2n/internal/views.RenderSamplerPhraseView</text>
</g>
<g >
<title>runtime.duffcopy (7 samples, 4.43%)</title><rect x="473.0" y="181" width="52.3" height="15.0" fill="rgb(248,197,47)" rx="2" ry="2" />
<text  x="476.04" y="191.5" >runti..</text>
</g>
<g >
<title>fmt.(*fmt).fmtInteger (1 samples, 0.63%)</title><rect x="428.2" y="133" width="7.5" height="15.0" fill="rgb(249,203,48)" rx="2" ry="2" />
<text  x="431.23" y="143.5" ></text>
</g>
<g >
<title>reflect.Value.Int (1 samples, 0.63%)</title><rect x="151.9" y="85" width="7.5" height="15.0" fill="rgb(212,36,8)" rx="2" ry="2" />
<text  x="154.90" y="95.5" ></text>
</g>
<g >
<title>runtime.scanobject (6 samples, 3.80%)</title><rect x="69.7" y="293" width="44.9" height="15.0" fill="rgb(233,131,31)" rx="2" ry="2" />
<text  x="72.75" y="303.5" >runt..</text>
</g>
<g >
<title>os.(*File).write (1 samples, 0.63%)</title><rect x="181.8" y="213" width="7.4" height="15.0" fill="rgb(248,201,48)" rx="2" ry="2" />
<text  x="184.77" y="223.5" ></text>
</g>
<g >
<title>type:.eq.github.com/charmbracelet/lipgloss.Border (2 samples, 1.27%)</title><rect x="525.3" y="181" width="15.0" height="15.0" fill="rgb(243,175,41)" rx="2" ry="2" />
<text  x="528.32" y="191.5" ></text>
</g>
<g >
<title>strings.(*Builder).WriteString (1 samples, 0.63%)</title><rect x="906.2" y="261" width="7.5" height="15.0" fill="rgb(251,212,50)" rx="2" ry="2" />
<text  x="909.20" y="271.5" ></text>
</g>
<g >
<title>runtime.futex (1 samples, 0.63%)</title><rect x="1122.8" y="245" width="7.5" height="15.0" fill="rgb(237,150,35)" rx="2" ry="2" />
<text  x="1125.78" y="255.5" ></text>
</g>
<g >
<title>internal/runtime/maps.ctrlGroup.matchH2 (1 samples, 0.63%)</title><rect x="390.9" y="229" width="7.5" height="15.0" fill="rgb(221,77,18)" rx="2" ry="2" />
<text  x="393.89" y="239.5" ></text>
</g>
<g >
<title>runtime.(*mspan).base (1 samples, 0.63%)</title><rect x="84.7" y="277" width="7.5" height="15.0" fill="rgb(224,91,21)" rx="2" ry="2" />
<text  x="87.68" y="287.5" ></text>
</g>
<g >
<title>encoding/json.(*decodeState).rescanLiteral (1 samples, 0.63%)</title><rect x="1040.6" y="117" width="7.5" height="15.0" fill="rgb(238,153,36)" rx="2" ry="2" />
<text  x="1043.63" y="127.5" ></text>
</g>
<g >
<title>github.com/rivo/uniseg.propertySearch[go.shape.[3]int] (1 samples, 0.63%)</title><rect x="286.3" y="165" width="7.5" height="15.0" fill="rgb(225,96,22)" rx="2" ry="2" />
<text  x="289.33" y="175.5" ></text>
</g>
<g >
<title>encoding/json.stateBeginValue (1 samples, 0.63%)</title><rect x="1107.8" y="261" width="7.5" height="15.0" fill="rgb(245,188,44)" rx="2" ry="2" />
<text  x="1110.85" y="271.5" ></text>
</g>
<g >
<title>internal/runtime/maps.(*table).rehash (4 samples, 2.53%)</title><rect x="816.6" y="197" width="29.9" height="15.0" fill="rgb(210,23,5)" rx="2" ry="2" />
<text  x="819.58" y="207.5" >in..</text>
</g>
<g >
<title>os.(*File).write (1 samples, 0.63%)</title><rect x="10.0" y="325" width="7.5" height="15.0" fill="rgb(248,201,48)" rx="2" ry="2" />
<text  x="13.00" y="335.5" ></text>
</g>
<g >
<title>encoding/json.(*encodeState).reflectValue (3 samples, 1.90%)</title><rect x="159.4" y="197" width="22.4" height="15.0" fill="rgb(239,156,37)" rx="2" ry="2" />
<text  x="162.37" y="207.5" >e..</text>
</g>
<g >
<title>path/filepath.walk (1 samples, 0.63%)</title><rect x="122.0" y="277" width="7.5" height="15.0" fill="rgb(248,200,48)" rx="2" ry="2" />
<text  x="125.03" y="287.5" ></text>
</g>
<g >
<title>runtime.systemstack (7 samples, 4.43%)</title><rect x="69.7" y="341" width="52.3" height="15.0" fill="rgb(206,6,1)" rx="2" ry="2" />
<text  x="72.75" y="351.5" >runti..</text>
</g>
<g >
<title>runtime.stackfree (1 samples, 0.63%)</title><rect x="1115.3" y="293" width="7.5" height="15.0" fill="rgb(229,112,27)" rx="2" ry="2" />
<text  x="1118.32" y="303.5" ></text>
</g>
<g >
<title>encoding/json.state1 (1 samples, 0.63%)</title><rect x="1100.4" y="261" width="7.4" height="15.0" fill="rgb(250,209,50)" rx="2" ry="2" />
<text  x="1103.38" y="271.5" ></text>
</g>
<g >
<title>runtime.releasem (1 samples, 0.63%)</title><rect x="771.8" y="181" width="7.4" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="774.77" y="191.5" ></text>
</g>
<g >
<title>github.com/rivo/uniseg.propertySearch[go.shape.[3]int] (1 samples, 0.63%)</title><rect x="211.6" y="149" width="7.5" height="15.0" fill="rgb(225,96,22)" rx="2" ry="2" />
<text  x="214.65" y="159.5" ></text>
</g>
<g >
<title>runtime.memequal (1 samples, 0.63%)</title><rect x="465.6" y="149" width="7.4" height="15.0" fill="rgb(206,5,1)" rx="2" ry="2" />
<text  x="468.57" y="159.5" ></text>
</g>
<g >
<title>main.initialModel (26 samples, 16.46%)</title><rect x="921.1" y="325" width="194.2" height="15.0" fill="rgb(217,55,13)" rx="2" ry="2" />
<text  x="924.14" y="335.5" >main.initialModel</text>
</g>
<g >
<title>encoding/json.checkValid (3 samples, 1.90%)</title><rect x="1092.9" y="277" width="22.4" height="15.0" fill="rgb(239,156,37)" rx="2" ry="2" />
<text  x="1095.91" y="287.5" >e..</text>
</g>
<g >
<title>internal/runtime/maps.(*table).rehash (1 samples, 0.63%)</title><rect x="398.4" y="213" width="7.4" height="15.0" fill="rgb(210,23,5)" rx="2" ry="2" />
<text  x="401.35" y="223.5" ></text>
</g>
<g >
<title>runtime.(*mcentral).cacheSpan (1 samples, 0.63%)</title><rect x="405.8" y="149" width="7.5" height="15.0" fill="rgb(244,179,42)" rx="2" ry="2" />
<text  x="408.82" y="159.5" ></text>
</g>
<g >
<title>runtime.(*mheap).allocSpan (1 samples, 0.63%)</title><rect x="323.7" y="53" width="7.4" height="15.0" fill="rgb(233,132,31)" rx="2" ry="2" />
<text  x="326.67" y="63.5" ></text>
</g>
<g >
<title>github.com/rivo/uniseg.transitionGraphemeState (4 samples, 2.53%)</title><rect x="293.8" y="181" width="29.9" height="15.0" fill="rgb(208,17,4)" rx="2" ry="2" />
<text  x="296.80" y="191.5" >gi..</text>
</g>
<g >
<title>strings.Replace (1 samples, 0.63%)</title><rect x="861.4" y="197" width="7.5" height="15.0" fill="rgb(218,62,15)" rx="2" ry="2" />
<text  x="864.39" y="207.5" ></text>
</g>
<g >
<title>github.com/schollz/2n/internal/model.(*Model).initializeDefaultData (1 samples, 0.63%)</title><rect x="921.1" y="293" width="7.5" height="15.0" fill="rgb(210,26,6)" rx="2" ry="2" />
<text  x="924.14" y="303.5" ></text>
</g>
<g >
<title>fmt.(*pp).fmtString (1 samples, 0.63%)</title><rect x="435.7" y="165" width="7.5" height="15.0" fill="rgb(226,99,23)" rx="2" ry="2" />
<text  x="438.70" y="175.5" ></text>
</g>
<g >
<title>encoding/json.(*decodeState).array (21 samples, 13.29%)</title><rect x="936.1" y="149" width="156.8" height="15.0" fill="rgb(220,72,17)" rx="2" ry="2" />
<text  x="939.08" y="159.5" >encoding/json.(*deco..</text>
</g>
<g >
<title>runtime.memclrNoHeapPointersChunked (1 samples, 0.63%)</title><rect x="398.4" y="85" width="7.4" height="15.0" fill="rgb(241,169,40)" rx="2" ry="2" />
<text  x="401.35" y="95.5" ></text>
</g>
<g >
<title>github.com/charmbracelet/x/ansi.StringWidth (6 samples, 3.80%)</title><rect x="226.6" y="213" width="44.8" height="15.0" fill="rgb(210,26,6)" rx="2" ry="2" />
<text  x="229.58" y="223.5" >gith..</text>
</g>
<g >
<title>encoding/json.(*encodeState).marshal (4 samples, 2.53%)</title><rect x="129.5" y="213" width="29.9" height="15.0" fill="rgb(207,12,3)" rx="2" ry="2" />
<text  x="132.49" y="223.5" >en..</text>
</g>
<g >
<title>runtime.(*mheap).alloc (1 samples, 0.63%)</title><rect x="405.8" y="117" width="7.5" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="408.82" y="127.5" ></text>
</g>
<g >
<title>runtime.(*mcache).refill (1 samples, 0.63%)</title><rect x="405.8" y="165" width="7.5" height="15.0" fill="rgb(232,124,29)" rx="2" ry="2" />
<text  x="408.82" y="175.5" ></text>
</g>
<g >
<title>runtime.mcall (10 samples, 6.33%)</title><rect x="1115.3" y="357" width="74.7" height="15.0" fill="rgb(213,40,9)" rx="2" ry="2" />
<text  x="1118.32" y="367.5" >runtime...</text>
</g>
<g >
<title>runtime.heapSetTypeNoHeader (2 samples, 1.27%)</title><rect x="697.1" y="165" width="14.9" height="15.0" fill="rgb(216,54,12)" rx="2" ry="2" />
<text  x="700.09" y="175.5" ></text>
</g>
<g >
<title>runtime.mallocgc (1 samples, 0.63%)</title><rect x="323.7" y="197" width="7.4" height="15.0" fill="rgb(241,169,40)" rx="2" ry="2" />
<text  x="326.67" y="207.5" ></text>
</g>
<g >
<title>strconv.formatBits (1 samples, 0.63%)</title><rect x="144.4" y="53" width="7.5" height="15.0" fill="rgb(218,64,15)" rx="2" ry="2" />
<text  x="147.43" y="63.5" ></text>
</g>
<g >
<title>syscall.Syscall6 (1 samples, 0.63%)</title><rect x="122.0" y="101" width="7.5" height="15.0" fill="rgb(216,52,12)" rx="2" ry="2" />
<text  x="125.03" y="111.5" ></text>
</g>
<g >
<title>runtime.gcDrainMarkWorkerDedicated (6 samples, 3.80%)</title><rect x="69.7" y="325" width="44.9" height="15.0" fill="rgb(206,5,1)" rx="2" ry="2" />
<text  x="72.75" y="335.5" >runt..</text>
</g>
<g >
<title>main.main (132 samples, 83.54%)</title><rect x="129.5" y="341" width="985.8" height="15.0" fill="rgb(227,101,24)" rx="2" ry="2" />
<text  x="132.49" y="351.5" >main.main</text>
</g>
<g >
<title>runtime.mallocgcSmallNoscan (2 samples, 1.27%)</title><rect x="846.5" y="165" width="14.9" height="15.0" fill="rgb(239,156,37)" rx="2" ry="2" />
<text  x="849.46" y="175.5" ></text>
</g>
<g >
<title>runtime.duffcopy (1 samples, 0.63%)</title><rect x="913.7" y="197" width="7.4" height="15.0" fill="rgb(248,197,47)" rx="2" ry="2" />
<text  x="916.67" y="207.5" ></text>
</g>
<g >
<title>strings.ReplaceAll (1 samples, 0.63%)</title><rect x="861.4" y="213" width="7.5" height="15.0" fill="rgb(253,222,53)" rx="2" ry="2" />
<text  x="864.39" y="223.5" ></text>
</g>
<g >
<title>runtime.systemstack (1 samples, 0.63%)</title><rect x="405.8" y="101" width="7.5" height="15.0" fill="rgb(206,6,1)" rx="2" ry="2" />
<text  x="408.82" y="111.5" ></text>
</g>
<g >
<title>runtime.notewakeup (1 samples, 0.63%)</title><rect x="1182.5" y="261" width="7.5" height="15.0" fill="rgb(231,122,29)" rx="2" ry="2" />
<text  x="1185.53" y="271.5" ></text>
</g>
<g >
<title>fmt.(*pp).doPrintf (2 samples, 1.27%)</title><rect x="428.2" y="197" width="15.0" height="15.0" fill="rgb(251,215,51)" rx="2" ry="2" />
<text  x="431.23" y="207.5" ></text>
</g>
<g >
<title>type:.eq.github.com/charmbracelet/lipgloss.Border (1 samples, 0.63%)</title><rect x="353.5" y="197" width="7.5" height="15.0" fill="rgb(243,175,41)" rx="2" ry="2" />
<text  x="356.54" y="207.5" ></text>
</g>
<g >
<title>github.com/charmbracelet/lipgloss.Style.getAsInt (2 samples, 1.27%)</title><rect x="547.7" y="181" width="15.0" height="15.0" fill="rgb(240,162,38)" rx="2" ry="2" />
<text  x="550.72" y="191.5" ></text>
</g>
<g >
<title>github.com/charmbracelet/x/ansi.StringWidth (1 samples, 0.63%)</title><rect x="24.9" y="325" width="7.5" height="15.0" fill="rgb(210,26,6)" rx="2" ry="2" />
<text  x="27.94" y="335.5" ></text>
</g>
<g >
<title>encoding/json.arrayEncoder.encode (4 samples, 2.53%)</title><rect x="129.5" y="101" width="29.9" height="15.0" fill="rgb(216,55,13)" rx="2" ry="2" />
<text  x="132.49" y="111.5" >en..</text>
</g>
<g >
<title>encoding/json.(*encodeState).reflectValue (4 samples, 2.53%)</title><rect x="129.5" y="197" width="29.9" height="15.0" fill="rgb(239,156,37)" rx="2" ry="2" />
<text  x="132.49" y="207.5" >en..</text>
</g>
<g >
<title>encoding/json.arrayEncoder.encode (4 samples, 2.53%)</title><rect x="129.5" y="165" width="29.9" height="15.0" fill="rgb(216,55,13)" rx="2" ry="2" />
<text  x="132.49" y="175.5" >en..</text>
</g>
<g >
<title>encoding/json.(*encodeState).marshal (3 samples, 1.90%)</title><rect x="159.4" y="213" width="22.4" height="15.0" fill="rgb(207,12,3)" rx="2" ry="2" />
<text  x="162.37" y="223.5" >e..</text>
</g>
<g >
<title>runtime.growslice (3 samples, 1.90%)</title><rect x="697.1" y="197" width="22.4" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="700.09" y="207.5" >r..</text>
</g>
<g >
<title>github.com/muesli/termenv.ANSIColor.Sequence (1 samples, 0.63%)</title><rect x="375.9" y="213" width="7.5" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="378.95" y="223.5" ></text>
</g>
<g >
<title>fmt.(*fmt).fmtS (2 samples, 1.27%)</title><rect x="592.5" y="117" width="15.0" height="15.0" fill="rgb(251,213,50)" rx="2" ry="2" />
<text  x="595.53" y="127.5" ></text>
</g>
<g >
<title>runtime.gcMarkTermination.forEachP.func6 (1 samples, 0.63%)</title><rect x="62.3" y="293" width="7.4" height="15.0" fill="rgb(245,186,44)" rx="2" ry="2" />
<text  x="65.28" y="303.5" ></text>
</g>
<g >
<title>internal/runtime/maps.(*table).split (4 samples, 2.53%)</title><rect x="816.6" y="181" width="29.9" height="15.0" fill="rgb(220,71,17)" rx="2" ry="2" />
<text  x="819.58" y="191.5" >in..</text>
</g>
<g >
<title>internal/sync.(*Mutex).Lock (1 samples, 0.63%)</title><rect x="764.3" y="213" width="7.5" height="15.0" fill="rgb(215,48,11)" rx="2" ry="2" />
<text  x="767.30" y="223.5" ></text>
</g>
<g >
<title>encoding/json.arrayEncoder.encode (3 samples, 1.90%)</title><rect x="159.4" y="165" width="22.4" height="15.0" fill="rgb(216,55,13)" rx="2" ry="2" />
<text  x="162.37" y="175.5" >e..</text>
</g>
<g >
<title>encoding/json.sliceEncoder.encode (4 samples, 2.53%)</title><rect x="129.5" y="149" width="29.9" height="15.0" fill="rgb(213,40,9)" rx="2" ry="2" />
<text  x="132.49" y="159.5" >en..</text>
</g>
<g >
<title>runtime.(*mcentral).grow (1 samples, 0.63%)</title><rect x="323.7" y="117" width="7.4" height="15.0" fill="rgb(233,130,31)" rx="2" ry="2" />
<text  x="326.67" y="127.5" ></text>
</g>
<g >
<title>strings.(*Builder).WriteString (2 samples, 1.27%)</title><rect x="323.7" y="229" width="14.9" height="15.0" fill="rgb(251,212,50)" rx="2" ry="2" />
<text  x="326.67" y="239.5" ></text>
</g>
<g >
<title>encoding/json.(*decodeState).scanWhile (2 samples, 1.27%)</title><rect x="951.0" y="133" width="14.9" height="15.0" fill="rgb(246,191,45)" rx="2" ry="2" />
<text  x="954.01" y="143.5" ></text>
</g>
<g >
<title>path/filepath.walk (1 samples, 0.63%)</title><rect x="122.0" y="197" width="7.5" height="15.0" fill="rgb(248,200,48)" rx="2" ry="2" />
<text  x="125.03" y="207.5" ></text>
</g>
<g >
<title>type:.eq.github.com/charmbracelet/lipgloss.Border (2 samples, 1.27%)</title><rect x="458.1" y="165" width="14.9" height="15.0" fill="rgb(243,175,41)" rx="2" ry="2" />
<text  x="461.10" y="175.5" ></text>
</g>
<g >
<title>internal/runtime/maps.ctrlGroup.matchEmptyOrDeleted (2 samples, 1.27%)</title><rect x="831.5" y="165" width="15.0" height="15.0" fill="rgb(219,65,15)" rx="2" ry="2" />
<text  x="834.52" y="175.5" ></text>
</g>
<g >
<title>github.com/charmbracelet/lipgloss.Style.implicitBorders (3 samples, 1.90%)</title><rect x="450.6" y="181" width="22.4" height="15.0" fill="rgb(245,184,44)" rx="2" ry="2" />
<text  x="453.63" y="191.5" >g..</text>
</g>
<g >
<title>encoding/json.(*decodeState).unmarshal (22 samples, 13.92%)</title><rect x="928.6" y="277" width="164.3" height="15.0" fill="rgb(206,4,1)" rx="2" ry="2" />
<text  x="931.61" y="287.5" >encoding/json.(*decod..</text>
</g>
<g >
<title>github.com/charmbracelet/lipgloss.Style.applyBorder (12 samples, 7.59%)</title><rect x="450.6" y="197" width="89.7" height="15.0" fill="rgb(234,134,32)" rx="2" ry="2" />
<text  x="453.63" y="207.5" >github.com..</text>
</g>
<g >
<title>runtime.futex (1 samples, 0.63%)</title><rect x="1182.5" y="229" width="7.5" height="15.0" fill="rgb(237,150,35)" rx="2" ry="2" />
<text  x="1185.53" y="239.5" ></text>
</g>
<g >
<title>encoding/json.sliceEncoder.encode (2 samples, 1.27%)</title><rect x="159.4" y="117" width="14.9" height="15.0" fill="rgb(213,40,9)" rx="2" ry="2" />
<text  x="162.37" y="127.5" ></text>
</g>
<g >
<title>runtime.mapaccess2_fast64 (1 samples, 0.63%)</title><rect x="898.7" y="245" width="7.5" height="15.0" fill="rgb(232,124,29)" rx="2" ry="2" />
<text  x="901.73" y="255.5" ></text>
</g>
<g >
<title>github.com/charmbracelet/lipgloss.Style.applyBorder (1 samples, 0.63%)</title><rect x="353.5" y="213" width="7.5" height="15.0" fill="rgb(234,134,32)" rx="2" ry="2" />
<text  x="356.54" y="223.5" ></text>
</g>
<g >
<title>runtime.(*mcache).releaseAll (1 samples, 0.63%)</title><rect x="62.3" y="229" width="7.4" height="15.0" fill="rgb(227,103,24)" rx="2" ry="2" />
<text  x="65.28" y="239.5" ></text>
</g>
<g >
<title>runtime.mallocgc (3 samples, 1.90%)</title><rect x="697.1" y="181" width="22.4" height="15.0" fill="rgb(241,169,40)" rx="2" ry="2" />
<text  x="700.09" y="191.5" >r..</text>
</g>
<g >
<title>github.com/charmbracelet/x/ansi.StringWidth (7 samples, 4.43%)</title><rect x="271.4" y="229" width="52.3" height="15.0" fill="rgb(210,26,6)" rx="2" ry="2" />
<text  x="274.39" y="239.5" >githu..</text>
</g>
<g >
<title>runtime.growslice (2 samples, 1.27%)</title><rect x="323.7" y="213" width="14.9" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="326.67" y="223.5" ></text>
</g>
<g >
<title>runtime.findRunnable (1 samples, 0.63%)</title><rect x="1122.8" y="309" width="7.5" height="15.0" fill="rgb(219,64,15)" rx="2" ry="2" />
<text  x="1125.78" y="319.5" ></text>
</g>
<g >
<title>runtime.(*mheap).alloc.func1 (1 samples, 0.63%)</title><rect x="323.7" y="69" width="7.4" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="326.67" y="79.5" ></text>
</g>
<g >
<title>all (158 samples, 100%)</title><rect x="10.0" y="373" width="1180.0" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="13.00" y="383.5" ></text>
</g>
<g >
<title>fmt.Sprintf (2 samples, 1.27%)</title><rect x="592.5" y="181" width="15.0" height="15.0" fill="rgb(210,26,6)" rx="2" ry="2" />
<text  x="595.53" y="191.5" ></text>
</g>
<g >
<title>fmt.Sprintf (4 samples, 2.53%)</title><rect x="420.8" y="213" width="29.8" height="15.0" fill="rgb(210,26,6)" rx="2" ry="2" />
<text  x="423.76" y="223.5" >fm..</text>
</g>
<g >
<title>runtime.duffcopy (1 samples, 0.63%)</title><rect x="570.1" y="181" width="7.5" height="15.0" fill="rgb(248,197,47)" rx="2" ry="2" />
<text  x="573.13" y="191.5" ></text>
</g>
<g >
<title>encoding/json.indirect (6 samples, 3.80%)</title><rect x="980.9" y="101" width="44.8" height="15.0" fill="rgb(246,192,45)" rx="2" ry="2" />
<text  x="983.89" y="111.5" >enco..</text>
</g>
<g >
<title>runtime.greyobject (2 samples, 1.27%)</title><rect x="92.2" y="277" width="14.9" height="15.0" fill="rgb(217,56,13)" rx="2" ry="2" />
<text  x="95.15" y="287.5" ></text>
</g>
<g >
<title>runtime.gcDrain (1 samples, 0.63%)</title><rect x="114.6" y="309" width="7.4" height="15.0" fill="rgb(233,130,31)" rx="2" ry="2" />
<text  x="117.56" y="319.5" ></text>
</g>
<g >
<title>github.com/charmbracelet/x/ansi.truncate (2 samples, 1.27%)</title><rect x="32.4" y="325" width="14.9" height="15.0" fill="rgb(224,88,21)" rx="2" ry="2" />
<text  x="35.41" y="335.5" ></text>
</g>
<g >
<title>path/filepath.walk (1 samples, 0.63%)</title><rect x="122.0" y="229" width="7.5" height="15.0" fill="rgb(248,200,48)" rx="2" ry="2" />
<text  x="125.03" y="239.5" ></text>
</g>
<g >
<title>runtime.gcMarkDone (1 samples, 0.63%)</title><rect x="62.3" y="341" width="7.4" height="15.0" fill="rgb(253,222,53)" rx="2" ry="2" />
<text  x="65.28" y="351.5" ></text>
</g>
<g >
<title>runtime.gcMarkTermination.func4 (1 samples, 0.63%)</title><rect x="62.3" y="261" width="7.4" height="15.0" fill="rgb(218,62,14)" rx="2" ry="2" />
<text  x="65.28" y="271.5" ></text>
</g>
<g >
<title>github.com/charmbracelet/x/ansi.StringWidth (1 samples, 0.63%)</title><rect x="17.5" y="341" width="7.4" height="15.0" fill="rgb(210,26,6)" rx="2" ry="2" />
<text  x="20.47" y="351.5" ></text>
</g>
<g >
<title>encoding/json.(*decodeState).value (22 samples, 13.92%)</title><rect x="928.6" y="197" width="164.3" height="15.0" fill="rgb(233,132,31)" rx="2" ry="2" />
<text  x="931.61" y="207.5" >encoding/json.(*decod..</text>
</g>
<g >
<title>encoding/json.Marshal (4 samples, 2.53%)</title><rect x="129.5" y="229" width="29.9" height="15.0" fill="rgb(238,152,36)" rx="2" ry="2" />
<text  x="132.49" y="239.5" >en..</text>
</g>
<g >
<title>github.com/charmbracelet/lipgloss.Style.applyMargins (4 samples, 2.53%)</title><rect x="540.3" y="197" width="29.8" height="15.0" fill="rgb(241,166,39)" rx="2" ry="2" />
<text  x="543.25" y="207.5" >gi..</text>
</g>
<g >
<title>runtime.futexsleep (1 samples, 0.63%)</title><rect x="1145.2" y="261" width="7.5" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="1148.19" y="271.5" ></text>
</g>
<g >
<title>fmt.(*pp).fmt0x64 (1 samples, 0.63%)</title><rect x="428.2" y="149" width="7.5" height="15.0" fill="rgb(232,128,30)" rx="2" ry="2" />
<text  x="431.23" y="159.5" ></text>
</g>
<g >
<title>main.TrackerModel.Update (8 samples, 5.06%)</title><rect x="129.5" y="293" width="59.7" height="15.0" fill="rgb(216,54,12)" rx="2" ry="2" />
<text  x="132.49" y="303.5" >main.T..</text>
</g>
<g >
<title>strings.(*Builder).WriteString (1 samples, 0.63%)</title><rect x="891.3" y="245" width="7.4" height="15.0" fill="rgb(251,212,50)" rx="2" ry="2" />
<text  x="894.27" y="255.5" ></text>
</g>
<g >
<title>github.com/charmbracelet/bubbletea.(*standardRenderer).flush (1 samples, 0.63%)</title><rect x="10.0" y="341" width="7.5" height="15.0" fill="rgb(228,106,25)" rx="2" ry="2" />
<text  x="13.00" y="351.5" ></text>
</g>
<g >
<title>encoding/json.(*decodeState).value (11 samples, 6.96%)</title><rect x="965.9" y="133" width="82.2" height="15.0" fill="rgb(233,132,31)" rx="2" ry="2" />
<text  x="968.95" y="143.5" >encoding/..</text>
</g>
<g >
<title>encoding/json.(*decodeState).object (22 samples, 13.92%)</title><rect x="928.6" y="245" width="164.3" height="15.0" fill="rgb(252,217,52)" rx="2" ry="2" />
<text  x="931.61" y="255.5" >encoding/json.(*decod..</text>
</g>
<g >
<title>github.com/charmbracelet/lipgloss.Style.Render (1 samples, 0.63%)</title><rect x="913.7" y="245" width="7.4" height="15.0" fill="rgb(224,88,21)" rx="2" ry="2" />
<text  x="916.67" y="255.5" ></text>
</g>
<g >
<title>github.com/charmbracelet/bubbletea.(*Program).eventLoop (106 samples, 67.09%)</title><rect x="129.5" y="309" width="791.6" height="15.0" fill="rgb(227,105,25)" rx="2" ry="2" />
<text  x="132.49" y="319.5" >github.com/charmbracelet/bubbletea.(*Program).eventLoop</text>
</g>
<g >
<title>runtime.makeslice (1 samples, 0.63%)</title><rect x="562.7" y="149" width="7.4" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="565.66" y="159.5" ></text>
</g>
<g >
<title>github.com/rivo/uniseg.FirstGraphemeClusterInString (1 samples, 0.63%)</title><rect x="24.9" y="293" width="7.5" height="15.0" fill="rgb(237,148,35)" rx="2" ry="2" />
<text  x="27.94" y="303.5" ></text>
</g>
<g >
<title>reflect.arrayAt (1 samples, 0.63%)</title><rect x="1085.4" y="133" width="7.5" height="15.0" fill="rgb(252,219,52)" rx="2" ry="2" />
<text  x="1088.44" y="143.5" ></text>
</g>
<g >
<title>github.com/rivo/uniseg.runeWidth (1 samples, 0.63%)</title><rect x="204.2" y="165" width="7.4" height="15.0" fill="rgb(235,140,33)" rx="2" ry="2" />
<text  x="207.18" y="175.5" ></text>
</g>
<g >
<title>runtime.(*mcache).refill (1 samples, 0.63%)</title><rect x="323.7" y="149" width="7.4" height="15.0" fill="rgb(232,124,29)" rx="2" ry="2" />
<text  x="326.67" y="159.5" ></text>
</g>
<g >
<title>github.com/rivo/uniseg.FirstGraphemeCluster (1 samples, 0.63%)</title><rect x="39.9" y="309" width="7.4" height="15.0" fill="rgb(245,186,44)" rx="2" ry="2" />
<text  x="42.87" y="319.5" ></text>
</g>
<g >
<title>syscall.Write (1 samples, 0.63%)</title><rect x="181.8" y="197" width="7.4" height="15.0" fill="rgb(208,18,4)" rx="2" ry="2" />
<text  x="184.77" y="207.5" ></text>
</g>
<g >
<title>runtime.memmove (1 samples, 0.63%)</title><rect x="891.3" y="213" width="7.4" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="894.27" y="223.5" ></text>
</g>
<g >
<title>fmt.(*buffer).writeString (1 samples, 0.63%)</title><rect x="420.8" y="197" width="7.4" height="15.0" fill="rgb(205,1,0)" rx="2" ry="2" />
<text  x="423.76" y="207.5" ></text>
</g>
<g >
<title>runtime.memmove (1 samples, 0.63%)</title><rect x="331.1" y="197" width="7.5" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="334.14" y="207.5" ></text>
</g>
<g >
<title>runtime.schedule (1 samples, 0.63%)</title><rect x="1122.8" y="325" width="7.5" height="15.0" fill="rgb(220,72,17)" rx="2" ry="2" />
<text  x="1125.78" y="335.5" ></text>
</g>
<g >
<title>runtime.(*mcentral).cacheSpan (1 samples, 0.63%)</title><rect x="323.7" y="133" width="7.4" height="15.0" fill="rgb(244,179,42)" rx="2" ry="2" />
<text  x="326.67" y="143.5" ></text>
</g>
<g >
<title>runtime.gcDrain (6 samples, 3.80%)</title><rect x="69.7" y="309" width="44.9" height="15.0" fill="rgb(233,130,31)" rx="2" ry="2" />
<text  x="72.75" y="319.5" >runt..</text>
</g>
<g >
<title>github.com/charmbracelet/x/ansi.Truncate (3 samples, 1.90%)</title><rect x="24.9" y="341" width="22.4" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="27.94" y="351.5" >g..</text>
</g>
<g >
<title>aeshashbody (2 samples, 1.27%)</title><rect x="816.6" y="165" width="14.9" height="15.0" fill="rgb(250,210,50)" rx="2" ry="2" />
<text  x="819.58" y="175.5" ></text>
</g>
<g >
<title>encoding/json.(*decodeState).array (22 samples, 13.92%)</title><rect x="928.6" y="181" width="164.3" height="15.0" fill="rgb(220,72,17)" rx="2" ry="2" />
<text  x="931.61" y="191.5" >encoding/json.(*decod..</text>
</g>
<g >
<title>github.com/schollz/2n/internal/input.handleDown (4 samples, 2.53%)</title><rect x="129.5" y="261" width="29.9" height="15.0" fill="rgb(231,123,29)" rx="2" ry="2" />
<text  x="132.49" y="271.5" >gi..</text>
</g>
<g >
<title>github.com/charmbracelet/lipgloss.Style.getAsBool (1 samples, 0.63%)</title><rect x="570.1" y="197" width="7.5" height="15.0" fill="rgb(213,40,9)" rx="2" ry="2" />
<text  x="573.13" y="207.5" ></text>
</g>
<g >
<title>runtime.mapassign_faststr (1 samples, 0.63%)</title><rect x="398.4" y="229" width="7.4" height="15.0" fill="rgb(238,153,36)" rx="2" ry="2" />
<text  x="401.35" y="239.5" ></text>
</g>
<g >
<title>github.com/rivo/uniseg.FirstGraphemeClusterInString (1 samples, 0.63%)</title><rect x="17.5" y="309" width="7.4" height="15.0" fill="rgb(237,148,35)" rx="2" ry="2" />
<text  x="20.47" y="319.5" ></text>
</g>
<g >
<title>path/filepath.walk (1 samples, 0.63%)</title><rect x="122.0" y="181" width="7.5" height="15.0" fill="rgb(248,200,48)" rx="2" ry="2" />
<text  x="125.03" y="191.5" ></text>
</g>
</g>
</svg>
